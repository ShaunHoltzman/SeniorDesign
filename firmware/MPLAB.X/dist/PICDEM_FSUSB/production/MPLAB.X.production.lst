

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 20 21:24:56 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99                           	dabs	1,0x400,32,_BDT
   100                           	dabs	1,0x500,3,_mouseReport
   101                           	dabs	1,0x428,8,_CtrlTrfData
   102                           	dabs	1,0x420,8,_SetupPkt
   103  0000                     
   104                           	psect	idataBANK0
   105  003348                     __pidataBANK0:
   106                           	opt stack 0
   107                           
   108                           ;initializer for _gforcescale
   109  003348  01                 	db	1
   110  003349  80                 	db	128
   111  00334A  38                 	db	56
   112                           
   113                           ;initializer for _sign
   114  00334B  FC7C               	dw	64636
   115                           
   116                           	psect	idataBANK1
   117  003308                     __pidataBANK1:
   118                           	opt stack 0
   119                           
   120                           ;initializer for _gx
   121  003308  47                 	db	71
   122  003309  58                 	db	88
   123  00330A  3D                 	db	61
   124  00330B  00                 	db	0
   125                           
   126                           ;initializer for _gy
   127  00330C  47                 	db	71
   128  00330D  59                 	db	89
   129  00330E  3D                 	db	61
   130  00330F  00                 	db	0
   131                           
   132                           ;initializer for _gz
   133  003310  47                 	db	71
   134  003311  5A                 	db	90
   135  003312  3D                 	db	61
   136  003313  00                 	db	0
   137                           
   138                           ;initializer for _ax
   139  003314  41                 	db	65
   140  003315  58                 	db	88
   141  003316  3D                 	db	61
   142  003317  00                 	db	0
   143                           
   144                           ;initializer for _ay
   145  003318  41                 	db	65
   146  003319  59                 	db	89
   147  00331A  3D                 	db	61
   148  00331B  00                 	db	0
   149                           
   150                           ;initializer for _az
   151  00331C  41                 	db	65
   152  00331D  5A                 	db	90
   153  00331E  3D                 	db	61
   154  00331F  00                 	db	0
   155                           
   156                           	psect	mediumconst
   157  007EE8                     __pmediumconst:
   158                           	opt stack 0
   159  007EE8  00                 	db	0
   160  007EE9                     _USB_SD_Ptr:
   161                           	opt stack 0
   162  007EE9  FA                 	db	low _sd000
   163  007EEA  7F                 	db	high _sd000
   164  007EEB  F9                 	db	low _sd001
   165  007EEC  7E                 	db	high _sd001
   166  007EED  5F                 	db	low _sd002
   167  007EEE  7F                 	db	high _sd002
   168  007EEF                     __end_of_USB_SD_Ptr:
   169                           	opt stack 0
   170  007EEF  FF                 	db	255
   171  007EF0  00                 	db	0
   172  007EF1  01                 	db	1
   173  007EF2  00                 	db	0
   174  007EF3                     __end_of_xVector:
   175                           	opt stack 0
   176  007EF3  00                 	db	0
   177  007EF4  FF                 	db	255
   178  007EF5  00                 	db	0
   179  007EF6  01                 	db	1
   180  007EF7                     __end_of_yVector:
   181                           	opt stack 0
   182  007EF7                     _USB_CD_Ptr:
   183                           	opt stack 0
   184  007EF7  8D                 	db	low _configDescriptor1
   185  007EF8  7F                 	db	high _configDescriptor1
   186  007EF9                     __end_of_USB_CD_Ptr:
   187                           	opt stack 0
   188  007EF9                     _sd001:
   189                           	opt stack 0
   190  007EF9  34                 	db	52
   191  007EFA  03                 	db	3
   192  007EFB  004D               	dw	77
   193  007EFD  0069               	dw	105
   194  007EFF  0063               	dw	99
   195  007F01  0072               	dw	114
   196  007F03  006F               	dw	111
   197  007F05  0063               	dw	99
   198  007F07  0068               	dw	104
   199  007F09  0069               	dw	105
   200  007F0B  0070               	dw	112
   201  007F0D  0020               	dw	32
   202  007F0F  0054               	dw	84
   203  007F11  0065               	dw	101
   204  007F13  0063               	dw	99
   205  007F15  0068               	dw	104
   206  007F17  006E               	dw	110
   207  007F19  006F               	dw	111
   208  007F1B  006C               	dw	108
   209  007F1D  006F               	dw	111
   210  007F1F  0067               	dw	103
   211  007F21  0079               	dw	121
   212  007F23  0020               	dw	32
   213  007F25  0049               	dw	73
   214  007F27  006E               	dw	110
   215  007F29  0063               	dw	99
   216  007F2B  002E               	dw	46
   217  007F2D                     __end_of_sd001:
   218                           	opt stack 0
   219  007F2D                     _hid_rpt01:
   220                           	opt stack 0
   221  007F2D  05                 	db	5
   222  007F2E  01                 	db	1
   223  007F2F  09                 	db	9
   224  007F30  02                 	db	2
   225  007F31  A1                 	db	161
   226  007F32  01                 	db	1
   227  007F33  09                 	db	9
   228  007F34  01                 	db	1
   229  007F35  A1                 	db	161
   230  007F36  00                 	db	0
   231  007F37  05                 	db	5
   232  007F38  09                 	db	9
   233  007F39  19                 	db	25
   234  007F3A  01                 	db	1
   235  007F3B  29                 	db	41
   236  007F3C  03                 	db	3
   237  007F3D  15                 	db	21
   238  007F3E  00                 	db	0
   239  007F3F  25                 	db	37
   240  007F40  01                 	db	1
   241  007F41  95                 	db	149
   242  007F42  03                 	db	3
   243  007F43  75                 	db	117
   244  007F44  01                 	db	1
   245  007F45  81                 	db	129
   246  007F46  02                 	db	2
   247  007F47  95                 	db	149
   248  007F48  01                 	db	1
   249  007F49  75                 	db	117
   250  007F4A  05                 	db	5
   251  007F4B  81                 	db	129
   252  007F4C  01                 	db	1
   253  007F4D  05                 	db	5
   254  007F4E  01                 	db	1
   255  007F4F  09                 	db	9
   256  007F50  30                 	db	48
   257  007F51  09                 	db	9
   258  007F52  31                 	db	49
   259  007F53  15                 	db	21
   260  007F54  81                 	db	129
   261  007F55  25                 	db	37
   262  007F56  7F                 	db	127
   263  007F57  75                 	db	117
   264  007F58  08                 	db	8
   265  007F59  95                 	db	149
   266  007F5A  02                 	db	2
   267  007F5B  81                 	db	129
   268  007F5C  06                 	db	6
   269  007F5D  C0                 	db	192
   270  007F5E  C0                 	db	192
   271  007F5F                     __end_of_hid_rpt01:
   272                           	opt stack 0
   273  007F5F                     _sd002:
   274                           	opt stack 0
   275  007F5F  2E                 	db	46
   276  007F60  03                 	db	3
   277  007F61  004D               	dw	77
   278  007F63  006F               	dw	111
   279  007F65  0075               	dw	117
   280  007F67  0073               	dw	115
   281  007F69  0065               	dw	101
   282  007F6B  0020               	dw	32
   283  007F6D  0049               	dw	73
   284  007F6F  006E               	dw	110
   285  007F71  0020               	dw	32
   286  007F73  0061               	dw	97
   287  007F75  0020               	dw	32
   288  007F77  0053               	dw	83
   289  007F79  0071               	dw	113
   290  007F7B  0075               	dw	117
   291  007F7D  0061               	dw	97
   292  007F7F  0072               	dw	114
   293  007F81  0065               	dw	101
   294  007F83  0020               	dw	32
   295  007F85  0044               	dw	68
   296  007F87  0065               	dw	101
   297  007F89  006D               	dw	109
   298  007F8B  006F               	dw	111
   299  007F8D                     __end_of_sd002:
   300                           	opt stack 0
   301  007F8D                     _configDescriptor1:
   302                           	opt stack 0
   303  007F8D  09                 	db	9
   304  007F8E  02                 	db	2
   305  007F8F  22                 	db	34
   306  007F90  00                 	db	0
   307  007F91  01                 	db	1
   308  007F92  01                 	db	1
   309  007F93  00                 	db	0
   310  007F94  C0                 	db	192
   311  007F95  32                 	db	50
   312  007F96  09                 	db	9
   313  007F97  04                 	db	4
   314  007F98  00                 	db	0
   315  007F99  00                 	db	0
   316  007F9A  01                 	db	1
   317  007F9B  03                 	db	3
   318  007F9C  01                 	db	1
   319  007F9D  02                 	db	2
   320  007F9E  00                 	db	0
   321  007F9F  09                 	db	9
   322  007FA0  21                 	db	33
   323  007FA1  11                 	db	17
   324  007FA2  01                 	db	1
   325  007FA3  00                 	db	0
   326  007FA4  01                 	db	1
   327  007FA5  22                 	db	34
   328  007FA6  32                 	db	50
   329  007FA7  00                 	db	0
   330  007FA8  07                 	db	7
   331  007FA9  05                 	db	5
   332  007FAA  81                 	db	129
   333  007FAB  03                 	db	3
   334  007FAC  03                 	db	3
   335  007FAD  00                 	db	0
   336  007FAE  01                 	db	1
   337  007FAF                     __end_of_configDescriptor1:
   338                           	opt stack 0
   339  007FAF                     exp@coeff:
   340                           	opt stack 0
   341  007FAF  00                 	db	0
   342  007FB0  80                 	db	128
   343  007FB1  3F                 	db	63
   344  007FB2  72                 	db	114
   345  007FB3  31                 	db	49
   346  007FB4  3F                 	db	63
   347  007FB5  FE                 	db	254
   348  007FB6  75                 	db	117
   349  007FB7  3E                 	db	62
   350  007FB8  58                 	db	88
   351  007FB9  63                 	db	99
   352  007FBA  3D                 	db	61
   353  007FBB  95                 	db	149
   354  007FBC  1D                 	db	29
   355  007FBD  3C                 	db	60
   356  007FBE  C5                 	db	197
   357  007FBF  AE                 	db	174
   358  007FC0  3A                 	db	58
   359  007FC1  79                 	db	121
   360  007FC2  21                 	db	33
   361  007FC3  39                 	db	57
   362  007FC4  94                 	db	148
   363  007FC5  80                 	db	128
   364  007FC6  37                 	db	55
   365  007FC7  93                 	db	147
   366  007FC8  A7                 	db	167
   367  007FC9  35                 	db	53
   368  007FCA  56                 	db	86
   369  007FCB  15                 	db	21
   370  007FCC  34                 	db	52
   371  007FCD                     __end_ofexp@coeff:
   372                           	opt stack 0
   373  007FCD                     log@coeff:
   374                           	opt stack 0
   375  007FCD  00                 	db	0
   376  007FCE  00                 	db	0
   377  007FCF  00                 	db	0
   378  007FD0  00                 	db	0
   379  007FD1  80                 	db	128
   380  007FD2  3F                 	db	63
   381  007FD3  F0                 	db	240
   382  007FD4  FF                 	db	255
   383  007FD5  BE                 	db	190
   384  007FD6  E2                 	db	226
   385  007FD7  A9                 	db	169
   386  007FD8  3E                 	db	62
   387  007FD9  83                 	db	131
   388  007FDA  76                 	db	118
   389  007FDB  BE                 	db	190
   390  007FDC  AE                 	db	174
   391  007FDD  2B                 	db	43
   392  007FDE  3E                 	db	62
   393  007FDF  3C                 	db	60
   394  007FE0  C3                 	db	195
   395  007FE1  BD                 	db	189
   396  007FE2  D2                 	db	210
   397  007FE3  13                 	db	19
   398  007FE4  3D                 	db	61
   399  007FE5  78                 	db	120
   400  007FE6  D3                 	db	211
   401  007FE7  BB                 	db	187
   402  007FE8                     __end_oflog@coeff:
   403                           	opt stack 0
   404  007FE8                     _device_dsc:
   405                           	opt stack 0
   406  007FE8  12                 	db	18
   407  007FE9  01                 	db	1
   408  007FEA  0200               	dw	512
   409  007FEC  00                 	db	0
   410  007FED  00                 	db	0
   411  007FEE  00                 	db	0
   412  007FEF  08                 	db	8
   413  007FF0  04D8               	dw	1240
   414  007FF2  0000               	dw	0
   415  007FF4  0003               	dw	3
   416  007FF6  01                 	db	1
   417  007FF7  02                 	db	2
   418  007FF8  00                 	db	0
   419  007FF9  01                 	db	1
   420  007FFA                     __end_of_device_dsc:
   421                           	opt stack 0
   422  007FFA                     _sd000:
   423                           	opt stack 0
   424  007FFA  04                 	db	4
   425  007FFB  03                 	db	3
   426  007FFC  0409               	dw	1033
   427  007FFE                     __end_of_sd000:
   428                           	opt stack 0
   429  0000                     _ADCON0	set	4034
   430  0000                     _ADCON0bits	set	4034
   431  0000                     _ADCON1bits	set	4033
   432  0000                     _ADCON2	set	4032
   433  0000                     _ADCON2bits	set	4032
   434  0000                     _ADRESH	set	4036
   435  0000                     _ADRESL	set	4035
   436  0000                     _INTCONbits	set	4082
   437  0000                     _IPR2bits	set	4002
   438  0000                     _LATD	set	3980
   439  0000                     _LATDbits	set	3980
   440  0000                     _PIE2bits	set	4000
   441  0000                     _PIR1bits	set	3998
   442  0000                     _PIR2bits	set	4001
   443  0000                     _PORTBbits	set	3969
   444  0000                     _RCONbits	set	4048
   445  0000                     _SSPADD	set	4040
   446  0000                     _SSPBUF	set	4041
   447  0000                     _SSPCON1	set	4038
   448  0000                     _SSPCON1bits	set	4038
   449  0000                     _SSPCON2	set	4037
   450  0000                     _SSPCON2bits	set	4037
   451  0000                     _SSPSTAT	set	4039
   452  0000                     _SSPSTATbits	set	4039
   453  0000                     _TRISAbits	set	3986
   454  0000                     _TRISBbits	set	3987
   455  0000                     _TRISD	set	3989
   456  0000                     _TRISDbits	set	3989
   457  0000                     _UADDR	set	3950
   458  0000                     _UCFG	set	3951
   459  0000                     _UCON	set	3949
   460  0000                     _UCONbits	set	3949
   461  0000                     _UEIE	set	3947
   462  0000                     _UEIR	set	3946
   463  0000                     _UEP0bits	set	3952
   464  0000                     _UIE	set	3945
   465  0000                     _UIEbits	set	3945
   466  0000                     _UIR	set	3944
   467  0000                     _UIRbits	set	3944
   468  0000                     _USTAT	set	3948
   469  0000                     _UEP0	set	3952
   470  0000                     _UEP1	set	3953
   471                           
   472                           ; #config settings
   473  007FFE  00                 	db	0	; dummy byte at the end
   474  0000                     
   475                           	psect	cinit
   476  002C20                     __pcinit:
   477                           	opt stack 0
   478  002C20                     start_initialization:
   479                           	opt stack 0
   480  002C20                     __initialization:
   481                           	opt stack 0
   482                           
   483                           ; Clear objects allocated to BANK1 (3 bytes)
   484  002C20  0101               	movlb	1
   485  002C22  6B1A               	clrf	(__pbssBANK1+2)& (0+255),b
   486  002C24  6B19               	clrf	(__pbssBANK1+1)& (0+255),b
   487  002C26  6B18               	clrf	__pbssBANK1& (0+255),b
   488                           
   489                           ; Clear objects allocated to BANK0 (52 bytes)
   490  002C28  EE00  F0C5         	lfsr	0,__pbssBANK0
   491  002C2C  0E34               	movlw	52
   492  002C2E                     clear_0:
   493  002C2E  6AEE               	clrf	postinc0,c
   494  002C30  06E8               	decf	wreg,f,c
   495  002C32  E1FD               	bnz	clear_0
   496                           
   497                           ; Clear objects allocated to COMRAM (43 bytes)
   498  002C34  EE00  F034         	lfsr	0,__pbssCOMRAM
   499  002C38  0E2B               	movlw	43
   500  002C3A                     clear_1:
   501  002C3A  6AEE               	clrf	postinc0,c
   502  002C3C  06E8               	decf	wreg,f,c
   503  002C3E  E1FD               	bnz	clear_1
   504                           
   505                           ; Initialize objects allocated to BANK1 (24 bytes)
   506                           ; load TBLPTR registers with __pidataBANK1
   507  002C40  0E08               	movlw	low __pidataBANK1
   508  002C42  6EF6               	movwf	tblptrl,c
   509  002C44  0E33               	movlw	high __pidataBANK1
   510  002C46  6EF7               	movwf	tblptrh,c
   511  002C48  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   512  002C4A  6EF8               	movwf	tblptru,c
   513  002C4C  EE01  F000         	lfsr	0,__pdataBANK1
   514  002C50  EE10 F018          	lfsr	1,24
   515  002C54                     copy_data0:
   516  002C54  0009               	tblrd		*+
   517  002C56  CFF5 FFEE          	movff	tablat,postinc0
   518  002C5A  50E5               	movf	postdec1,w,c
   519  002C5C  50E1               	movf	fsr1l,w,c
   520  002C5E  E1FA               	bnz	copy_data0
   521                           
   522                           ; Initialize objects allocated to BANK0 (5 bytes)
   523                           ; load TBLPTR registers with __pidataBANK0
   524  002C60  0E48               	movlw	low __pidataBANK0
   525  002C62  6EF6               	movwf	tblptrl,c
   526  002C64  0E33               	movlw	high __pidataBANK0
   527  002C66  6EF7               	movwf	tblptrh,c
   528  002C68  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   529  002C6A  6EF8               	movwf	tblptru,c
   530  002C6C  EE00  F0F9         	lfsr	0,__pdataBANK0
   531  002C70  EE10 F005          	lfsr	1,5
   532  002C74                     copy_data1:
   533  002C74  0009               	tblrd		*+
   534  002C76  CFF5 FFEE          	movff	tablat,postinc0
   535  002C7A  50E5               	movf	postdec1,w,c
   536  002C7C  50E1               	movf	fsr1l,w,c
   537  002C7E  E1FA               	bnz	copy_data1
   538  002C80                     end_of_initialization:
   539                           	opt stack 0
   540  002C80                     __end_of__initialization:
   541                           	opt stack 0
   542  002C80  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   543  002C82  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   544  002C84  0E00               	movlw	low (__Lmediumconst shr (0+16))
   545  002C86  6EF8               	movwf	tblptru,c
   546  002C88  0100               	movlb	0
   547  002C8A  EF94  F003         	goto	_main	;jump to C main() function
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	bssCOMRAM
   558  000034                     __pbssCOMRAM:
   559                           	opt stack 0
   560  000034                     _outPipes:
   561                           	opt stack 0
   562  000034                     	ds	8
   563  00003C                     _inPipes:
   564                           	opt stack 0
   565  00003C                     	ds	6
   566  000042                     _pBDTEntryIn:
   567                           	opt stack 0
   568  000042                     	ds	4
   569  000046                     APP_LEDUpdateUSBStatus@ledCount:
   570                           	opt stack 0
   571  000046                     	ds	2
   572  000048                     _ep_data_in:
   573                           	opt stack 0
   574  000048                     	ds	2
   575  00004A                     _ep_data_out:
   576                           	opt stack 0
   577  00004A                     	ds	2
   578  00004C                     _pBDTEntryEP0OutCurrent:
   579                           	opt stack 0
   580  00004C                     	ds	2
   581  00004E                     _pBDTEntryEP0OutNext:
   582                           	opt stack 0
   583  00004E                     	ds	2
   584  000050                     _BothEP0OutUOWNsSet:
   585                           	opt stack 0
   586  000050                     	ds	1
   587  000051                     _RemoteWakeup:
   588                           	opt stack 0
   589  000051                     	ds	1
   590  000052                     _USBBusIsSuspended:
   591                           	opt stack 0
   592  000052                     	ds	1
   593  000053                     _USBDeferINDataStagePackets:
   594                           	opt stack 0
   595  000053                     	ds	1
   596  000054                     _USBDeferStatusStagePacket:
   597                           	opt stack 0
   598  000054                     	ds	1
   599  000055                     _USBDeviceState:
   600                           	opt stack 0
   601  000055                     	ds	1
   602  000056                     _USBStatusStageEnabledFlag1:
   603                           	opt stack 0
   604  000056                     	ds	1
   605  000057                     _USBStatusStageEnabledFlag2:
   606                           	opt stack 0
   607  000057                     	ds	1
   608  000058                     _USBStatusStageTimeoutCounter:
   609                           	opt stack 0
   610  000058                     	ds	1
   611  000059                     _controlTransferState:
   612                           	opt stack 0
   613  000059                     	ds	1
   614  00005A                     _endpoint_number:
   615                           	opt stack 0
   616  00005A                     	ds	1
   617  00005B                     _shortPacketStatus:
   618                           	opt stack 0
   619  00005B                     	ds	1
   620  00005C                     _USBActiveConfiguration:
   621                           	opt stack 0
   622  00005C                     	ds	1
   623  00005D                     _USBAlternateInterface:
   624                           	opt stack 0
   625  00005D                     	ds	1
   626  00005E                     _USTATcopy:
   627                           	opt stack 0
   628  00005E                     	ds	1
   629                           tblptru	equ	0xFF8
   630                           tblptrh	equ	0xFF7
   631                           tblptrl	equ	0xFF6
   632                           tablat	equ	0xFF5
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           postdec1	equ	0xFE5
   636                           fsr1l	equ	0xFE1
   637                           
   638                           	psect	bssBANK0
   639  0000C5                     __pbssBANK0:
   640                           	opt stack 0
   641  0000C5                     _mouse:
   642                           	opt stack 0
   643  0000C5                     	ds	10
   644  0000CF                     _USB1msTickCount:
   645                           	opt stack 0
   646  0000CF                     	ds	4
   647  0000D3                     _pBDTEntryOut:
   648                           	opt stack 0
   649  0000D3                     	ds	4
   650  0000D7                     _gforcex:
   651                           	opt stack 0
   652  0000D7                     	ds	3
   653  0000DA                     _gforcey:
   654                           	opt stack 0
   655  0000DA                     	ds	3
   656  0000DD                     _accx:
   657                           	opt stack 0
   658  0000DD                     	ds	2
   659  0000DF                     _accy:
   660                           	opt stack 0
   661  0000DF                     	ds	2
   662  0000E1                     _accz:
   663                           	opt stack 0
   664  0000E1                     	ds	2
   665  0000E3                     _acx:
   666                           	opt stack 0
   667  0000E3                     	ds	2
   668  0000E5                     _acy:
   669                           	opt stack 0
   670  0000E5                     	ds	2
   671  0000E7                     _acz:
   672                           	opt stack 0
   673  0000E7                     	ds	2
   674  0000E9                     _errno:
   675                           	opt stack 0
   676  0000E9                     	ds	2
   677  0000EB                     _gyrox:
   678                           	opt stack 0
   679  0000EB                     	ds	2
   680  0000ED                     _gyroy:
   681                           	opt stack 0
   682  0000ED                     	ds	2
   683  0000EF                     _gyroz:
   684                           	opt stack 0
   685  0000EF                     	ds	2
   686  0000F1                     _pDst:
   687                           	opt stack 0
   688  0000F1                     	ds	2
   689  0000F3                     _x:
   690                           	opt stack 0
   691  0000F3                     	ds	2
   692  0000F5                     _USBDeferOUTDataStagePackets:
   693                           	opt stack 0
   694  0000F5                     	ds	1
   695  0000F6                     _USBTicksSinceSuspendEnd:
   696                           	opt stack 0
   697  0000F6                     	ds	1
   698  0000F7                     _active_protocol:
   699                           	opt stack 0
   700  0000F7                     	ds	1
   701  0000F8                     _idle_rate:
   702                           	opt stack 0
   703  0000F8                     	ds	1
   704                           tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           postdec1	equ	0xFE5
   711                           fsr1l	equ	0xFE1
   712                           
   713                           	psect	dataBANK0
   714  0000F9                     __pdataBANK0:
   715                           	opt stack 0
   716  0000F9                     _gforcescale:
   717                           	opt stack 0
   718  0000F9                     	ds	3
   719  0000FC                     _sign:
   720                           	opt stack 0
   721  0000FC                     	ds	2
   722                           tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           tblptrl	equ	0xFF6
   725                           tablat	equ	0xFF5
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           postdec1	equ	0xFE5
   729                           fsr1l	equ	0xFE1
   730                           
   731                           	psect	bssBANK1
   732  000118                     __pbssBANK1:
   733                           	opt stack 0
   734  000118                     _gforcez:
   735                           	opt stack 0
   736  000118                     	ds	3
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           tblptrl	equ	0xFF6
   740                           tablat	equ	0xFF5
   741                           postinc0	equ	0xFEE
   742                           wreg	equ	0xFE8
   743                           postdec1	equ	0xFE5
   744                           fsr1l	equ	0xFE1
   745                           
   746                           	psect	dataBANK1
   747  000100                     __pdataBANK1:
   748                           	opt stack 0
   749  000100                     _gx:
   750                           	opt stack 0
   751  000100                     	ds	4
   752  000104                     _gy:
   753                           	opt stack 0
   754  000104                     	ds	4
   755  000108                     _gz:
   756                           	opt stack 0
   757  000108                     	ds	4
   758  00010C                     _ax:
   759                           	opt stack 0
   760  00010C                     	ds	4
   761  000110                     _ay:
   762                           	opt stack 0
   763  000110                     	ds	4
   764  000114                     _az:
   765                           	opt stack 0
   766  000114                     	ds	4
   767                           tblptru	equ	0xFF8
   768                           tblptrh	equ	0xFF7
   769                           tblptrl	equ	0xFF6
   770                           tablat	equ	0xFF5
   771                           postinc0	equ	0xFEE
   772                           wreg	equ	0xFE8
   773                           postdec1	equ	0xFE5
   774                           fsr1l	equ	0xFE1
   775                           
   776                           	psect	cstackBANK0
   777  000060                     __pcstackBANK0:
   778                           	opt stack 0
   779  000060                     ?___awtoft:
   780                           	opt stack 0
   781  000060                     ?___lltoft:
   782                           	opt stack 0
   783  000060                     MPU6050_ReadAccX@write:
   784                           	opt stack 0
   785  000060                     MPU6050_ReadAccY@write:
   786                           	opt stack 0
   787  000060                     MPU6050_ReadAccZ@write:
   788                           	opt stack 0
   789  000060                     ___awtoft@c:
   790                           	opt stack 0
   791  000060                     ___lltoft@c:
   792                           	opt stack 0
   793                           
   794                           ; 4 bytes @ 0x0
   795  000060                     	ds	2
   796  000062                     MPU6050_ReadAccX@accx:
   797                           	opt stack 0
   798  000062                     MPU6050_ReadAccY@accy:
   799                           	opt stack 0
   800  000062                     MPU6050_ReadAccZ@accz:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x2
   804  000062                     	ds	1
   805  000063                     ?___ftdiv:
   806                           	opt stack 0
   807  000063                     ?___ftmul:
   808                           	opt stack 0
   809  000063                     ___ftdiv@f1:
   810                           	opt stack 0
   811  000063                     ___ftmul@f1:
   812                           	opt stack 0
   813                           
   814                           ; 3 bytes @ 0x3
   815  000063                     	ds	1
   816  000064                     ??___lltoft:
   817  000064                     MPU6050_ReadAccX@accxh:
   818                           	opt stack 0
   819  000064                     MPU6050_ReadAccY@accyh:
   820                           	opt stack 0
   821  000064                     MPU6050_ReadAccZ@acczh:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x4
   825  000064                     	ds	2
   826  000066                     MPU6050_ReadAccX@accxl:
   827                           	opt stack 0
   828  000066                     MPU6050_ReadAccY@accyl:
   829                           	opt stack 0
   830  000066                     MPU6050_ReadAccZ@acczl:
   831                           	opt stack 0
   832  000066                     ___ftdiv@f2:
   833                           	opt stack 0
   834  000066                     ___ftmul@f2:
   835                           	opt stack 0
   836                           
   837                           ; 3 bytes @ 0x6
   838  000066                     	ds	3
   839  000069                     ??___ftdiv:
   840  000069                     ??___ftmul:
   841                           
   842                           ; 0 bytes @ 0x9
   843  000069                     	ds	3
   844  00006C                     ___ftdiv@cntr:
   845                           	opt stack 0
   846  00006C                     ___ftmul@exp:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0xC
   850  00006C                     	ds	1
   851  00006D                     ___ftdiv@f3:
   852                           	opt stack 0
   853  00006D                     ___ftmul@f3_as_product:
   854                           	opt stack 0
   855                           
   856                           ; 3 bytes @ 0xD
   857  00006D                     	ds	3
   858  000070                     ___ftdiv@exp:
   859                           	opt stack 0
   860  000070                     ___ftmul@cntr:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x10
   864  000070                     	ds	1
   865  000071                     ___ftdiv@sign:
   866                           	opt stack 0
   867  000071                     ___ftmul@sign:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x11
   871  000071                     	ds	1
   872  000072                     ?___ftneg:
   873                           	opt stack 0
   874  000072                     ?___fttol:
   875                           	opt stack 0
   876  000072                     ___ftneg@f1:
   877                           	opt stack 0
   878  000072                     ___fttol@f1:
   879                           	opt stack 0
   880                           
   881                           ; 3 bytes @ 0x12
   882  000072                     	ds	3
   883  000075                     ?___ftadd:
   884                           	opt stack 0
   885  000075                     ___ftadd@f1:
   886                           	opt stack 0
   887                           
   888                           ; 3 bytes @ 0x15
   889  000075                     	ds	1
   890  000076                     ??___fttol:
   891                           
   892                           ; 0 bytes @ 0x16
   893  000076                     	ds	2
   894  000078                     ___ftadd@f2:
   895                           	opt stack 0
   896                           
   897                           ; 3 bytes @ 0x18
   898  000078                     	ds	3
   899  00007B                     ??___ftadd:
   900  00007B                     ___fttol@sign1:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0x1B
   904  00007B                     	ds	1
   905  00007C                     ___fttol@lval:
   906                           	opt stack 0
   907                           
   908                           ; 4 bytes @ 0x1C
   909  00007C                     	ds	2
   910  00007E                     ___ftadd@sign:
   911                           	opt stack 0
   912                           
   913                           ; 1 bytes @ 0x1E
   914  00007E                     	ds	1
   915  00007F                     ___ftadd@exp2:
   916                           	opt stack 0
   917                           
   918                           ; 1 bytes @ 0x1F
   919  00007F                     	ds	1
   920  000080                     ___ftadd@exp1:
   921                           	opt stack 0
   922  000080                     ___fttol@exp1:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x20
   926  000080                     	ds	1
   927  000081                     ?___ftsub:
   928                           	opt stack 0
   929  000081                     ?_eval_poly:
   930                           	opt stack 0
   931  000081                     ?___altoft:
   932                           	opt stack 0
   933  000081                     ___ftsub@f1:
   934                           	opt stack 0
   935  000081                     eval_poly@x:
   936                           	opt stack 0
   937  000081                     ___altoft@c:
   938                           	opt stack 0
   939                           
   940                           ; 4 bytes @ 0x21
   941  000081                     	ds	3
   942  000084                     eval_poly@d:
   943                           	opt stack 0
   944  000084                     ___ftsub@f2:
   945                           	opt stack 0
   946                           
   947                           ; 3 bytes @ 0x24
   948  000084                     	ds	1
   949  000085                     ??___altoft:
   950                           
   951                           ; 0 bytes @ 0x25
   952  000085                     	ds	1
   953  000086                     eval_poly@n:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x26
   957  000086                     	ds	2
   958  000088                     ??_eval_poly:
   959                           
   960                           ; 0 bytes @ 0x28
   961  000088                     	ds	1
   962  000089                     ___altoft@exp:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x29
   966  000089                     	ds	1
   967  00008A                     ___altoft@sign:
   968                           	opt stack 0
   969  00008A                     eval_poly@res:
   970                           	opt stack 0
   971                           
   972                           ; 3 bytes @ 0x2A
   973  00008A                     	ds	1
   974  00008B                     ?_floor:
   975                           	opt stack 0
   976  00008B                     floor@x:
   977                           	opt stack 0
   978                           
   979                           ; 3 bytes @ 0x2B
   980  00008B                     	ds	2
   981  00008D                     ?_log:
   982                           	opt stack 0
   983  00008D                     ?_ldexp:
   984                           	opt stack 0
   985  00008D                     ldexp@value:
   986                           	opt stack 0
   987  00008D                     log@x:
   988                           	opt stack 0
   989                           
   990                           ; 3 bytes @ 0x2D
   991  00008D                     	ds	1
   992  00008E                     floor@i:
   993                           	opt stack 0
   994                           
   995                           ; 3 bytes @ 0x2E
   996  00008E                     	ds	2
   997  000090                     ldexp@newexp:
   998                           	opt stack 0
   999  000090                     log@exponent:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x30
  1003  000090                     	ds	1
  1004  000091                     floor@expon:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x31
  1008  000091                     	ds	1
  1009  000092                     ??_ldexp:
  1010                           
  1011                           ; 0 bytes @ 0x32
  1012  000092                     	ds	2
  1013  000094                     ?_exp:
  1014                           	opt stack 0
  1015  000094                     exp@x:
  1016                           	opt stack 0
  1017                           
  1018                           ; 3 bytes @ 0x34
  1019  000094                     	ds	3
  1020  000097                     _exp$4055:
  1021                           	opt stack 0
  1022                           
  1023                           ; 3 bytes @ 0x37
  1024  000097                     	ds	3
  1025  00009A                     exp@exponent:
  1026                           	opt stack 0
  1027                           
  1028                           ; 2 bytes @ 0x3A
  1029  00009A                     	ds	2
  1030  00009C                     exp@sign:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x3C
  1034  00009C                     	ds	1
  1035  00009D                     ?_pow:
  1036                           	opt stack 0
  1037  00009D                     pow@x:
  1038                           	opt stack 0
  1039                           
  1040                           ; 3 bytes @ 0x3D
  1041  00009D                     	ds	3
  1042  0000A0                     pow@y:
  1043                           	opt stack 0
  1044                           
  1045                           ; 3 bytes @ 0x40
  1046  0000A0                     	ds	3
  1047  0000A3                     _pow$4053:
  1048                           	opt stack 0
  1049                           
  1050                           ; 3 bytes @ 0x43
  1051  0000A3                     	ds	3
  1052  0000A6                     _pow$4054:
  1053                           	opt stack 0
  1054                           
  1055                           ; 3 bytes @ 0x46
  1056  0000A6                     	ds	3
  1057  0000A9                     pow@sign:
  1058                           	opt stack 0
  1059                           
  1060                           ; 1 bytes @ 0x49
  1061  0000A9                     	ds	1
  1062  0000AA                     pow@yi:
  1063                           	opt stack 0
  1064                           
  1065                           ; 4 bytes @ 0x4A
  1066  0000AA                     	ds	4
  1067  0000AE                     LCDdouble@a:
  1068                           	opt stack 0
  1069                           
  1070                           ; 3 bytes @ 0x4E
  1071  0000AE                     	ds	3
  1072  0000B1                     _LCDdouble$4051:
  1073                           	opt stack 0
  1074                           
  1075                           ; 3 bytes @ 0x51
  1076  0000B1                     	ds	3
  1077  0000B4                     _LCDdouble$4052:
  1078                           	opt stack 0
  1079                           
  1080                           ; 3 bytes @ 0x54
  1081  0000B4                     	ds	3
  1082  0000B7                     LCDdouble@zflag:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x57
  1086  0000B7                     	ds	2
  1087  0000B9                     _LCDdouble$4050:
  1088                           	opt stack 0
  1089                           
  1090                           ; 3 bytes @ 0x59
  1091  0000B9                     	ds	3
  1092  0000BC                     LCDdouble@digit:
  1093                           	opt stack 0
  1094                           
  1095                           ; 2 bytes @ 0x5C
  1096  0000BC                     	ds	2
  1097  0000BE                     LCDdouble@i:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0x5E
  1101  0000BE                     	ds	2
  1102  0000C0                     main@i:
  1103                           	opt stack 0
  1104                           
  1105                           ; 2 bytes @ 0x60
  1106  0000C0                     	ds	2
  1107  0000C2                     _main$4049:
  1108                           	opt stack 0
  1109                           
  1110                           ; 3 bytes @ 0x62
  1111  0000C2                     	ds	3
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           postinc0	equ	0xFEE
  1117                           wreg	equ	0xFE8
  1118                           postdec1	equ	0xFE5
  1119                           fsr1l	equ	0xFE1
  1120                           
  1121                           	psect	cstackCOMRAM
  1122  000001                     __pcstackCOMRAM:
  1123                           	opt stack 0
  1124  000001                     ??_USBStdGetDscHandler:
  1125  000001                     ??_USBStdGetStatusHandler:
  1126  000001                     ?_USBTransferOnePacket:
  1127                           	opt stack 0
  1128  000001                     APP_DeviceMouseIdleRateCallback@idleRate:
  1129                           	opt stack 0
  1130  000001                     LED_On@led:
  1131                           	opt stack 0
  1132  000001                     LED_Off@led:
  1133                           	opt stack 0
  1134  000001                     USBTransferOnePacket@dir:
  1135                           	opt stack 0
  1136  000001                     USBConfigureEndpoint@direction:
  1137                           	opt stack 0
  1138  000001                     USBCtrlTrfTxService@byteToSend:
  1139                           	opt stack 0
  1140  000001                     USBCtrlTrfRxService@i:
  1141                           	opt stack 0
  1142  000001                     i2BUTTON_Enable@button:
  1143                           	opt stack 0
  1144  000001                     i2LED_Enable@led:
  1145                           	opt stack 0
  1146  000001                     memcpy@d1:
  1147                           	opt stack 0
  1148  000001                     i2memset@p1:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0x0
  1152  000001                     	ds	1
  1153  000002                     ??_USBConfigureEndpoint:
  1154  000002                     ??_APP_DeviceMouseIdleRateCallback:
  1155  000002                     USBCtrlTrfRxService@byteToRead:
  1156                           	opt stack 0
  1157  000002                     USBCtrlTrfInHandler@lastDTS:
  1158                           	opt stack 0
  1159  000002                     i2SYSTEM_Initialize@state:
  1160                           	opt stack 0
  1161  000002                     USBTransferOnePacket@data:
  1162                           	opt stack 0
  1163  000002                     USBStdGetStatusHandler@p:
  1164                           	opt stack 0
  1165                           
  1166                           ; 2 bytes @ 0x1
  1167  000002                     	ds	1
  1168  000003                     memcpy@s1:
  1169                           	opt stack 0
  1170  000003                     i2memset@c:
  1171                           	opt stack 0
  1172                           
  1173                           ; 2 bytes @ 0x2
  1174  000003                     	ds	1
  1175  000004                     APP_DeviceMouseIdleRateCallback@reportId:
  1176                           	opt stack 0
  1177  000004                     USBTransferOnePacket@len:
  1178                           	opt stack 0
  1179                           
  1180                           ; 1 bytes @ 0x3
  1181  000004                     	ds	1
  1182  000005                     USBTransferOnePacket@ep:
  1183                           	opt stack 0
  1184  000005                     memcpy@n:
  1185                           	opt stack 0
  1186  000005                     i2memset@n:
  1187                           	opt stack 0
  1188                           
  1189                           ; 2 bytes @ 0x4
  1190  000005                     	ds	1
  1191  000006                     USBConfigureEndpoint@EPNum:
  1192                           	opt stack 0
  1193  000006                     USBTransferOnePacket@handle:
  1194                           	opt stack 0
  1195                           
  1196                           ; 2 bytes @ 0x5
  1197  000006                     	ds	1
  1198  000007                     USBConfigureEndpoint@handle:
  1199                           	opt stack 0
  1200  000007                     memcpy@d:
  1201                           	opt stack 0
  1202  000007                     i2memset@p:
  1203                           	opt stack 0
  1204                           
  1205                           ; 2 bytes @ 0x6
  1206  000007                     	ds	1
  1207  000008                     
  1208                           ; 0 bytes @ 0x7
  1209  000008                     	ds	1
  1210  000009                     USBEnableEndpoint@options:
  1211                           	opt stack 0
  1212  000009                     i2USBDeviceInit@i:
  1213                           	opt stack 0
  1214  000009                     memcpy@s:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x8
  1218  000009                     	ds	1
  1219  00000A                     USBEnableEndpoint@p:
  1220                           	opt stack 0
  1221                           
  1222                           ; 2 bytes @ 0x9
  1223  00000A                     	ds	2
  1224  00000C                     USBEnableEndpoint@ep:
  1225                           	opt stack 0
  1226                           
  1227                           ; 1 bytes @ 0xB
  1228  00000C                     	ds	1
  1229  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1230                           	opt stack 0
  1231                           
  1232                           ; 2 bytes @ 0xC
  1233  00000D                     	ds	2
  1234  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1235                           	opt stack 0
  1236                           
  1237                           ; 2 bytes @ 0xE
  1238  00000F                     	ds	2
  1239  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x10
  1243  000011                     	ds	2
  1244  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1245                           
  1246                           ; 0 bytes @ 0x12
  1247  000013                     	ds	2
  1248  000015                     ??_USBStdFeatureReqHandler:
  1249  000015                     USBStdSetCfgHandler@i:
  1250                           	opt stack 0
  1251                           
  1252                           ; 1 bytes @ 0x14
  1253  000015                     	ds	1
  1254  000016                     USBStdFeatureReqHandler@pUEP:
  1255                           	opt stack 0
  1256                           
  1257                           ; 2 bytes @ 0x15
  1258  000016                     	ds	2
  1259  000018                     USBStdFeatureReqHandler@current_ep_data:
  1260                           	opt stack 0
  1261                           
  1262                           ; 1 bytes @ 0x17
  1263  000018                     	ds	1
  1264  000019                     USBStdFeatureReqHandler@p:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0x18
  1268  000019                     	ds	2
  1269  00001B                     ??_USBCtrlEPService:
  1270  00001B                     
  1271                           ; 0 bytes @ 0x1A
  1272  00001B                     	ds	1
  1273  00001C                     USBDeviceTasks@i:
  1274                           	opt stack 0
  1275                           
  1276                           ; 1 bytes @ 0x1B
  1277  00001C                     	ds	1
  1278  00001D                     ??_SYS_InterruptHigh:
  1279                           
  1280                           ; 0 bytes @ 0x1C
  1281  00001D                     	ds	14
  1282  00002B                     ??_LCDnibble:
  1283  00002B                     ??_IdleI2C:
  1284  00002B                     ?___wmul:
  1285                           	opt stack 0
  1286  00002B                     ?___ftpack:
  1287                           	opt stack 0
  1288  00002B                     ?_frexp:
  1289                           	opt stack 0
  1290  00002B                     OpenI2C@slew:
  1291                           	opt stack 0
  1292  00002B                     BUTTON_IsPressed@button:
  1293                           	opt stack 0
  1294  00002B                     BUTTON_Enable@button:
  1295                           	opt stack 0
  1296  00002B                     LED_Enable@led:
  1297                           	opt stack 0
  1298  00002B                     ___wmul@multiplier:
  1299                           	opt stack 0
  1300  00002B                     memset@p1:
  1301                           	opt stack 0
  1302  00002B                     ___ftpack@arg:
  1303                           	opt stack 0
  1304  00002B                     ___ftge@ff1:
  1305                           	opt stack 0
  1306  00002B                     frexp@value:
  1307                           	opt stack 0
  1308                           
  1309                           ; 3 bytes @ 0x2A
  1310  00002B                     	ds	1
  1311  00002C                     OpenI2C@sync_mode:
  1312                           	opt stack 0
  1313  00002C                     WriteI2C@data_out:
  1314                           	opt stack 0
  1315  00002C                     SYSTEM_Initialize@state:
  1316                           	opt stack 0
  1317  00002C                     LCDnibble@nibble:
  1318                           	opt stack 0
  1319  00002C                     APP_DeviceMouseTasks@accx:
  1320                           	opt stack 0
  1321                           
  1322                           ; 2 bytes @ 0x2B
  1323  00002C                     	ds	1
  1324  00002D                     ??_LCDdata:
  1325  00002D                     ?_MPU6050_ReadAccX:
  1326                           	opt stack 0
  1327  00002D                     ?_MPU6050_ReadAccY:
  1328                           	opt stack 0
  1329  00002D                     ?_MPU6050_ReadAccZ:
  1330                           	opt stack 0
  1331  00002D                     LCDcmd@byte:
  1332                           	opt stack 0
  1333  00002D                     ___wmul@multiplicand:
  1334                           	opt stack 0
  1335  00002D                     memset@c:
  1336                           	opt stack 0
  1337                           
  1338                           ; 2 bytes @ 0x2C
  1339  00002D                     	ds	1
  1340  00002E                     ??_LCDinit:
  1341  00002E                     LCDdata@byte:
  1342                           	opt stack 0
  1343  00002E                     ___ftpack@exp:
  1344                           	opt stack 0
  1345  00002E                     APP_DeviceMouseTasks@accy:
  1346                           	opt stack 0
  1347  00002E                     frexp@eptr:
  1348                           	opt stack 0
  1349  00002E                     ___ftge@ff2:
  1350                           	opt stack 0
  1351                           
  1352                           ; 3 bytes @ 0x2D
  1353  00002E                     	ds	1
  1354  00002F                     ??_MPU6050_ReadAccX:
  1355  00002F                     ??_MPU6050_ReadAccY:
  1356  00002F                     ??_MPU6050_ReadAccZ:
  1357  00002F                     ___ftpack@sign:
  1358                           	opt stack 0
  1359  00002F                     LCDstring@str:
  1360                           	opt stack 0
  1361  00002F                     ___wmul@product:
  1362                           	opt stack 0
  1363  00002F                     memset@n:
  1364                           	opt stack 0
  1365                           
  1366                           ; 2 bytes @ 0x2E
  1367  00002F                     	ds	1
  1368  000030                     ??___ftpack:
  1369  000030                     ??_frexp:
  1370  000030                     APP_DeviceMouseTasks@accz:
  1371                           	opt stack 0
  1372                           
  1373                           ; 2 bytes @ 0x2F
  1374  000030                     	ds	1
  1375  000031                     ??___ftge:
  1376  000031                     LCDstring@i:
  1377                           	opt stack 0
  1378  000031                     memset@p:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x30
  1382  000031                     	ds	1
  1383  000032                     APP_DeviceMouseTasks@currentButtonState:
  1384                           	opt stack 0
  1385                           
  1386                           ; 1 bytes @ 0x31
  1387  000032                     	ds	1
  1388  000033                     USBDeviceInit@i:
  1389                           	opt stack 0
  1390  000033                     ___awtoft@sign:
  1391                           	opt stack 0
  1392  000033                     ___lltoft@exp:
  1393                           	opt stack 0
  1394                           
  1395                           ; 1 bytes @ 0x32
  1396  000033                     	ds	1
  1397  000034                     tblptru	equ	0xFF8
  1398                           tblptrh	equ	0xFF7
  1399                           tblptrl	equ	0xFF6
  1400                           tablat	equ	0xFF5
  1401                           postinc0	equ	0xFEE
  1402                           wreg	equ	0xFE8
  1403                           postdec1	equ	0xFE5
  1404                           fsr1l	equ	0xFE1
  1405                           
  1406                           ; 0 bytes @ 0x33
  1407 ;;
  1408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1409 ;;
  1410 ;; *************** function _main *****************
  1411 ;; Defined at:
  1412 ;;		line 84 in file "../src/main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  i               2   96[BANK0 ] int 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;		None               void
  1419 ;; Registers used:
  1420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0
  1427 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1429 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1430 ;;Total ram usage:        5 bytes
  1431 ;; Hardware stack levels required when called:   16
  1432 ;; This function calls:
  1433 ;;		_APP_DeviceMouseTasks
  1434 ;;		_LCDcmd
  1435 ;;		_LCDdata
  1436 ;;		_LCDdouble
  1437 ;;		_LCDinit
  1438 ;;		_LCDstring
  1439 ;;		_MPU6050_Init
  1440 ;;		_MPU6050_ReadAccX
  1441 ;;		_MPU6050_ReadAccY
  1442 ;;		_MPU6050_ReadAccZ
  1443 ;;		_OpenI2C
  1444 ;;		_SYSTEM_Initialize
  1445 ;;		_USBDeviceAttach
  1446 ;;		_USBDeviceInit
  1447 ;;		___awtoft
  1448 ;;		___ftmul
  1449 ;; This function is called by:
  1450 ;;		Startup code after reset
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text0
  1455  000728                     __ptext0:
  1456                           	opt stack 0
  1457  000728                     _main:
  1458                           	opt stack 15
  1459                           
  1460                           ;main.c: 86: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;incstack = 0
  1464  000728  0E00               	movlw	0
  1465  00072A  EC21  F019         	call	_SYSTEM_Initialize
  1466                           
  1467                           ;main.c: 89: LCDinit();
  1468  00072E  EC9E  F015         	call	_LCDinit	;wreg free
  1469                           
  1470                           ;main.c: 90: LCDcmd(0x01);
  1471  000732  0E01               	movlw	1
  1472  000734  EC90  F019         	call	_LCDcmd
  1473                           
  1474                           ;main.c: 91: LCDcmd(0x02);
  1475  000738  0E02               	movlw	2
  1476  00073A  EC90  F019         	call	_LCDcmd
  1477                           
  1478                           ;main.c: 92: OpenI2C(0b00001000, 0b00000000);
  1479  00073E  0E00               	movlw	0
  1480  000740  6E2B               	movwf	OpenI2C@slew,c
  1481  000742  0E08               	movlw	8
  1482  000744  EC67  F019         	call	_OpenI2C
  1483                           
  1484                           ;main.c: 93: SSPADD = 29;
  1485  000748  0E1D               	movlw	29
  1486  00074A  6EC8               	movwf	4040,c	;volatile
  1487                           
  1488                           ;main.c: 94: MPU6050_Init();
  1489  00074C  EC65  F015         	call	_MPU6050_Init	;wreg free
  1490                           
  1491                           ;main.c: 99: USBDeviceInit();
  1492  000750  EC32  F008         	call	_USBDeviceInit	;wreg free
  1493                           
  1494                           ;main.c: 100: USBDeviceAttach();
  1495  000754  EC48  F018         	call	_USBDeviceAttach	;wreg free
  1496                           
  1497                           ;main.c: 101: int i = 0;
  1498  000758  0E00               	movlw	0
  1499  00075A  0100               	movlb	0	; () banked
  1500  00075C  6FC1               	movwf	(main@i+1)& (0+255),b
  1501  00075E  0E00               	movlw	0
  1502  000760  6FC0               	movwf	main@i& (0+255),b
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;main.c: 103: TRISBbits.RB2 = 1;
  1506  000762  8493               	bsf	3987,2,c	;volatile
  1507  000764                     l6063:
  1508                           
  1509                           ;main.c: 105: {
  1510                           ;main.c: 106: ;
  1511                           ;main.c: 127: if( USBDeviceState < CONFIGURED_STATE )
  1512  000764  0E20               	movlw	32
  1513  000766  6055               	cpfslt	_USBDeviceState,c	;volatile
  1514  000768  D001               	goto	l410
  1515  00076A  D7FC               	goto	l6063
  1516  00076C                     l410:
  1517                           
  1518                           ;main.c: 131: }
  1519                           ;main.c: 137: if( UCONbits.SUSPND == 1 )
  1520  00076C  B26D               	btfsc	3949,1,c	;volatile
  1521  00076E  D7FA               	goto	l6063
  1522                           
  1523                           ;main.c: 141: }
  1524                           ;main.c: 150: LCDcmd(0x01);
  1525                           
  1526                           ;main.c: 138: {
  1527                           ;main.c: 140: continue;
  1528  000770  0E01               	movlw	1
  1529  000772  EC90  F019         	call	_LCDcmd
  1530                           
  1531                           ;main.c: 151: accx = MPU6050_ReadAccX();
  1532  000776  ECA1  F011         	call	_MPU6050_ReadAccX	;wreg free
  1533  00077A  C02D  F0DD         	movff	?_MPU6050_ReadAccX,_accx
  1534  00077E  C02E  F0DE         	movff	?_MPU6050_ReadAccX+1,_accx+1
  1535                           
  1536                           ;main.c: 152: _delay(1);
  1537  000782  F000               	nop	
  1538                           
  1539                           ;main.c: 153: gforcex = (double)accx * gforcescale;
  1540  000784  C0DD  F060         	movff	_accx,___awtoft@c
  1541  000788  C0DE  F061         	movff	_accx+1,___awtoft@c+1
  1542  00078C  EC35  F017         	call	___awtoft	;wreg free
  1543  000790  C060  F063         	movff	?___awtoft,___ftmul@f1
  1544  000794  C061  F064         	movff	?___awtoft+1,___ftmul@f1+1
  1545  000798  C062  F065         	movff	?___awtoft+2,___ftmul@f1+2
  1546  00079C  C0F9  F066         	movff	_gforcescale,___ftmul@f2
  1547  0007A0  C0FA  F067         	movff	_gforcescale+1,___ftmul@f2+1
  1548  0007A4  C0FB  F068         	movff	_gforcescale+2,___ftmul@f2+2
  1549  0007A8  EC37  F006         	call	___ftmul	;wreg free
  1550  0007AC  C063  F0D7         	movff	?___ftmul,_gforcex
  1551  0007B0  C064  F0D8         	movff	?___ftmul+1,_gforcex+1
  1552  0007B4  C065  F0D9         	movff	?___ftmul+2,_gforcex+2
  1553                           
  1554                           ;main.c: 154: LCDstring(&ax);
  1555  0007B8  0E0C               	movlw	low _ax
  1556  0007BA  6E2F               	movwf	LCDstring@str,c
  1557  0007BC  0E01               	movlw	high _ax
  1558  0007BE  6E30               	movwf	LCDstring@str+1,c
  1559  0007C0  EC14  F018         	call	_LCDstring	;wreg free
  1560                           
  1561                           ;main.c: 155: LCDdouble((double)accx);
  1562  0007C4  C0DD  F060         	movff	_accx,___awtoft@c
  1563  0007C8  C0DE  F061         	movff	_accx+1,___awtoft@c+1
  1564  0007CC  EC35  F017         	call	___awtoft	;wreg free
  1565  0007D0  C060  F0C2         	movff	?___awtoft,_main$4049
  1566  0007D4  C061  F0C3         	movff	?___awtoft+1,_main$4049+1
  1567  0007D8  C062  F0C4         	movff	?___awtoft+2,_main$4049+2
  1568                           
  1569                           ;main.c: 155: LCDdouble((double)accx);
  1570  0007DC  C0C2  F0AE         	movff	_main$4049,LCDdouble@a
  1571  0007E0  C0C3  F0AF         	movff	_main$4049+1,LCDdouble@a+1
  1572  0007E4  C0C4  F0B0         	movff	_main$4049+2,LCDdouble@a+2
  1573  0007E8  EC81  F004         	call	_LCDdouble	;wreg free
  1574                           
  1575                           ;main.c: 156: LCDdata(' ');
  1576  0007EC  0E20               	movlw	32
  1577  0007EE  ECFB  F018         	call	_LCDdata
  1578                           
  1579                           ;main.c: 157: accy = MPU6050_ReadAccY();
  1580  0007F2  EC47  F011         	call	_MPU6050_ReadAccY	;wreg free
  1581  0007F6  C02D  F0DF         	movff	?_MPU6050_ReadAccY,_accy
  1582  0007FA  C02E  F0E0         	movff	?_MPU6050_ReadAccY+1,_accy+1
  1583                           
  1584                           ;main.c: 158: _delay(1);
  1585  0007FE  F000               	nop	
  1586                           
  1587                           ;main.c: 159: gforcey = (double)accy * gforcescale;
  1588  000800  C0DF  F060         	movff	_accy,___awtoft@c
  1589  000804  C0E0  F061         	movff	_accy+1,___awtoft@c+1
  1590  000808  EC35  F017         	call	___awtoft	;wreg free
  1591  00080C  C060  F063         	movff	?___awtoft,___ftmul@f1
  1592  000810  C061  F064         	movff	?___awtoft+1,___ftmul@f1+1
  1593  000814  C062  F065         	movff	?___awtoft+2,___ftmul@f1+2
  1594  000818  C0F9  F066         	movff	_gforcescale,___ftmul@f2
  1595  00081C  C0FA  F067         	movff	_gforcescale+1,___ftmul@f2+1
  1596  000820  C0FB  F068         	movff	_gforcescale+2,___ftmul@f2+2
  1597  000824  EC37  F006         	call	___ftmul	;wreg free
  1598  000828  C063  F0DA         	movff	?___ftmul,_gforcey
  1599  00082C  C064  F0DB         	movff	?___ftmul+1,_gforcey+1
  1600  000830  C065  F0DC         	movff	?___ftmul+2,_gforcey+2
  1601                           
  1602                           ;main.c: 160: LCDstring(&ay);
  1603  000834  0E10               	movlw	low _ay
  1604  000836  6E2F               	movwf	LCDstring@str,c
  1605  000838  0E01               	movlw	high _ay
  1606  00083A  6E30               	movwf	LCDstring@str+1,c
  1607  00083C  EC14  F018         	call	_LCDstring	;wreg free
  1608                           
  1609                           ;main.c: 161: LCDdouble((double)accy);
  1610  000840  C0DF  F060         	movff	_accy,___awtoft@c
  1611  000844  C0E0  F061         	movff	_accy+1,___awtoft@c+1
  1612  000848  EC35  F017         	call	___awtoft	;wreg free
  1613  00084C  C060  F0C2         	movff	?___awtoft,_main$4049
  1614  000850  C061  F0C3         	movff	?___awtoft+1,_main$4049+1
  1615  000854  C062  F0C4         	movff	?___awtoft+2,_main$4049+2
  1616                           
  1617                           ;main.c: 161: LCDdouble((double)accy);
  1618  000858  C0C2  F0AE         	movff	_main$4049,LCDdouble@a
  1619  00085C  C0C3  F0AF         	movff	_main$4049+1,LCDdouble@a+1
  1620  000860  C0C4  F0B0         	movff	_main$4049+2,LCDdouble@a+2
  1621  000864  EC81  F004         	call	_LCDdouble	;wreg free
  1622                           
  1623                           ;main.c: 162: LCDcmd(0xC0);
  1624  000868  0EC0               	movlw	192
  1625  00086A  EC90  F019         	call	_LCDcmd
  1626                           
  1627                           ;main.c: 163: accz = MPU6050_ReadAccZ();
  1628  00086E  ECED  F010         	call	_MPU6050_ReadAccZ	;wreg free
  1629  000872  C02D  F0E1         	movff	?_MPU6050_ReadAccZ,_accz
  1630  000876  C02E  F0E2         	movff	?_MPU6050_ReadAccZ+1,_accz+1
  1631                           
  1632                           ;main.c: 164: _delay(1);
  1633  00087A  F000               	nop	
  1634                           
  1635                           ;main.c: 165: gforcez = (double)accz * gforcescale;
  1636  00087C  C0E1  F060         	movff	_accz,___awtoft@c
  1637  000880  C0E2  F061         	movff	_accz+1,___awtoft@c+1
  1638  000884  EC35  F017         	call	___awtoft	;wreg free
  1639  000888  C060  F063         	movff	?___awtoft,___ftmul@f1
  1640  00088C  C061  F064         	movff	?___awtoft+1,___ftmul@f1+1
  1641  000890  C062  F065         	movff	?___awtoft+2,___ftmul@f1+2
  1642  000894  C0F9  F066         	movff	_gforcescale,___ftmul@f2
  1643  000898  C0FA  F067         	movff	_gforcescale+1,___ftmul@f2+1
  1644  00089C  C0FB  F068         	movff	_gforcescale+2,___ftmul@f2+2
  1645  0008A0  EC37  F006         	call	___ftmul	;wreg free
  1646  0008A4  C063  F118         	movff	?___ftmul,_gforcez
  1647  0008A8  C064  F119         	movff	?___ftmul+1,_gforcez+1
  1648  0008AC  C065  F11A         	movff	?___ftmul+2,_gforcez+2
  1649                           
  1650                           ;main.c: 166: LCDstring(&az);
  1651  0008B0  0E14               	movlw	low _az
  1652  0008B2  6E2F               	movwf	LCDstring@str,c
  1653  0008B4  0E01               	movlw	high _az
  1654  0008B6  6E30               	movwf	LCDstring@str+1,c
  1655  0008B8  EC14  F018         	call	_LCDstring	;wreg free
  1656                           
  1657                           ;main.c: 167: LCDdouble((double)accz);
  1658  0008BC  C0E1  F060         	movff	_accz,___awtoft@c
  1659  0008C0  C0E2  F061         	movff	_accz+1,___awtoft@c+1
  1660  0008C4  EC35  F017         	call	___awtoft	;wreg free
  1661  0008C8  C060  F0C2         	movff	?___awtoft,_main$4049
  1662  0008CC  C061  F0C3         	movff	?___awtoft+1,_main$4049+1
  1663  0008D0  C062  F0C4         	movff	?___awtoft+2,_main$4049+2
  1664                           
  1665                           ;main.c: 167: LCDdouble((double)accz);
  1666  0008D4  C0C2  F0AE         	movff	_main$4049,LCDdouble@a
  1667  0008D8  C0C3  F0AF         	movff	_main$4049+1,LCDdouble@a+1
  1668  0008DC  C0C4  F0B0         	movff	_main$4049+2,LCDdouble@a+2
  1669  0008E0  EC81  F004         	call	_LCDdouble	;wreg free
  1670                           
  1671                           ;main.c: 169: APP_DeviceMouseTasks(accx, accy, accz);
  1672  0008E4  C0DD  F02C         	movff	_accx,APP_DeviceMouseTasks@accx
  1673  0008E8  C0DE  F02D         	movff	_accx+1,APP_DeviceMouseTasks@accx+1
  1674  0008EC  C0DF  F02E         	movff	_accy,APP_DeviceMouseTasks@accy
  1675  0008F0  C0E0  F02F         	movff	_accy+1,APP_DeviceMouseTasks@accy+1
  1676  0008F4  C0E1  F030         	movff	_accz,APP_DeviceMouseTasks@accz
  1677  0008F8  C0E2  F031         	movff	_accz+1,APP_DeviceMouseTasks@accz+1
  1678  0008FC  ECA4  F016         	call	_APP_DeviceMouseTasks	;wreg free
  1679  000900  D731               	goto	l6063
  1680  000902                     __end_of_main:
  1681                           	opt stack 0
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           postinc0	equ	0xFEE
  1687                           wreg	equ	0xFE8
  1688                           postdec1	equ	0xFE5
  1689                           fsr1l	equ	0xFE1
  1690                           
  1691 ;; *************** function _USBDeviceInit *****************
  1692 ;; Defined at:
  1693 ;;		line 295 in file "../../../../../../framework/usb/src/usb_device.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  i               1   50[COMRAM] unsigned char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;		None               void
  1700 ;; Registers used:
  1701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1707 ;;      Params:         0       0       0       0       0       0       0       0       0
  1708 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1710 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1711 ;;Total ram usage:        1 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:   11
  1714 ;; This function calls:
  1715 ;;		_memset
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text1
  1722  001064                     __ptext1:
  1723                           	opt stack 0
  1724  001064                     _USBDeviceInit:
  1725                           	opt stack 19
  1726                           
  1727                           ;usb_device.c: 297: uint8_t i;
  1728                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  1729                           
  1730                           ;incstack = 0
  1731  001064  9AA0               	bcf	4000,5,c	;volatile
  1732                           
  1733                           ;usb_device.c: 303: ;
  1734                           ;usb_device.c: 306: {UEIR = 0;};
  1735  001066  0E00               	movlw	0
  1736  001068  6E6A               	movwf	3946,c	;volatile
  1737                           
  1738                           ;usb_device.c: 309: {UIR = 0;};
  1739  00106A  0E00               	movlw	0
  1740  00106C  6E68               	movwf	3944,c	;volatile
  1741                           
  1742                           ;usb_device.c: 312: UEP0 = 0;
  1743  00106E  0E00               	movlw	0
  1744  001070  6E70               	movwf	3952,c	;volatile
  1745                           
  1746                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(1));;
  1747  001072  0E71               	movlw	113
  1748  001074  6E2B               	movwf	memset@p1,c
  1749  001076  0E0F               	movlw	15
  1750  001078  6E2C               	movwf	memset@p1+1,c
  1751  00107A  0E00               	movlw	0
  1752  00107C  6E2E               	movwf	memset@c+1,c
  1753  00107E  0E00               	movlw	0
  1754  001080  6E2D               	movwf	memset@c,c
  1755  001082  0E00               	movlw	0
  1756  001084  6E30               	movwf	memset@n+1,c
  1757  001086  0E01               	movlw	1
  1758  001088  6E2F               	movwf	memset@n,c
  1759  00108A  ECA6  F018         	call	_memset	;wreg free
  1760                           
  1761                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1762  00108E  0E16               	movlw	22
  1763  001090  6E6F               	movwf	3951,c	;volatile
  1764  001092  0E9F               	movlw	159
  1765  001094  6E6B               	movwf	3947,c	;volatile
  1766  001096  0E7B               	movlw	123
  1767  001098  6E69               	movwf	3945,c	;volatile
  1768                           
  1769                           ;usb_device.c: 319: ;
  1770                           ;usb_device.c: 322: ;
  1771                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1772  00109A  0E00               	movlw	0
  1773  00109C  6E33               	movwf	USBDeviceInit@i,c
  1774  00109E                     l5839:
  1775  00109E  0E07               	movlw	7
  1776  0010A0  6433               	cpfsgt	USBDeviceInit@i,c
  1777  0010A2  D001               	goto	l5843
  1778  0010A4  D00E               	goto	l759
  1779  0010A6                     l5843:
  1780                           
  1781                           ;usb_device.c: 326: {
  1782                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  1783  0010A6  5033               	movf	USBDeviceInit@i,w,c
  1784  0010A8  0D04               	mullw	4
  1785  0010AA  0E00               	movlw	0
  1786  0010AC  24F3               	addwf	prodl,w,c
  1787  0010AE  6ED9               	movwf	fsr2l,c
  1788  0010B0  0E04               	movlw	4
  1789  0010B2  20F4               	addwfc	prodh,w,c
  1790  0010B4  6EDA               	movwf	fsr2h,c
  1791  0010B6  6ADE               	clrf	postinc2,c
  1792  0010B8  6ADE               	clrf	postinc2,c
  1793  0010BA  6ADE               	clrf	postinc2,c
  1794  0010BC  6ADD               	clrf	postdec2,c
  1795  0010BE  2A33               	incf	USBDeviceInit@i,f,c
  1796  0010C0  D7EE               	goto	l5839
  1797  0010C2                     l759:
  1798                           
  1799                           ;usb_device.c: 328: }
  1800                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  1801  0010C2  8C6D               	bsf	3949,6,c	;volatile
  1802                           
  1803                           ;usb_device.c: 334: UADDR = 0x00;
  1804  0010C4  0E00               	movlw	0
  1805  0010C6  6E6E               	movwf	3950,c	;volatile
  1806                           
  1807                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  1808  0010C8  986D               	bcf	3949,4,c	;volatile
  1809                           
  1810                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  1811  0010CA  9C6D               	bcf	3949,6,c	;volatile
  1812  0010CC                     l5855:
  1813                           
  1814                           ;usb_device.c: 344: {
  1815                           ;usb_device.c: 345: (UIR &= 0xF7);
  1816  0010CC  9668               	bcf	3944,3,c	;volatile
  1817                           
  1818                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  1819  0010CE  0E00               	movlw	0
  1820  0010D0  6E3F               	movwf	_inPipes+3,c	;volatile
  1821                           
  1822                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  1823  0010D2  0E00               	movlw	0
  1824  0010D4  6E37               	movwf	_outPipes+3,c	;volatile
  1825                           
  1826                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  1827  0010D6  0E00               	movlw	0
  1828  0010D8  6E39               	movwf	_outPipes+5,c	;volatile
  1829  0010DA  0E00               	movlw	0
  1830  0010DC  6E38               	movwf	_outPipes+4,c	;volatile
  1831                           
  1832                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  1833  0010DE  B668               	btfsc	3944,3,c	;volatile
  1834  0010E0  D7F5               	goto	l5855
  1835                           
  1836                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  1837  0010E2  0E01               	movlw	1
  1838  0010E4  6E56               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  1839                           
  1840                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  1841  0010E6  0E01               	movlw	1
  1842  0010E8  6E57               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  1843                           
  1844                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  1845  0010EA  0E00               	movlw	0
  1846  0010EC  6E53               	movwf	_USBDeferINDataStagePackets,c	;volatile
  1847                           
  1848                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  1849  0010EE  0E00               	movlw	0
  1850  0010F0  0100               	movlb	0	; () banked
  1851  0010F2  6FF5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  1852                           
  1853                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  1854  0010F4  0E00               	movlw	0
  1855  0010F6  6E52               	movwf	_USBBusIsSuspended,c	;volatile
  1856                           
  1857                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(1+1u); i++)
  1858  0010F8  0E00               	movlw	0
  1859  0010FA  6E33               	movwf	USBDeviceInit@i,c
  1860  0010FC                     l5867:
  1861                           
  1862                           ; BSR set to: 0
  1863  0010FC  0E01               	movlw	1
  1864  0010FE  6433               	cpfsgt	USBDeviceInit@i,c
  1865  001100  D001               	goto	l5871
  1866  001102  D02E               	goto	l5877
  1867  001104                     l5871:
  1868                           
  1869                           ;usb_device.c: 364: {
  1870                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  1871  001104  5033               	movf	USBDeviceInit@i,w,c
  1872  001106  0D02               	mullw	2
  1873  001108  0E42               	movlw	low _pBDTEntryIn
  1874  00110A  24F3               	addwf	prodl,w,c
  1875  00110C  6ED9               	movwf	fsr2l,c
  1876  00110E  0E00               	movlw	high _pBDTEntryIn
  1877  001110  20F4               	addwfc	prodh,w,c
  1878  001112  6EDA               	movwf	fsr2h,c
  1879  001114  0E00               	movlw	0
  1880  001116  6EDE               	movwf	postinc2,c
  1881  001118  0E00               	movlw	0
  1882  00111A  6EDD               	movwf	postdec2,c
  1883                           
  1884                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  1885  00111C  5033               	movf	USBDeviceInit@i,w,c
  1886  00111E  0D02               	mullw	2
  1887  001120  0ED3               	movlw	low _pBDTEntryOut
  1888  001122  24F3               	addwf	prodl,w,c
  1889  001124  6ED9               	movwf	fsr2l,c
  1890  001126  0E00               	movlw	high _pBDTEntryOut
  1891  001128  20F4               	addwfc	prodh,w,c
  1892  00112A  6EDA               	movwf	fsr2h,c
  1893  00112C  0E00               	movlw	0
  1894  00112E  6EDE               	movwf	postinc2,c
  1895  001130  0E00               	movlw	0
  1896  001132  6EDD               	movwf	postdec2,c
  1897                           
  1898                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  1899  001134  5033               	movf	USBDeviceInit@i,w,c
  1900  001136  0D01               	mullw	1
  1901  001138  0E48               	movlw	low _ep_data_in
  1902  00113A  24F3               	addwf	prodl,w,c
  1903  00113C  6ED9               	movwf	fsr2l,c
  1904  00113E  0E00               	movlw	high _ep_data_in
  1905  001140  20F4               	addwfc	prodh,w,c
  1906  001142  6EDA               	movwf	fsr2h,c
  1907  001144  0E00               	movlw	0
  1908  001146  6EDF               	movwf	indf2,c
  1909                           
  1910                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  1911  001148  5033               	movf	USBDeviceInit@i,w,c
  1912  00114A  0D01               	mullw	1
  1913  00114C  0E4A               	movlw	low _ep_data_out
  1914  00114E  24F3               	addwf	prodl,w,c
  1915  001150  6ED9               	movwf	fsr2l,c
  1916  001152  0E00               	movlw	high _ep_data_out
  1917  001154  20F4               	addwfc	prodh,w,c
  1918  001156  6EDA               	movwf	fsr2h,c
  1919  001158  0E00               	movlw	0
  1920  00115A  6EDF               	movwf	indf2,c
  1921  00115C  2A33               	incf	USBDeviceInit@i,f,c
  1922  00115E  D7CE               	goto	l5867
  1923  001160                     l5877:
  1924                           
  1925                           ;usb_device.c: 369: }
  1926                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1927  001160  0E08               	movlw	8
  1928  001162  6E42               	movwf	_pBDTEntryIn,c
  1929  001164  0E04               	movlw	4
  1930  001166  6E43               	movwf	_pBDTEntryIn+1,c
  1931                           
  1932                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  1933  001168  0E16               	movlw	22
  1934  00116A  6E70               	movwf	3952,c	;volatile
  1935                           
  1936                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  1937  00116C  0E04               	movlw	4
  1938  00116E  0104               	movlb	4	; () banked
  1939  001170  6F03               	movwf	3,b	;volatile
  1940  001172  0E20               	movlw	32
  1941  001174  6F02               	movwf	2,b	;volatile
  1942                           
  1943                           ; BSR set to: 4
  1944                           ;usb_device.c: 377: BDT[0].CNT = 8;
  1945  001176  0E08               	movlw	8
  1946  001178  0104               	movlb	4	; () banked
  1947  00117A  6F01               	movwf	1,b	;volatile
  1948                           
  1949                           ; BSR set to: 4
  1950                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  1951  00117C  0E04               	movlw	4
  1952  00117E  0104               	movlb	4	; () banked
  1953  001180  6F00               	movwf	0,b	;volatile
  1954                           
  1955                           ; BSR set to: 4
  1956                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  1957  001182  0104               	movlb	4	; () banked
  1958  001184  8F00               	bsf	0,7,b	;volatile
  1959                           
  1960                           ; BSR set to: 4
  1961                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  1962  001186  0E00               	movlw	0
  1963  001188  6E5C               	movwf	_USBActiveConfiguration,c	;volatile
  1964                           
  1965                           ; BSR set to: 4
  1966                           ;usb_device.c: 384: USB1msTickCount = 0;
  1967  00118A  0E00               	movlw	0
  1968  00118C  0100               	movlb	0	; () banked
  1969  00118E  6FCF               	movwf	_USB1msTickCount& (0+255),b	;volatile
  1970  001190  0E00               	movlw	0
  1971  001192  6FD0               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  1972  001194  0E00               	movlw	0
  1973  001196  6FD1               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  1974  001198  0E00               	movlw	0
  1975  00119A  6FD2               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  1979  00119C  0E00               	movlw	0
  1980  00119E  0100               	movlb	0	; () banked
  1981  0011A0  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  1985  0011A2  0E00               	movlw	0
  1986  0011A4  6E55               	movwf	_USBDeviceState,c	;volatile
  1987                           
  1988                           ; BSR set to: 0
  1989  0011A6  0012               	return		;funcret
  1990  0011A8                     __end_of_USBDeviceInit:
  1991                           	opt stack 0
  1992                           tblptru	equ	0xFF8
  1993                           tblptrh	equ	0xFF7
  1994                           tblptrl	equ	0xFF6
  1995                           tablat	equ	0xFF5
  1996                           prodh	equ	0xFF4
  1997                           prodl	equ	0xFF3
  1998                           postinc0	equ	0xFEE
  1999                           wreg	equ	0xFE8
  2000                           postdec1	equ	0xFE5
  2001                           fsr1l	equ	0xFE1
  2002                           indf2	equ	0xFDF
  2003                           postinc2	equ	0xFDE
  2004                           postdec2	equ	0xFDD
  2005                           fsr2h	equ	0xFDA
  2006                           fsr2l	equ	0xFD9
  2007                           
  2008 ;; *************** function _memset *****************
  2009 ;; Defined at:
  2010 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/memset.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  p1              2   42[COMRAM] PTR void 
  2013 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
  2014 ;;  c               2   44[COMRAM] int 
  2015 ;;  n               2   46[COMRAM] unsigned int 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  p               2   48[COMRAM] PTR unsigned char 
  2018 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  2   42[COMRAM] PTR void 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2028 ;;      Params:         6       0       0       0       0       0       0       0       0
  2029 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2031 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2032 ;;Total ram usage:        8 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:   10
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_USBDeviceInit
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text2
  2043  00314C                     __ptext2:
  2044                           	opt stack 0
  2045  00314C                     _memset:
  2046                           	opt stack 19
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;incstack = 0
  2050  00314C  C02B  F031         	movff	memset@p1,memset@p
  2051  003150  C02C  F032         	movff	memset@p1+1,memset@p+1
  2052  003154  D008               	goto	l5445
  2053  003156                     l5441:
  2054  003156  C031  FFD9         	movff	memset@p,fsr2l
  2055  00315A  C032  FFDA         	movff	memset@p+1,fsr2h
  2056  00315E  C02D  FFDF         	movff	memset@c,indf2
  2057  003162  4A31               	infsnz	memset@p,f,c
  2058  003164  2A32               	incf	memset@p+1,f,c
  2059  003166                     l5445:
  2060  003166  062F               	decf	memset@n,f,c
  2061  003168  A0D8               	btfss	status,0,c
  2062  00316A  0630               	decf	memset@n+1,f,c
  2063  00316C  282F               	incf	memset@n,w,c
  2064  00316E  E1F3               	bnz	l5441
  2065  003170  2830               	incf	memset@n+1,w,c
  2066  003172  B4D8               	btfsc	status,2,c
  2067  003174  0012               	return	
  2068  003176  D7EF               	goto	l5441
  2069  003178                     __end_of_memset:
  2070                           	opt stack 0
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           prodh	equ	0xFF4
  2076                           prodl	equ	0xFF3
  2077                           postinc0	equ	0xFEE
  2078                           wreg	equ	0xFE8
  2079                           postdec1	equ	0xFE5
  2080                           fsr1l	equ	0xFE1
  2081                           indf2	equ	0xFDF
  2082                           postinc2	equ	0xFDE
  2083                           postdec2	equ	0xFDD
  2084                           fsr2h	equ	0xFDA
  2085                           fsr2l	equ	0xFD9
  2086                           status	equ	0xFD8
  2087                           
  2088 ;; *************** function _USBDeviceAttach *****************
  2089 ;; Defined at:
  2090 ;;		line 1370 in file "../../../../../../framework/usb/src/usb_device.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;		None
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;		None               void
  2097 ;; Registers used:
  2098 ;;		wreg, status,2
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2104 ;;      Params:         0       0       0       0       0       0       0       0       0
  2105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2107 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2108 ;;Total ram usage:        0 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:   10
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text3
  2119  003090                     __ptext3:
  2120                           	opt stack 0
  2121  003090                     _USBDeviceAttach:
  2122                           	opt stack 20
  2123                           
  2124                           ;usb_device.c: 1374: {
  2125                           ;usb_device.c: 1375: if(1 == 1)
  2126                           
  2127                           ;incstack = 0
  2128  003090  5055               	movf	_USBDeviceState,w,c	;volatile
  2129  003092  A4D8               	btfss	status,2,c
  2130  003094  0012               	return	
  2131                           
  2132                           ;usb_device.c: 1376: {
  2133                           ;usb_device.c: 1378: UCON = 0;
  2134  003096  0E00               	movlw	0
  2135  003098  6E6D               	movwf	3949,c	;volatile
  2136                           
  2137                           ;usb_device.c: 1381: UIE = 0;
  2138  00309A  0E00               	movlw	0
  2139  00309C  6E69               	movwf	3945,c	;volatile
  2140                           
  2141                           ;usb_device.c: 1385: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  2142  00309E  0E16               	movlw	22
  2143  0030A0  6E6F               	movwf	3951,c	;volatile
  2144  0030A2  0E9F               	movlw	159
  2145  0030A4  6E6B               	movwf	3947,c	;volatile
  2146  0030A6  0E7B               	movlw	123
  2147  0030A8  6E69               	movwf	3945,c	;volatile
  2148                           
  2149                           ;usb_device.c: 1387: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  2150  0030AA  8ED0               	bsf	4048,7,c	;volatile
  2151  0030AC  8AA2               	bsf	4002,5,c	;volatile
  2152  0030AE  8AA0               	bsf	4000,5,c	;volatile
  2153  0030B0  8EF2               	bsf	intcon,7,c	;volatile
  2154                           
  2155                           ;usb_device.c: 1390: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2156  0030B2  D001               	goto	l819
  2157  0030B4                     l820:
  2158  0030B4  866D               	bsf	3949,3,c	;volatile
  2159  0030B6                     l819:
  2160  0030B6  A66D               	btfss	3949,3,c	;volatile
  2161  0030B8  D7FD               	goto	l820
  2162                           
  2163                           ;usb_device.c: 1393: USBDeviceState = ATTACHED_STATE;
  2164  0030BA  0E01               	movlw	1
  2165  0030BC  6E55               	movwf	_USBDeviceState,c	;volatile
  2166  0030BE  0012               	return	
  2167  0030C0                     __end_of_USBDeviceAttach:
  2168                           	opt stack 0
  2169                           tblptru	equ	0xFF8
  2170                           tblptrh	equ	0xFF7
  2171                           tblptrl	equ	0xFF6
  2172                           tablat	equ	0xFF5
  2173                           prodh	equ	0xFF4
  2174                           prodl	equ	0xFF3
  2175                           intcon	equ	0xFF2
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1l	equ	0xFE1
  2180                           indf2	equ	0xFDF
  2181                           postinc2	equ	0xFDE
  2182                           postdec2	equ	0xFDD
  2183                           fsr2h	equ	0xFDA
  2184                           fsr2l	equ	0xFD9
  2185                           status	equ	0xFD8
  2186                           
  2187 ;; *************** function _SYSTEM_Initialize *****************
  2188 ;; Defined at:
  2189 ;;		line 81 in file "../src/system_config/picdem_fs_usb/system.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  state           1    wreg     enum E4693
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  state           1   43[COMRAM] enum E4693
  2194 ;; Return value:  Size  Location     Type
  2195 ;;		None               void
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2203 ;;      Params:         0       0       0       0       0       0       0       0       0
  2204 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2206 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2207 ;;Total ram usage:        1 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:   11
  2210 ;; This function calls:
  2211 ;;		_BUTTON_Enable
  2212 ;;		_LED_Enable
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text4
  2219  003242                     __ptext4:
  2220                           	opt stack 0
  2221  003242                     _SYSTEM_Initialize:
  2222                           	opt stack 19
  2223                           
  2224                           ;incstack = 0
  2225                           ;SYSTEM_Initialize@state stored from wreg
  2226  003242  6E2C               	movwf	SYSTEM_Initialize@state,c
  2227                           
  2228                           ;system.c: 83: switch(state)
  2229  003244  D007               	goto	l5595
  2230  003246                     l5591:
  2231                           
  2232                           ;system.c: 86: LED_Enable(LED_D1);
  2233  003246  0E01               	movlw	1
  2234  003248  EC8D  F017         	call	_LED_Enable
  2235                           
  2236                           ;system.c: 87: BUTTON_Enable(BUTTON_S2);
  2237  00324C  0E01               	movlw	1
  2238  00324E  EC45  F019         	call	_BUTTON_Enable
  2239                           
  2240                           ;system.c: 95: }
  2241                           
  2242                           ;system.c: 94: break;
  2243                           
  2244                           ;system.c: 93: case SYSTEM_STATE_USB_RESUME:
  2245                           
  2246                           ;system.c: 91: break;
  2247                           
  2248                           ;system.c: 90: case SYSTEM_STATE_USB_SUSPEND:
  2249                           
  2250                           ;system.c: 88: break;
  2251  003252  0012               	return	
  2252  003254                     l5595:
  2253  003254  502C               	movf	SYSTEM_Initialize@state,w,c
  2254                           
  2255                           ; Switch size 1, requested type "space"
  2256                           ; Number of cases is 3, Range of values is 0 to 2
  2257                           ; switch strategies available:
  2258                           ; Name         Instructions Cycles
  2259                           ; simple_byte           10     6 (average)
  2260                           ;	Chosen strategy is simple_byte
  2261  003256  0A00               	xorlw	0	; case 0
  2262  003258  B4D8               	btfsc	status,2,c
  2263  00325A  D7F5               	goto	l5591
  2264  00325C  0A01               	xorlw	1	; case 1
  2265  00325E  B4D8               	btfsc	status,2,c
  2266  003260  0012               	return	
  2267  003262  0A03               	xorlw	3	; case 2
  2268  003264  0012               	return	
  2269  003266                     __end_of_SYSTEM_Initialize:
  2270                           	opt stack 0
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           prodh	equ	0xFF4
  2276                           prodl	equ	0xFF3
  2277                           intcon	equ	0xFF2
  2278                           postinc0	equ	0xFEE
  2279                           wreg	equ	0xFE8
  2280                           postdec1	equ	0xFE5
  2281                           fsr1l	equ	0xFE1
  2282                           indf2	equ	0xFDF
  2283                           postinc2	equ	0xFDE
  2284                           postdec2	equ	0xFDD
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _LED_Enable *****************
  2290 ;; Defined at:
  2291 ;;		line 257 in file "../../../../../../bsp/picdem_fs_usb/leds.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  led             1    wreg     enum E2
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  led             1   42[COMRAM] enum E2
  2296 ;; Return value:  Size  Location     Type
  2297 ;;		None               void
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0
  2306 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2308 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2309 ;;Total ram usage:        1 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:   10
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_SYSTEM_Initialize
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text5
  2320  002F1A                     __ptext5:
  2321                           	opt stack 0
  2322  002F1A                     _LED_Enable:
  2323                           	opt stack 19
  2324                           
  2325                           ;incstack = 0
  2326                           ;LED_Enable@led stored from wreg
  2327  002F1A  6E2B               	movwf	LED_Enable@led,c
  2328                           
  2329                           ;leds.c: 259: switch(led)
  2330  002F1C  D008               	goto	l5361
  2331  002F1E                     l613:
  2332                           
  2333                           ;leds.c: 262: TRISDbits.TRISD0 = 0;
  2334  002F1E  9095               	bcf	3989,0,c	;volatile
  2335                           
  2336                           ;leds.c: 263: break;
  2337  002F20  0012               	return	
  2338  002F22                     l615:
  2339                           
  2340                           ;leds.c: 266: TRISDbits.TRISD1 = 0;
  2341  002F22  9295               	bcf	3989,1,c	;volatile
  2342                           
  2343                           ;leds.c: 267: break;
  2344  002F24  0012               	return	
  2345  002F26                     l616:
  2346                           
  2347                           ;leds.c: 270: TRISDbits.TRISD2 = 0;
  2348  002F26  9495               	bcf	3989,2,c	;volatile
  2349                           
  2350                           ;leds.c: 271: break;
  2351  002F28  0012               	return	
  2352  002F2A                     l617:
  2353                           
  2354                           ;leds.c: 274: TRISDbits.TRISD3 = 0;
  2355  002F2A  9695               	bcf	3989,3,c	;volatile
  2356                           
  2357                           ;leds.c: 279: }
  2358                           
  2359                           ;leds.c: 278: break;
  2360                           
  2361                           ;leds.c: 277: case LED_NONE:
  2362                           
  2363                           ;leds.c: 275: break;
  2364  002F2C  0012               	return	
  2365  002F2E                     l5361:
  2366  002F2E  502B               	movf	LED_Enable@led,w,c
  2367                           
  2368                           ; Switch size 1, requested type "space"
  2369                           ; Number of cases is 5, Range of values is 0 to 4
  2370                           ; switch strategies available:
  2371                           ; Name         Instructions Cycles
  2372                           ; simple_byte           16     9 (average)
  2373                           ;	Chosen strategy is simple_byte
  2374  002F30  0A00               	xorlw	0	; case 0
  2375  002F32  B4D8               	btfsc	status,2,c
  2376  002F34  0012               	return	
  2377  002F36  0A01               	xorlw	1	; case 1
  2378  002F38  B4D8               	btfsc	status,2,c
  2379  002F3A  D7F1               	goto	l613
  2380  002F3C  0A03               	xorlw	3	; case 2
  2381  002F3E  B4D8               	btfsc	status,2,c
  2382  002F40  D7F0               	goto	l615
  2383  002F42  0A01               	xorlw	1	; case 3
  2384  002F44  B4D8               	btfsc	status,2,c
  2385  002F46  D7EF               	goto	l616
  2386  002F48  0A07               	xorlw	7	; case 4
  2387  002F4A  A4D8               	btfss	status,2,c
  2388  002F4C  0012               	return	
  2389  002F4E  D7ED               	goto	l617
  2390  002F50                     __end_of_LED_Enable:
  2391                           	opt stack 0
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           prodh	equ	0xFF4
  2397                           prodl	equ	0xFF3
  2398                           intcon	equ	0xFF2
  2399                           postinc0	equ	0xFEE
  2400                           wreg	equ	0xFE8
  2401                           postdec1	equ	0xFE5
  2402                           fsr1l	equ	0xFE1
  2403                           indf2	equ	0xFDF
  2404                           postinc2	equ	0xFDE
  2405                           postdec2	equ	0xFDD
  2406                           fsr2h	equ	0xFDA
  2407                           fsr2l	equ	0xFD9
  2408                           status	equ	0xFD8
  2409                           
  2410 ;; *************** function _BUTTON_Enable *****************
  2411 ;; Defined at:
  2412 ;;		line 128 in file "../../../../../../bsp/picdem_fs_usb/buttons.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  button          1    wreg     enum E4441
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  button          1   42[COMRAM] enum E4441
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0
  2427 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2429 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2430 ;;Total ram usage:        1 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:   10
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_SYSTEM_Initialize
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text6
  2441  00328A                     __ptext6:
  2442                           	opt stack 0
  2443  00328A                     _BUTTON_Enable:
  2444                           	opt stack 19
  2445                           
  2446                           ;incstack = 0
  2447                           ;BUTTON_Enable@button stored from wreg
  2448  00328A  6E2B               	movwf	BUTTON_Enable@button,c
  2449                           
  2450                           ;buttons.c: 130: switch(button)
  2451  00328C  D004               	goto	l5367
  2452  00328E                     l561:
  2453                           
  2454                           ;buttons.c: 133: TRISBbits.TRISB4 = 1;
  2455  00328E  8893               	bsf	3987,4,c	;volatile
  2456                           
  2457                           ;buttons.c: 134: break;
  2458  003290  0012               	return	
  2459  003292                     l563:
  2460                           
  2461                           ;buttons.c: 137: TRISBbits.TRISB5 = 1;
  2462  003292  8A93               	bsf	3987,5,c	;volatile
  2463                           
  2464                           ;buttons.c: 142: }
  2465                           
  2466                           ;buttons.c: 141: break;
  2467                           
  2468                           ;buttons.c: 140: case BUTTON_NONE:
  2469                           
  2470                           ;buttons.c: 138: break;
  2471  003294  0012               	return	
  2472  003296                     l5367:
  2473  003296  502B               	movf	BUTTON_Enable@button,w,c
  2474                           
  2475                           ; Switch size 1, requested type "space"
  2476                           ; Number of cases is 3, Range of values is 0 to 2
  2477                           ; switch strategies available:
  2478                           ; Name         Instructions Cycles
  2479                           ; simple_byte           10     6 (average)
  2480                           ;	Chosen strategy is simple_byte
  2481  003298  0A00               	xorlw	0	; case 0
  2482  00329A  B4D8               	btfsc	status,2,c
  2483  00329C  0012               	return	
  2484  00329E  0A01               	xorlw	1	; case 1
  2485  0032A0  B4D8               	btfsc	status,2,c
  2486  0032A2  D7F5               	goto	l561
  2487  0032A4  0A03               	xorlw	3	; case 2
  2488  0032A6  A4D8               	btfss	status,2,c
  2489  0032A8  0012               	return	
  2490  0032AA  D7F3               	goto	l563
  2491  0032AC                     __end_of_BUTTON_Enable:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           intcon	equ	0xFF2
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           postdec1	equ	0xFE5
  2503                           fsr1l	equ	0xFE1
  2504                           indf2	equ	0xFDF
  2505                           postinc2	equ	0xFDE
  2506                           postdec2	equ	0xFDD
  2507                           fsr2h	equ	0xFDA
  2508                           fsr2l	equ	0xFD9
  2509                           status	equ	0xFD8
  2510                           
  2511 ;; *************** function _OpenI2C *****************
  2512 ;; Defined at:
  2513 ;;		line 14 in file "../../../../../../../../../Desktop/IMU/i2c/i2c_open.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  sync_mode       1    wreg     unsigned char 
  2516 ;;  slew            1   42[COMRAM] unsigned char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  sync_mode       1   43[COMRAM] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;		None               void
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2528 ;;      Params:         1       0       0       0       0       0       0       0       0
  2529 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2531 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2532 ;;Total ram usage:        2 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:   10
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_main
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text7
  2543  0032CE                     __ptext7:
  2544                           	opt stack 0
  2545  0032CE                     _OpenI2C:
  2546                           	opt stack 20
  2547                           
  2548                           ;incstack = 0
  2549                           ;OpenI2C@sync_mode stored from wreg
  2550  0032CE  6E2C               	movwf	OpenI2C@sync_mode,c
  2551                           
  2552                           ;i2c_open.c: 16: SSPSTAT &= 0x3F;
  2553  0032D0  0E3F               	movlw	63
  2554  0032D2  16C7               	andwf	4039,f,c	;volatile
  2555                           
  2556                           ;i2c_open.c: 17: SSPCON1 = 0x00;
  2557  0032D4  0E00               	movlw	0
  2558  0032D6  6EC6               	movwf	4038,c	;volatile
  2559                           
  2560                           ;i2c_open.c: 18: SSPCON2 = 0x00;
  2561  0032D8  0E00               	movlw	0
  2562  0032DA  6EC5               	movwf	4037,c	;volatile
  2563                           
  2564                           ;i2c_open.c: 19: SSPCON1 |= sync_mode;
  2565  0032DC  502C               	movf	OpenI2C@sync_mode,w,c
  2566  0032DE  12C6               	iorwf	4038,f,c	;volatile
  2567                           
  2568                           ;i2c_open.c: 20: SSPSTAT |= slew;
  2569  0032E0  502B               	movf	OpenI2C@slew,w,c
  2570  0032E2  12C7               	iorwf	4039,f,c	;volatile
  2571                           
  2572                           ;i2c_open.c: 22: TRISBbits.TRISB1 = 1;
  2573  0032E4  8293               	bsf	3987,1,c	;volatile
  2574                           
  2575                           ;i2c_open.c: 23: TRISBbits.TRISB0 = 1;
  2576  0032E6  8093               	bsf	3987,0,c	;volatile
  2577                           
  2578                           ;i2c_open.c: 24: SSPCON1 |= 0b00100000;
  2579  0032E8  8AC6               	bsf	4038,5,c	;volatile
  2580  0032EA  0012               	return		;funcret
  2581  0032EC                     __end_of_OpenI2C:
  2582                           	opt stack 0
  2583                           tblptru	equ	0xFF8
  2584                           tblptrh	equ	0xFF7
  2585                           tblptrl	equ	0xFF6
  2586                           tablat	equ	0xFF5
  2587                           prodh	equ	0xFF4
  2588                           prodl	equ	0xFF3
  2589                           intcon	equ	0xFF2
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           postdec1	equ	0xFE5
  2593                           fsr1l	equ	0xFE1
  2594                           indf2	equ	0xFDF
  2595                           postinc2	equ	0xFDE
  2596                           postdec2	equ	0xFDD
  2597                           fsr2h	equ	0xFDA
  2598                           fsr2l	equ	0xFD9
  2599                           status	equ	0xFD8
  2600                           
  2601 ;; *************** function _MPU6050_ReadAccZ *****************
  2602 ;; Defined at:
  2603 ;;		line 330 in file "../../../../../../../../../Desktop/IMU/MPU6050.h"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  acczl           2    6[BANK0 ] int 
  2608 ;;  acczh           2    4[BANK0 ] int 
  2609 ;;  accz            2    2[BANK0 ] int 
  2610 ;;  write           2    0[BANK0 ] int 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  2   44[COMRAM] int 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2620 ;;      Params:         2       0       0       0       0       0       0       0       0
  2621 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2622 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2623 ;;      Totals:         4       8       0       0       0       0       0       0       0
  2624 ;;Total ram usage:       12 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:   12
  2627 ;; This function calls:
  2628 ;;		_IdleI2C
  2629 ;;		_ReadI2C
  2630 ;;		_WriteI2C
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text8
  2637  0021DA                     __ptext8:
  2638                           	opt stack 0
  2639  0021DA                     _MPU6050_ReadAccZ:
  2640                           	opt stack 18
  2641                           
  2642                           ;MPU6050.h: 332: int write;
  2643                           ;MPU6050.h: 333: signed int accz, acczh, acczl;
  2644                           ;MPU6050.h: 335: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2645                           
  2646                           ;incstack = 0
  2647  0021DA  80C5               	bsf	4037,0,c	;volatile
  2648  0021DC                     l301:
  2649  0021DC  B0C5               	btfsc	4037,0,c	;volatile
  2650  0021DE  D7FE               	goto	l301
  2651                           
  2652                           ;MPU6050.h: 336: IdleI2C();
  2653  0021E0  EC9B  F019         	call	_IdleI2C	;wreg free
  2654                           
  2655                           ;MPU6050.h: 337: write = WriteI2C(0xD0);
  2656  0021E4  0ED0               	movlw	208
  2657  0021E6  EC47  F016         	call	_WriteI2C
  2658  0021EA  0100               	movlb	0	; () banked
  2659  0021EC  6F60               	movwf	MPU6050_ReadAccZ@write& (0+255),b
  2660  0021EE  6B61               	clrf	(MPU6050_ReadAccZ@write+1)& (0+255),b
  2661  0021F0  BF60               	btfsc	MPU6050_ReadAccZ@write& (0+255),7,b
  2662  0021F2  0761               	decf	(MPU6050_ReadAccZ@write+1)& (0+255),f,b
  2663                           
  2664                           ;MPU6050.h: 338: IdleI2C();
  2665  0021F4  EC9B  F019         	call	_IdleI2C	;wreg free
  2666                           
  2667                           ;MPU6050.h: 339: write = WriteI2C(0x3F);
  2668  0021F8  0E3F               	movlw	63
  2669  0021FA  EC47  F016         	call	_WriteI2C
  2670  0021FE  0100               	movlb	0	; () banked
  2671  002200  6F60               	movwf	MPU6050_ReadAccZ@write& (0+255),b
  2672  002202  6B61               	clrf	(MPU6050_ReadAccZ@write+1)& (0+255),b
  2673  002204  BF60               	btfsc	MPU6050_ReadAccZ@write& (0+255),7,b
  2674  002206  0761               	decf	(MPU6050_ReadAccZ@write+1)& (0+255),f,b
  2675                           
  2676                           ;MPU6050.h: 340: IdleI2C();
  2677  002208  EC9B  F019         	call	_IdleI2C	;wreg free
  2678                           
  2679                           ;MPU6050.h: 342: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2680  00220C  82C5               	bsf	4037,1,c	;volatile
  2681  00220E                     l304:
  2682  00220E  B2C5               	btfsc	4037,1,c	;volatile
  2683  002210  D7FE               	goto	l304
  2684                           
  2685                           ;MPU6050.h: 343: IdleI2C();
  2686  002212  EC9B  F019         	call	_IdleI2C	;wreg free
  2687                           
  2688                           ;MPU6050.h: 344: write = WriteI2C(0xD1);
  2689  002216  0ED1               	movlw	209
  2690  002218  EC47  F016         	call	_WriteI2C
  2691  00221C  0100               	movlb	0	; () banked
  2692  00221E  6F60               	movwf	MPU6050_ReadAccZ@write& (0+255),b
  2693  002220  6B61               	clrf	(MPU6050_ReadAccZ@write+1)& (0+255),b
  2694  002222  BF60               	btfsc	MPU6050_ReadAccZ@write& (0+255),7,b
  2695  002224  0761               	decf	(MPU6050_ReadAccZ@write+1)& (0+255),f,b
  2696                           
  2697                           ;MPU6050.h: 346: IdleI2C();
  2698  002226  EC9B  F019         	call	_IdleI2C	;wreg free
  2699                           
  2700                           ;MPU6050.h: 347: acczh = ReadI2C();
  2701  00222A  EC76  F019         	call	_ReadI2C	;wreg free
  2702  00222E  6E2F               	movwf	??_MPU6050_ReadAccZ& (0+255),c
  2703  002230  502F               	movf	??_MPU6050_ReadAccZ,w,c
  2704  002232  0100               	movlb	0	; () banked
  2705  002234  6F64               	movwf	MPU6050_ReadAccZ@acczh& (0+255),b
  2706  002236  6B65               	clrf	(MPU6050_ReadAccZ@acczh+1)& (0+255),b
  2707                           
  2708                           ;MPU6050.h: 348: IdleI2C();
  2709  002238  EC9B  F019         	call	_IdleI2C	;wreg free
  2710                           
  2711                           ;MPU6050.h: 349: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2712  00223C  9AC5               	bcf	4037,5,c	;volatile
  2713  00223E  88C5               	bsf	4037,4,c	;volatile
  2714  002240                     l307:
  2715  002240  B8C5               	btfsc	4037,4,c	;volatile
  2716  002242  D7FE               	goto	l307
  2717                           
  2718                           ;MPU6050.h: 351: IdleI2C();
  2719  002244  EC9B  F019         	call	_IdleI2C	;wreg free
  2720                           
  2721                           ;MPU6050.h: 352: acczl = ReadI2C();
  2722  002248  EC76  F019         	call	_ReadI2C	;wreg free
  2723  00224C  6E2F               	movwf	??_MPU6050_ReadAccZ& (0+255),c
  2724  00224E  502F               	movf	??_MPU6050_ReadAccZ,w,c
  2725  002250  0100               	movlb	0	; () banked
  2726  002252  6F66               	movwf	MPU6050_ReadAccZ@acczl& (0+255),b
  2727  002254  6B67               	clrf	(MPU6050_ReadAccZ@acczl+1)& (0+255),b
  2728                           
  2729                           ;MPU6050.h: 353: IdleI2C();
  2730  002256  EC9B  F019         	call	_IdleI2C	;wreg free
  2731                           
  2732                           ;MPU6050.h: 354: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2733  00225A  8AC5               	bsf	4037,5,c	;volatile
  2734  00225C  88C5               	bsf	4037,4,c	;volatile
  2735  00225E                     l310:
  2736  00225E  B8C5               	btfsc	4037,4,c	;volatile
  2737  002260  D7FE               	goto	l310
  2738                           
  2739                           ;MPU6050.h: 355: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2740  002262  84C5               	bsf	4037,2,c	;volatile
  2741  002264                     l313:
  2742  002264  B4C5               	btfsc	4037,2,c	;volatile
  2743  002266  D7FE               	goto	l313
  2744                           
  2745                           ;MPU6050.h: 357: accz = (acczh << 8) | acczl;
  2746  002268  0100               	movlb	0	; () banked
  2747  00226A  5164               	movf	MPU6050_ReadAccZ@acczh& (0+255),w,b
  2748  00226C  6E30               	movwf	(??_MPU6050_ReadAccZ+1)& (0+255),c
  2749  00226E  6A2F               	clrf	??_MPU6050_ReadAccZ& (0+255),c
  2750  002270  0100               	movlb	0	; () banked
  2751  002272  5166               	movf	MPU6050_ReadAccZ@acczl& (0+255),w,b
  2752  002274  102F               	iorwf	??_MPU6050_ReadAccZ,w,c
  2753  002276  0100               	movlb	0	; () banked
  2754  002278  6F62               	movwf	MPU6050_ReadAccZ@accz& (0+255),b
  2755  00227A  0100               	movlb	0	; () banked
  2756  00227C  5167               	movf	(MPU6050_ReadAccZ@acczl+1)& (0+255),w,b
  2757  00227E  1030               	iorwf	??_MPU6050_ReadAccZ+1,w,c
  2758  002280  0100               	movlb	0	; () banked
  2759  002282  6F63               	movwf	(MPU6050_ReadAccZ@accz+1)& (0+255),b
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;MPU6050.h: 358: return accz;
  2763  002284  C062  F02D         	movff	MPU6050_ReadAccZ@accz,?_MPU6050_ReadAccZ
  2764  002288  C063  F02E         	movff	MPU6050_ReadAccZ@accz+1,?_MPU6050_ReadAccZ+1
  2765  00228C  0012               	return	
  2766  00228E                     __end_of_MPU6050_ReadAccZ:
  2767                           	opt stack 0
  2768                           tblptru	equ	0xFF8
  2769                           tblptrh	equ	0xFF7
  2770                           tblptrl	equ	0xFF6
  2771                           tablat	equ	0xFF5
  2772                           prodh	equ	0xFF4
  2773                           prodl	equ	0xFF3
  2774                           intcon	equ	0xFF2
  2775                           postinc0	equ	0xFEE
  2776                           wreg	equ	0xFE8
  2777                           postdec1	equ	0xFE5
  2778                           fsr1l	equ	0xFE1
  2779                           indf2	equ	0xFDF
  2780                           postinc2	equ	0xFDE
  2781                           postdec2	equ	0xFDD
  2782                           fsr2h	equ	0xFDA
  2783                           fsr2l	equ	0xFD9
  2784                           status	equ	0xFD8
  2785                           
  2786 ;; *************** function _MPU6050_ReadAccY *****************
  2787 ;; Defined at:
  2788 ;;		line 298 in file "../../../../../../../../../Desktop/IMU/MPU6050.h"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  accyl           2    6[BANK0 ] int 
  2793 ;;  accyh           2    4[BANK0 ] int 
  2794 ;;  accy            2    2[BANK0 ] int 
  2795 ;;  write           2    0[BANK0 ] int 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  2   44[COMRAM] int 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2805 ;;      Params:         2       0       0       0       0       0       0       0       0
  2806 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2807 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2808 ;;      Totals:         4       8       0       0       0       0       0       0       0
  2809 ;;Total ram usage:       12 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:   12
  2812 ;; This function calls:
  2813 ;;		_IdleI2C
  2814 ;;		_ReadI2C
  2815 ;;		_WriteI2C
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text9
  2822  00228E                     __ptext9:
  2823                           	opt stack 0
  2824  00228E                     _MPU6050_ReadAccY:
  2825                           	opt stack 18
  2826                           
  2827                           ;MPU6050.h: 300: int write;
  2828                           ;MPU6050.h: 301: signed int accy, accyh, accyl;
  2829                           ;MPU6050.h: 303: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;incstack = 0
  2833  00228E  80C5               	bsf	4037,0,c	;volatile
  2834  002290                     l283:
  2835  002290  B0C5               	btfsc	4037,0,c	;volatile
  2836  002292  D7FE               	goto	l283
  2837                           
  2838                           ;MPU6050.h: 304: IdleI2C();
  2839  002294  EC9B  F019         	call	_IdleI2C	;wreg free
  2840                           
  2841                           ;MPU6050.h: 305: write = WriteI2C(0xD0);
  2842  002298  0ED0               	movlw	208
  2843  00229A  EC47  F016         	call	_WriteI2C
  2844  00229E  0100               	movlb	0	; () banked
  2845  0022A0  6F60               	movwf	MPU6050_ReadAccY@write& (0+255),b
  2846  0022A2  6B61               	clrf	(MPU6050_ReadAccY@write+1)& (0+255),b
  2847  0022A4  BF60               	btfsc	MPU6050_ReadAccY@write& (0+255),7,b
  2848  0022A6  0761               	decf	(MPU6050_ReadAccY@write+1)& (0+255),f,b
  2849                           
  2850                           ;MPU6050.h: 306: IdleI2C();
  2851  0022A8  EC9B  F019         	call	_IdleI2C	;wreg free
  2852                           
  2853                           ;MPU6050.h: 307: write = WriteI2C(0x3D);
  2854  0022AC  0E3D               	movlw	61
  2855  0022AE  EC47  F016         	call	_WriteI2C
  2856  0022B2  0100               	movlb	0	; () banked
  2857  0022B4  6F60               	movwf	MPU6050_ReadAccY@write& (0+255),b
  2858  0022B6  6B61               	clrf	(MPU6050_ReadAccY@write+1)& (0+255),b
  2859  0022B8  BF60               	btfsc	MPU6050_ReadAccY@write& (0+255),7,b
  2860  0022BA  0761               	decf	(MPU6050_ReadAccY@write+1)& (0+255),f,b
  2861                           
  2862                           ;MPU6050.h: 308: IdleI2C();
  2863  0022BC  EC9B  F019         	call	_IdleI2C	;wreg free
  2864                           
  2865                           ;MPU6050.h: 310: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2866  0022C0  82C5               	bsf	4037,1,c	;volatile
  2867  0022C2                     l286:
  2868  0022C2  B2C5               	btfsc	4037,1,c	;volatile
  2869  0022C4  D7FE               	goto	l286
  2870                           
  2871                           ;MPU6050.h: 311: IdleI2C();
  2872  0022C6  EC9B  F019         	call	_IdleI2C	;wreg free
  2873                           
  2874                           ;MPU6050.h: 312: write = WriteI2C(0xD1);
  2875  0022CA  0ED1               	movlw	209
  2876  0022CC  EC47  F016         	call	_WriteI2C
  2877  0022D0  0100               	movlb	0	; () banked
  2878  0022D2  6F60               	movwf	MPU6050_ReadAccY@write& (0+255),b
  2879  0022D4  6B61               	clrf	(MPU6050_ReadAccY@write+1)& (0+255),b
  2880  0022D6  BF60               	btfsc	MPU6050_ReadAccY@write& (0+255),7,b
  2881  0022D8  0761               	decf	(MPU6050_ReadAccY@write+1)& (0+255),f,b
  2882                           
  2883                           ;MPU6050.h: 314: IdleI2C();
  2884  0022DA  EC9B  F019         	call	_IdleI2C	;wreg free
  2885                           
  2886                           ;MPU6050.h: 315: accyh = ReadI2C();
  2887  0022DE  EC76  F019         	call	_ReadI2C	;wreg free
  2888  0022E2  6E2F               	movwf	??_MPU6050_ReadAccY& (0+255),c
  2889  0022E4  502F               	movf	??_MPU6050_ReadAccY,w,c
  2890  0022E6  0100               	movlb	0	; () banked
  2891  0022E8  6F64               	movwf	MPU6050_ReadAccY@accyh& (0+255),b
  2892  0022EA  6B65               	clrf	(MPU6050_ReadAccY@accyh+1)& (0+255),b
  2893                           
  2894                           ;MPU6050.h: 316: IdleI2C();
  2895  0022EC  EC9B  F019         	call	_IdleI2C	;wreg free
  2896                           
  2897                           ;MPU6050.h: 317: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2898  0022F0  9AC5               	bcf	4037,5,c	;volatile
  2899  0022F2  88C5               	bsf	4037,4,c	;volatile
  2900  0022F4                     l289:
  2901  0022F4  B8C5               	btfsc	4037,4,c	;volatile
  2902  0022F6  D7FE               	goto	l289
  2903                           
  2904                           ;MPU6050.h: 319: IdleI2C();
  2905  0022F8  EC9B  F019         	call	_IdleI2C	;wreg free
  2906                           
  2907                           ;MPU6050.h: 320: accyl = ReadI2C();
  2908  0022FC  EC76  F019         	call	_ReadI2C	;wreg free
  2909  002300  6E2F               	movwf	??_MPU6050_ReadAccY& (0+255),c
  2910  002302  502F               	movf	??_MPU6050_ReadAccY,w,c
  2911  002304  0100               	movlb	0	; () banked
  2912  002306  6F66               	movwf	MPU6050_ReadAccY@accyl& (0+255),b
  2913  002308  6B67               	clrf	(MPU6050_ReadAccY@accyl+1)& (0+255),b
  2914                           
  2915                           ;MPU6050.h: 321: IdleI2C();
  2916  00230A  EC9B  F019         	call	_IdleI2C	;wreg free
  2917                           
  2918                           ;MPU6050.h: 322: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2919  00230E  8AC5               	bsf	4037,5,c	;volatile
  2920  002310  88C5               	bsf	4037,4,c	;volatile
  2921  002312                     l292:
  2922  002312  B8C5               	btfsc	4037,4,c	;volatile
  2923  002314  D7FE               	goto	l292
  2924                           
  2925                           ;MPU6050.h: 323: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2926  002316  84C5               	bsf	4037,2,c	;volatile
  2927  002318                     l295:
  2928  002318  B4C5               	btfsc	4037,2,c	;volatile
  2929  00231A  D7FE               	goto	l295
  2930                           
  2931                           ;MPU6050.h: 325: accy = (accyh << 8) | accyl;
  2932  00231C  0100               	movlb	0	; () banked
  2933  00231E  5164               	movf	MPU6050_ReadAccY@accyh& (0+255),w,b
  2934  002320  6E30               	movwf	(??_MPU6050_ReadAccY+1)& (0+255),c
  2935  002322  6A2F               	clrf	??_MPU6050_ReadAccY& (0+255),c
  2936  002324  0100               	movlb	0	; () banked
  2937  002326  5166               	movf	MPU6050_ReadAccY@accyl& (0+255),w,b
  2938  002328  102F               	iorwf	??_MPU6050_ReadAccY,w,c
  2939  00232A  0100               	movlb	0	; () banked
  2940  00232C  6F62               	movwf	MPU6050_ReadAccY@accy& (0+255),b
  2941  00232E  0100               	movlb	0	; () banked
  2942  002330  5167               	movf	(MPU6050_ReadAccY@accyl+1)& (0+255),w,b
  2943  002332  1030               	iorwf	??_MPU6050_ReadAccY+1,w,c
  2944  002334  0100               	movlb	0	; () banked
  2945  002336  6F63               	movwf	(MPU6050_ReadAccY@accy+1)& (0+255),b
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;MPU6050.h: 326: return accy;
  2949  002338  C062  F02D         	movff	MPU6050_ReadAccY@accy,?_MPU6050_ReadAccY
  2950  00233C  C063  F02E         	movff	MPU6050_ReadAccY@accy+1,?_MPU6050_ReadAccY+1
  2951  002340  0012               	return	
  2952  002342                     __end_of_MPU6050_ReadAccY:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           prodh	equ	0xFF4
  2959                           prodl	equ	0xFF3
  2960                           intcon	equ	0xFF2
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           postdec1	equ	0xFE5
  2964                           fsr1l	equ	0xFE1
  2965                           indf2	equ	0xFDF
  2966                           postinc2	equ	0xFDE
  2967                           postdec2	equ	0xFDD
  2968                           fsr2h	equ	0xFDA
  2969                           fsr2l	equ	0xFD9
  2970                           status	equ	0xFD8
  2971                           
  2972 ;; *************** function _MPU6050_ReadAccX *****************
  2973 ;; Defined at:
  2974 ;;		line 267 in file "../../../../../../../../../Desktop/IMU/MPU6050.h"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  accxl           2    6[BANK0 ] int 
  2979 ;;  accxh           2    4[BANK0 ] int 
  2980 ;;  accx            2    2[BANK0 ] int 
  2981 ;;  write           2    0[BANK0 ] int 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  2   44[COMRAM] int 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2991 ;;      Params:         2       0       0       0       0       0       0       0       0
  2992 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2993 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2994 ;;      Totals:         4       8       0       0       0       0       0       0       0
  2995 ;;Total ram usage:       12 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:   12
  2998 ;; This function calls:
  2999 ;;		_IdleI2C
  3000 ;;		_ReadI2C
  3001 ;;		_WriteI2C
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text10
  3008  002342                     __ptext10:
  3009                           	opt stack 0
  3010  002342                     _MPU6050_ReadAccX:
  3011                           	opt stack 18
  3012                           
  3013                           ;MPU6050.h: 269: int write;
  3014                           ;MPU6050.h: 270: signed int accx, accxh, accxl;
  3015                           ;MPU6050.h: 272: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;incstack = 0
  3019  002342  80C5               	bsf	4037,0,c	;volatile
  3020  002344                     l265:
  3021  002344  B0C5               	btfsc	4037,0,c	;volatile
  3022  002346  D7FE               	goto	l265
  3023                           
  3024                           ;MPU6050.h: 273: IdleI2C();
  3025  002348  EC9B  F019         	call	_IdleI2C	;wreg free
  3026                           
  3027                           ;MPU6050.h: 274: write = WriteI2C(0xD0);
  3028  00234C  0ED0               	movlw	208
  3029  00234E  EC47  F016         	call	_WriteI2C
  3030  002352  0100               	movlb	0	; () banked
  3031  002354  6F60               	movwf	MPU6050_ReadAccX@write& (0+255),b
  3032  002356  6B61               	clrf	(MPU6050_ReadAccX@write+1)& (0+255),b
  3033  002358  BF60               	btfsc	MPU6050_ReadAccX@write& (0+255),7,b
  3034  00235A  0761               	decf	(MPU6050_ReadAccX@write+1)& (0+255),f,b
  3035                           
  3036                           ;MPU6050.h: 275: IdleI2C();
  3037  00235C  EC9B  F019         	call	_IdleI2C	;wreg free
  3038                           
  3039                           ;MPU6050.h: 276: write = WriteI2C(0x3B);
  3040  002360  0E3B               	movlw	59
  3041  002362  EC47  F016         	call	_WriteI2C
  3042  002366  0100               	movlb	0	; () banked
  3043  002368  6F60               	movwf	MPU6050_ReadAccX@write& (0+255),b
  3044  00236A  6B61               	clrf	(MPU6050_ReadAccX@write+1)& (0+255),b
  3045  00236C  BF60               	btfsc	MPU6050_ReadAccX@write& (0+255),7,b
  3046  00236E  0761               	decf	(MPU6050_ReadAccX@write+1)& (0+255),f,b
  3047                           
  3048                           ;MPU6050.h: 277: IdleI2C();
  3049  002370  EC9B  F019         	call	_IdleI2C	;wreg free
  3050                           
  3051                           ;MPU6050.h: 279: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  3052  002374  82C5               	bsf	4037,1,c	;volatile
  3053  002376                     l268:
  3054  002376  B2C5               	btfsc	4037,1,c	;volatile
  3055  002378  D7FE               	goto	l268
  3056                           
  3057                           ;MPU6050.h: 280: IdleI2C();
  3058  00237A  EC9B  F019         	call	_IdleI2C	;wreg free
  3059                           
  3060                           ;MPU6050.h: 281: write = WriteI2C(0xD1);
  3061  00237E  0ED1               	movlw	209
  3062  002380  EC47  F016         	call	_WriteI2C
  3063  002384  0100               	movlb	0	; () banked
  3064  002386  6F60               	movwf	MPU6050_ReadAccX@write& (0+255),b
  3065  002388  6B61               	clrf	(MPU6050_ReadAccX@write+1)& (0+255),b
  3066  00238A  BF60               	btfsc	MPU6050_ReadAccX@write& (0+255),7,b
  3067  00238C  0761               	decf	(MPU6050_ReadAccX@write+1)& (0+255),f,b
  3068                           
  3069                           ;MPU6050.h: 283: IdleI2C();
  3070  00238E  EC9B  F019         	call	_IdleI2C	;wreg free
  3071                           
  3072                           ;MPU6050.h: 284: accxh = ReadI2C();
  3073  002392  EC76  F019         	call	_ReadI2C	;wreg free
  3074  002396  6E2F               	movwf	??_MPU6050_ReadAccX& (0+255),c
  3075  002398  502F               	movf	??_MPU6050_ReadAccX,w,c
  3076  00239A  0100               	movlb	0	; () banked
  3077  00239C  6F64               	movwf	MPU6050_ReadAccX@accxh& (0+255),b
  3078  00239E  6B65               	clrf	(MPU6050_ReadAccX@accxh+1)& (0+255),b
  3079                           
  3080                           ;MPU6050.h: 285: IdleI2C();
  3081  0023A0  EC9B  F019         	call	_IdleI2C	;wreg free
  3082                           
  3083                           ;MPU6050.h: 286: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  3084  0023A4  9AC5               	bcf	4037,5,c	;volatile
  3085  0023A6  88C5               	bsf	4037,4,c	;volatile
  3086  0023A8                     l271:
  3087  0023A8  B8C5               	btfsc	4037,4,c	;volatile
  3088  0023AA  D7FE               	goto	l271
  3089                           
  3090                           ;MPU6050.h: 288: IdleI2C();
  3091  0023AC  EC9B  F019         	call	_IdleI2C	;wreg free
  3092                           
  3093                           ;MPU6050.h: 289: accxl = ReadI2C();
  3094  0023B0  EC76  F019         	call	_ReadI2C	;wreg free
  3095  0023B4  6E2F               	movwf	??_MPU6050_ReadAccX& (0+255),c
  3096  0023B6  502F               	movf	??_MPU6050_ReadAccX,w,c
  3097  0023B8  0100               	movlb	0	; () banked
  3098  0023BA  6F66               	movwf	MPU6050_ReadAccX@accxl& (0+255),b
  3099  0023BC  6B67               	clrf	(MPU6050_ReadAccX@accxl+1)& (0+255),b
  3100                           
  3101                           ;MPU6050.h: 290: IdleI2C();
  3102  0023BE  EC9B  F019         	call	_IdleI2C	;wreg free
  3103                           
  3104                           ;MPU6050.h: 291: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  3105  0023C2  8AC5               	bsf	4037,5,c	;volatile
  3106  0023C4  88C5               	bsf	4037,4,c	;volatile
  3107  0023C6                     l274:
  3108  0023C6  B8C5               	btfsc	4037,4,c	;volatile
  3109  0023C8  D7FE               	goto	l274
  3110                           
  3111                           ;MPU6050.h: 292: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3112  0023CA  84C5               	bsf	4037,2,c	;volatile
  3113  0023CC                     l277:
  3114  0023CC  B4C5               	btfsc	4037,2,c	;volatile
  3115  0023CE  D7FE               	goto	l277
  3116                           
  3117                           ;MPU6050.h: 294: accx = (accxh << 8) | accxl;
  3118  0023D0  0100               	movlb	0	; () banked
  3119  0023D2  5164               	movf	MPU6050_ReadAccX@accxh& (0+255),w,b
  3120  0023D4  6E30               	movwf	(??_MPU6050_ReadAccX+1)& (0+255),c
  3121  0023D6  6A2F               	clrf	??_MPU6050_ReadAccX& (0+255),c
  3122  0023D8  0100               	movlb	0	; () banked
  3123  0023DA  5166               	movf	MPU6050_ReadAccX@accxl& (0+255),w,b
  3124  0023DC  102F               	iorwf	??_MPU6050_ReadAccX,w,c
  3125  0023DE  0100               	movlb	0	; () banked
  3126  0023E0  6F62               	movwf	MPU6050_ReadAccX@accx& (0+255),b
  3127  0023E2  0100               	movlb	0	; () banked
  3128  0023E4  5167               	movf	(MPU6050_ReadAccX@accxl+1)& (0+255),w,b
  3129  0023E6  1030               	iorwf	??_MPU6050_ReadAccX+1,w,c
  3130  0023E8  0100               	movlb	0	; () banked
  3131  0023EA  6F63               	movwf	(MPU6050_ReadAccX@accx+1)& (0+255),b
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;MPU6050.h: 295: return accx;
  3135  0023EC  C062  F02D         	movff	MPU6050_ReadAccX@accx,?_MPU6050_ReadAccX
  3136  0023F0  C063  F02E         	movff	MPU6050_ReadAccX@accx+1,?_MPU6050_ReadAccX+1
  3137  0023F4  0012               	return	
  3138  0023F6                     __end_of_MPU6050_ReadAccX:
  3139                           	opt stack 0
  3140                           tblptru	equ	0xFF8
  3141                           tblptrh	equ	0xFF7
  3142                           tblptrl	equ	0xFF6
  3143                           tablat	equ	0xFF5
  3144                           prodh	equ	0xFF4
  3145                           prodl	equ	0xFF3
  3146                           intcon	equ	0xFF2
  3147                           postinc0	equ	0xFEE
  3148                           wreg	equ	0xFE8
  3149                           postdec1	equ	0xFE5
  3150                           fsr1l	equ	0xFE1
  3151                           indf2	equ	0xFDF
  3152                           postinc2	equ	0xFDE
  3153                           postdec2	equ	0xFDD
  3154                           fsr2h	equ	0xFDA
  3155                           fsr2l	equ	0xFD9
  3156                           status	equ	0xFD8
  3157                           
  3158 ;; *************** function _ReadI2C *****************
  3159 ;; Defined at:
  3160 ;;		line 11 in file "../../../../../../../../../Desktop/IMU/i2c/i2c_read.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      unsigned char 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3174 ;;      Params:         0       0       0       0       0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3177 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:   10
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_MPU6050_ReadAccX
  3185 ;;		_MPU6050_ReadAccY
  3186 ;;		_MPU6050_ReadAccZ
  3187 ;;		_MPU6050_Read
  3188 ;;		_MPU6050_ReadGyroAccX
  3189 ;;		_MPU6050_ReadGyroY
  3190 ;;		_MPU6050_ReadGyroZ
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text11
  3195  0032EC                     __ptext11:
  3196                           	opt stack 0
  3197  0032EC                     _ReadI2C:
  3198                           	opt stack 19
  3199                           
  3200                           ;i2c_read.c: 13: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;incstack = 0
  3204  0032EC  50C6               	movf	4038,w,c	;volatile
  3205  0032EE  0B0F               	andlw	15
  3206  0032F0  0A08               	xorlw	8
  3207  0032F2  B4D8               	btfsc	status,2,c
  3208  0032F4  D004               	goto	l49
  3209  0032F6  50C6               	movf	4038,w,c	;volatile
  3210  0032F8  0B0F               	andlw	15
  3211  0032FA  0A0B               	xorlw	11
  3212  0032FC  B4D8               	btfsc	status,2,c
  3213  0032FE                     l49:
  3214                           
  3215                           ;i2c_read.c: 14: SSPCON2bits.RCEN = 1;
  3216  0032FE  86C5               	bsf	4037,3,c	;volatile
  3217  003300                     l50:
  3218  003300  A0C7               	btfss	4039,0,c	;volatile
  3219  003302  D7FE               	goto	l50
  3220                           
  3221                           ;i2c_read.c: 16: return ( SSPBUF );
  3222  003304  50C9               	movf	4041,w,c	;volatile
  3223  003306  0012               	return	
  3224  003308                     __end_of_ReadI2C:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           prodh	equ	0xFF4
  3231                           prodl	equ	0xFF3
  3232                           intcon	equ	0xFF2
  3233                           postinc0	equ	0xFEE
  3234                           wreg	equ	0xFE8
  3235                           postdec1	equ	0xFE5
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           postinc2	equ	0xFDE
  3239                           postdec2	equ	0xFDD
  3240                           fsr2h	equ	0xFDA
  3241                           fsr2l	equ	0xFD9
  3242                           status	equ	0xFD8
  3243                           
  3244 ;; *************** function _MPU6050_Init *****************
  3245 ;; Defined at:
  3246 ;;		line 148 in file "../../../../../../../../../Desktop/IMU/MPU6050.h"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;		None               void
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3260 ;;      Params:         0       0       0       0       0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3263 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3264 ;;Total ram usage:        0 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:   12
  3267 ;; This function calls:
  3268 ;;		_IdleI2C
  3269 ;;		_WriteI2C
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text12
  3276  002ACA                     __ptext12:
  3277                           	opt stack 0
  3278  002ACA                     _MPU6050_Init:
  3279                           	opt stack 18
  3280                           
  3281                           ;MPU6050.h: 151: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3282                           
  3283                           ;incstack = 0
  3284  002ACA  80C5               	bsf	4037,0,c	;volatile
  3285  002ACC                     l232:
  3286  002ACC  B0C5               	btfsc	4037,0,c	;volatile
  3287  002ACE  D7FE               	goto	l232
  3288                           
  3289                           ;MPU6050.h: 152: IdleI2C();
  3290  002AD0  EC9B  F019         	call	_IdleI2C	;wreg free
  3291                           
  3292                           ;MPU6050.h: 153: WriteI2C(0xD0);
  3293  002AD4  0ED0               	movlw	208
  3294  002AD6  EC47  F016         	call	_WriteI2C
  3295                           
  3296                           ;MPU6050.h: 154: IdleI2C();
  3297  002ADA  EC9B  F019         	call	_IdleI2C	;wreg free
  3298                           
  3299                           ;MPU6050.h: 155: WriteI2C(0x6B);
  3300  002ADE  0E6B               	movlw	107
  3301  002AE0  EC47  F016         	call	_WriteI2C
  3302                           
  3303                           ;MPU6050.h: 156: IdleI2C();
  3304  002AE4  EC9B  F019         	call	_IdleI2C	;wreg free
  3305                           
  3306                           ;MPU6050.h: 157: WriteI2C(2);
  3307  002AE8  0E02               	movlw	2
  3308  002AEA  EC47  F016         	call	_WriteI2C
  3309                           
  3310                           ;MPU6050.h: 158: IdleI2C();
  3311  002AEE  EC9B  F019         	call	_IdleI2C	;wreg free
  3312                           
  3313                           ;MPU6050.h: 159: WriteI2C(0);
  3314  002AF2  0E00               	movlw	0
  3315  002AF4  EC47  F016         	call	_WriteI2C
  3316                           
  3317                           ;MPU6050.h: 160: IdleI2C();
  3318  002AF8  EC9B  F019         	call	_IdleI2C	;wreg free
  3319                           
  3320                           ;MPU6050.h: 161: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3321  002AFC  84C5               	bsf	4037,2,c	;volatile
  3322  002AFE                     l235:
  3323  002AFE  B4C5               	btfsc	4037,2,c	;volatile
  3324  002B00  D7FE               	goto	l235
  3325                           
  3326                           ;MPU6050.h: 163: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3327  002B02  80C5               	bsf	4037,0,c	;volatile
  3328  002B04                     l238:
  3329  002B04  B0C5               	btfsc	4037,0,c	;volatile
  3330  002B06  D7FE               	goto	l238
  3331                           
  3332                           ;MPU6050.h: 164: IdleI2C();
  3333  002B08  EC9B  F019         	call	_IdleI2C	;wreg free
  3334                           
  3335                           ;MPU6050.h: 165: WriteI2C((0xD0));
  3336  002B0C  0ED0               	movlw	208
  3337  002B0E  EC47  F016         	call	_WriteI2C
  3338                           
  3339                           ;MPU6050.h: 166: IdleI2C();
  3340  002B12  EC9B  F019         	call	_IdleI2C	;wreg free
  3341                           
  3342                           ;MPU6050.h: 167: WriteI2C(0x1B);
  3343  002B16  0E1B               	movlw	27
  3344  002B18  EC47  F016         	call	_WriteI2C
  3345                           
  3346                           ;MPU6050.h: 168: IdleI2C();
  3347  002B1C  EC9B  F019         	call	_IdleI2C	;wreg free
  3348                           
  3349                           ;MPU6050.h: 169: WriteI2C(0);
  3350  002B20  0E00               	movlw	0
  3351  002B22  EC47  F016         	call	_WriteI2C
  3352                           
  3353                           ;MPU6050.h: 170: IdleI2C();
  3354  002B26  EC9B  F019         	call	_IdleI2C	;wreg free
  3355                           
  3356                           ;MPU6050.h: 171: WriteI2C(0);
  3357  002B2A  0E00               	movlw	0
  3358  002B2C  EC47  F016         	call	_WriteI2C
  3359                           
  3360                           ;MPU6050.h: 172: IdleI2C();
  3361  002B30  EC9B  F019         	call	_IdleI2C	;wreg free
  3362                           
  3363                           ;MPU6050.h: 173: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3364  002B34  84C5               	bsf	4037,2,c	;volatile
  3365  002B36                     l241:
  3366  002B36  A4C5               	btfss	4037,2,c	;volatile
  3367  002B38  0012               	return	
  3368  002B3A  D7FD               	goto	l241
  3369  002B3C                     __end_of_MPU6050_Init:
  3370                           	opt stack 0
  3371                           tblptru	equ	0xFF8
  3372                           tblptrh	equ	0xFF7
  3373                           tblptrl	equ	0xFF6
  3374                           tablat	equ	0xFF5
  3375                           prodh	equ	0xFF4
  3376                           prodl	equ	0xFF3
  3377                           intcon	equ	0xFF2
  3378                           postinc0	equ	0xFEE
  3379                           wreg	equ	0xFE8
  3380                           postdec1	equ	0xFE5
  3381                           fsr1l	equ	0xFE1
  3382                           indf2	equ	0xFDF
  3383                           postinc2	equ	0xFDE
  3384                           postdec2	equ	0xFDD
  3385                           fsr2h	equ	0xFDA
  3386                           fsr2l	equ	0xFD9
  3387                           status	equ	0xFD8
  3388                           
  3389 ;; *************** function _WriteI2C *****************
  3390 ;; Defined at:
  3391 ;;		line 12 in file "../../../../../../../../../Desktop/IMU/i2c/i2c_writ.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  data_out        1    wreg     unsigned char 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  data_out        1   43[COMRAM] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      char 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0
  3406 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3408 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3409 ;;Total ram usage:        1 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:   11
  3412 ;; This function calls:
  3413 ;;		_IdleI2C
  3414 ;; This function is called by:
  3415 ;;		_MPU6050_Init
  3416 ;;		_MPU6050_ReadAccX
  3417 ;;		_MPU6050_ReadAccY
  3418 ;;		_MPU6050_ReadAccZ
  3419 ;;		_MPU6050_Read
  3420 ;;		_MPU6050_ReadGyroAccX
  3421 ;;		_MPU6050_ReadGyroY
  3422 ;;		_MPU6050_ReadGyroZ
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text13
  3427  002C8E                     __ptext13:
  3428                           	opt stack 0
  3429  002C8E                     _WriteI2C:
  3430                           	opt stack 18
  3431                           
  3432                           ;incstack = 0
  3433                           ;WriteI2C@data_out stored from wreg
  3434  002C8E  6E2C               	movwf	WriteI2C@data_out,c
  3435                           
  3436                           ;i2c_writ.c: 14: SSPBUF = data_out;
  3437  002C90  C02C  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  3438                           
  3439                           ;i2c_writ.c: 15: if ( SSPCON1bits.WCOL )
  3440  002C94  AEC6               	btfss	4038,7,c	;volatile
  3441  002C96  D002               	goto	l5321
  3442                           
  3443                           ;i2c_writ.c: 16: return ( -1 );
  3444  002C98  0EFF               	movlw	255
  3445  002C9A  0012               	return	
  3446  002C9C                     l5321:
  3447                           
  3448                           ;i2c_writ.c: 17: else
  3449                           ;i2c_writ.c: 18: {
  3450                           ;i2c_writ.c: 19: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
  3451  002C9C  50C6               	movf	4038,w,c	;volatile
  3452  002C9E  0B0F               	andlw	15
  3453  002CA0  0A08               	xorlw	8
  3454  002CA2  B4D8               	btfsc	status,2,c
  3455  002CA4  D00F               	goto	l5339
  3456  002CA6  50C6               	movf	4038,w,c	;volatile
  3457  002CA8  0B0F               	andlw	15
  3458  002CAA  0A0B               	xorlw	11
  3459  002CAC  B4D8               	btfsc	status,2,c
  3460  002CAE  D00A               	goto	l5339
  3461                           
  3462                           ;i2c_writ.c: 20: {
  3463                           ;i2c_writ.c: 21: SSPCON1bits.CKP = 1;
  3464  002CB0  88C6               	bsf	4038,4,c	;volatile
  3465  002CB2                     l89:
  3466  002CB2  A69E               	btfss	3998,3,c	;volatile
  3467  002CB4  D7FE               	goto	l89
  3468                           
  3469                           ;i2c_writ.c: 24: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
  3470  002CB6  A4C7               	btfss	4039,2,c	;volatile
  3471  002CB8  B0C7               	btfsc	4039,0,c	;volatile
  3472  002CBA  D002               	goto	l5335
  3473                           
  3474                           ;i2c_writ.c: 25: {
  3475                           ;i2c_writ.c: 26: return ( -2 );
  3476  002CBC  0EFE               	movlw	254
  3477                           
  3478                           ;i2c_writ.c: 27: }
  3479  002CBE  0012               	return	
  3480  002CC0                     l5335:
  3481                           
  3482                           ;i2c_writ.c: 28: else
  3483                           ;i2c_writ.c: 29: {
  3484                           ;i2c_writ.c: 30: return ( 0 );
  3485  002CC0  0E00               	movlw	0
  3486                           
  3487                           ;i2c_writ.c: 31: }
  3488                           ;i2c_writ.c: 32: }
  3489  002CC2  0012               	return	
  3490  002CC4                     l5339:
  3491                           
  3492                           ;i2c_writ.c: 33: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
  3493  002CC4  50C6               	movf	4038,w,c	;volatile
  3494  002CC6  0B0F               	andlw	15
  3495  002CC8  0A08               	xorlw	8
  3496  002CCA  B4D8               	btfsc	status,2,c
  3497  002CCC  D005               	goto	l98
  3498  002CCE  50C6               	movf	4038,w,c	;volatile
  3499  002CD0  0B0F               	andlw	15
  3500  002CD2  0A0B               	xorlw	11
  3501  002CD4  A4D8               	btfss	status,2,c
  3502  002CD6  0012               	return	
  3503  002CD8                     l98:
  3504  002CD8  B0C7               	btfsc	4039,0,c	;volatile
  3505  002CDA  D7FE               	goto	l98
  3506                           
  3507                           ;i2c_writ.c: 36: IdleI2C();
  3508  002CDC  EC9B  F019         	call	_IdleI2C	;wreg free
  3509                           
  3510                           ;i2c_writ.c: 37: if ( SSPCON2bits.ACKSTAT )
  3511  002CE0  ACC5               	btfss	4037,6,c	;volatile
  3512  002CE2  D002               	goto	l5353
  3513                           
  3514                           ;i2c_writ.c: 38: return ( -2 );
  3515  002CE4  0EFE               	movlw	254
  3516  002CE6  0012               	return	
  3517  002CE8                     l5353:
  3518                           
  3519                           ;i2c_writ.c: 39: else return ( 0 );
  3520  002CE8  0E00               	movlw	0
  3521  002CEA  0012               	return	
  3522  002CEC                     __end_of_WriteI2C:
  3523                           	opt stack 0
  3524                           tblptru	equ	0xFF8
  3525                           tblptrh	equ	0xFF7
  3526                           tblptrl	equ	0xFF6
  3527                           tablat	equ	0xFF5
  3528                           prodh	equ	0xFF4
  3529                           prodl	equ	0xFF3
  3530                           intcon	equ	0xFF2
  3531                           postinc0	equ	0xFEE
  3532                           wreg	equ	0xFE8
  3533                           postdec1	equ	0xFE5
  3534                           fsr1l	equ	0xFE1
  3535                           indf2	equ	0xFDF
  3536                           postinc2	equ	0xFDE
  3537                           postdec2	equ	0xFDD
  3538                           fsr2h	equ	0xFDA
  3539                           fsr2l	equ	0xFD9
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function _IdleI2C *****************
  3543 ;; Defined at:
  3544 ;;		line 24 in file "../../../../../../../../../Desktop/IMU/i2c/i2c_idle.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;		None               void
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3560 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3561 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3562 ;;Total ram usage:        1 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:   10
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_WriteI2C
  3569 ;;		_MPU6050_Init
  3570 ;;		_MPU6050_ReadAccX
  3571 ;;		_MPU6050_ReadAccY
  3572 ;;		_MPU6050_ReadAccZ
  3573 ;;		_MPU6050_Read
  3574 ;;		_MPU6050_ReadGyroAccX
  3575 ;;		_MPU6050_ReadGyroY
  3576 ;;		_MPU6050_ReadGyroZ
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text14
  3581  003336                     __ptext14:
  3582                           	opt stack 0
  3583  003336                     _IdleI2C:
  3584                           	opt stack 18
  3585  003336                     l5121:
  3586  003336  CFC5 F02B          	movff	4037,??_IdleI2C	;volatile
  3587  00333A  0E1F               	movlw	31
  3588  00333C  162B               	andwf	??_IdleI2C,f,c
  3589  00333E  A4D8               	btfss	status,2,c
  3590  003340  D7FA               	goto	l5121
  3591  003342  A4C7               	btfss	4039,2,c	;volatile
  3592  003344  0012               	return	
  3593  003346  D7F7               	goto	l5121
  3594  003348                     __end_of_IdleI2C:
  3595                           	opt stack 0
  3596                           tblptru	equ	0xFF8
  3597                           tblptrh	equ	0xFF7
  3598                           tblptrl	equ	0xFF6
  3599                           tablat	equ	0xFF5
  3600                           prodh	equ	0xFF4
  3601                           prodl	equ	0xFF3
  3602                           intcon	equ	0xFF2
  3603                           postinc0	equ	0xFEE
  3604                           wreg	equ	0xFE8
  3605                           postdec1	equ	0xFE5
  3606                           fsr1l	equ	0xFE1
  3607                           indf2	equ	0xFDF
  3608                           postinc2	equ	0xFDE
  3609                           postdec2	equ	0xFDD
  3610                           fsr2h	equ	0xFDA
  3611                           fsr2l	equ	0xFD9
  3612                           status	equ	0xFD8
  3613                           
  3614 ;; *************** function _LCDstring *****************
  3615 ;; Defined at:
  3616 ;;		line 327 in file "../src/main.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  str             2   46[COMRAM] PTR unsigned char 
  3619 ;;		 -> az(4), ay(4), ax(4), 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  i               2   48[COMRAM] int 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;		None               void
  3624 ;; Registers used:
  3625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3631 ;;      Params:         2       0       0       0       0       0       0       0       0
  3632 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3634 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3635 ;;Total ram usage:        4 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:   12
  3638 ;; This function calls:
  3639 ;;		_LCDdata
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text15
  3646  003028                     __ptext15:
  3647                           	opt stack 0
  3648  003028                     _LCDstring:
  3649                           	opt stack 18
  3650                           
  3651                           ;main.c: 329: int i = 0;
  3652                           
  3653                           ;incstack = 0
  3654  003028  0E00               	movlw	0
  3655  00302A  6E32               	movwf	LCDstring@i+1,c
  3656  00302C  0E00               	movlw	0
  3657  00302E  6E31               	movwf	LCDstring@i,c
  3658                           
  3659                           ;main.c: 330: while(str[i] != '\0') {
  3660  003030  D00B               	goto	l5917
  3661  003032                     l5913:
  3662                           
  3663                           ;main.c: 331: LCDdata(str[i]);
  3664  003032  5031               	movf	LCDstring@i,w,c
  3665  003034  242F               	addwf	LCDstring@str,w,c
  3666  003036  6ED9               	movwf	fsr2l,c
  3667  003038  5032               	movf	LCDstring@i+1,w,c
  3668  00303A  2030               	addwfc	LCDstring@str+1,w,c
  3669  00303C  6EDA               	movwf	fsr2h,c
  3670  00303E  50DF               	movf	indf2,w,c
  3671  003040  ECFB  F018         	call	_LCDdata
  3672                           
  3673                           ;main.c: 332: i++;
  3674  003044  4A31               	infsnz	LCDstring@i,f,c
  3675  003046  2A32               	incf	LCDstring@i+1,f,c
  3676  003048                     l5917:
  3677  003048  5031               	movf	LCDstring@i,w,c
  3678  00304A  242F               	addwf	LCDstring@str,w,c
  3679  00304C  6ED9               	movwf	fsr2l,c
  3680  00304E  5032               	movf	LCDstring@i+1,w,c
  3681  003050  2030               	addwfc	LCDstring@str+1,w,c
  3682  003052  6EDA               	movwf	fsr2h,c
  3683  003054  50DF               	movf	indf2,w,c
  3684  003056  B4D8               	btfsc	status,2,c
  3685  003058  0012               	return	
  3686  00305A  D7EB               	goto	l5913
  3687  00305C                     __end_of_LCDstring:
  3688                           	opt stack 0
  3689                           tblptru	equ	0xFF8
  3690                           tblptrh	equ	0xFF7
  3691                           tblptrl	equ	0xFF6
  3692                           tablat	equ	0xFF5
  3693                           prodh	equ	0xFF4
  3694                           prodl	equ	0xFF3
  3695                           intcon	equ	0xFF2
  3696                           postinc0	equ	0xFEE
  3697                           wreg	equ	0xFE8
  3698                           postdec1	equ	0xFE5
  3699                           fsr1l	equ	0xFE1
  3700                           indf2	equ	0xFDF
  3701                           postinc2	equ	0xFDE
  3702                           postdec2	equ	0xFDD
  3703                           fsr2h	equ	0xFDA
  3704                           fsr2l	equ	0xFD9
  3705                           status	equ	0xFD8
  3706                           
  3707 ;; *************** function _LCDinit *****************
  3708 ;; Defined at:
  3709 ;;		line 261 in file "../src/main.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;		None               void
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3723 ;;      Params:         0       0       0       0       0       0       0       0       0
  3724 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3725 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3726 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3727 ;;Total ram usage:        1 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:   12
  3730 ;; This function calls:
  3731 ;;		_LCDcmd
  3732 ;;		_LCDnibble
  3733 ;; This function is called by:
  3734 ;;		_main
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text16
  3739  002B3C                     __ptext16:
  3740                           	opt stack 0
  3741  002B3C                     _LCDinit:
  3742                           	opt stack 18
  3743                           
  3744                           ;main.c: 262: TRISD = 0b00000000;
  3745                           
  3746                           ;incstack = 0
  3747  002B3C  0E00               	movlw	0
  3748  002B3E  6E95               	movwf	3989,c	;volatile
  3749                           
  3750                           ;main.c: 266: LATDbits.LATD6 = 0;
  3751  002B40  9C8C               	bcf	3980,6,c	;volatile
  3752                           
  3753                           ;main.c: 267: LATDbits.LATD7 = 0;
  3754  002B42  9E8C               	bcf	3980,7,c	;volatile
  3755                           
  3756                           ;main.c: 268: LATDbits.LATD5 = 1;
  3757  002B44  8A8C               	bsf	3980,5,c	;volatile
  3758                           
  3759                           ;main.c: 271: _delay(1);
  3760  002B46  F000               	nop	
  3761                           
  3762                           ;main.c: 274: _delay((unsigned long)((16)*(48000000/4000.0)));
  3763  002B48  0EFA               	movlw	250
  3764  002B4A  6E2E               	movwf	??_LCDinit& (0+255),c
  3765  002B4C  0E58               	movlw	88
  3766  002B4E                     u6057:
  3767  002B4E  2EE8               	decfsz	wreg,f,c
  3768  002B50  D7FE               	goto	u6057
  3769  002B52  2E2E               	decfsz	??_LCDinit& (0+255),f,c
  3770  002B54  D7FC               	goto	u6057
  3771  002B56  D000               	nop2	
  3772                           
  3773                           ;main.c: 275: LCDnibble(0x3);
  3774  002B58  0E03               	movlw	3
  3775  002B5A  ECBC  F018         	call	_LCDnibble
  3776                           
  3777                           ;main.c: 276: _delay((unsigned long)((5)*(48000000/4000.0)));
  3778  002B5E  0E4E               	movlw	78
  3779  002B60  6E2E               	movwf	??_LCDinit& (0+255),c
  3780  002B62  0EEB               	movlw	235
  3781  002B64                     u6067:
  3782  002B64  2EE8               	decfsz	wreg,f,c
  3783  002B66  D7FE               	goto	u6067
  3784  002B68  2E2E               	decfsz	??_LCDinit& (0+255),f,c
  3785  002B6A  D7FC               	goto	u6067
  3786  002B6C  F000               	nop	
  3787                           
  3788                           ;main.c: 277: LCDnibble(0x3);
  3789  002B6E  0E03               	movlw	3
  3790  002B70  ECBC  F018         	call	_LCDnibble
  3791                           
  3792                           ;main.c: 278: _delay((unsigned long)((1)*(48000000/4000.0)));
  3793  002B74  0E10               	movlw	16
  3794  002B76  6E2E               	movwf	??_LCDinit& (0+255),c
  3795  002B78  0E94               	movlw	148
  3796  002B7A                     u6077:
  3797  002B7A  2EE8               	decfsz	wreg,f,c
  3798  002B7C  D7FE               	goto	u6077
  3799  002B7E  2E2E               	decfsz	??_LCDinit& (0+255),f,c
  3800  002B80  D7FC               	goto	u6077
  3801  002B82  D000               	nop2	
  3802                           
  3803                           ;main.c: 280: LCDnibble(0x3);
  3804  002B84  0E03               	movlw	3
  3805  002B86  ECBC  F018         	call	_LCDnibble
  3806                           
  3807                           ;main.c: 281: _delay((unsigned long)((5)*(48000000/4000.0)));
  3808  002B8A  0E4E               	movlw	78
  3809  002B8C  6E2E               	movwf	??_LCDinit& (0+255),c
  3810  002B8E  0EEB               	movlw	235
  3811  002B90                     u6087:
  3812  002B90  2EE8               	decfsz	wreg,f,c
  3813  002B92  D7FE               	goto	u6087
  3814  002B94  2E2E               	decfsz	??_LCDinit& (0+255),f,c
  3815  002B96  D7FC               	goto	u6087
  3816  002B98  F000               	nop	
  3817                           
  3818                           ;main.c: 282: LCDnibble(0x2);
  3819  002B9A  0E02               	movlw	2
  3820  002B9C  ECBC  F018         	call	_LCDnibble
  3821                           
  3822                           ;main.c: 285: LCDcmd(0x2C);
  3823  002BA0  0E2C               	movlw	44
  3824  002BA2  EC90  F019         	call	_LCDcmd
  3825                           
  3826                           ;main.c: 286: LCDcmd(0x0F);
  3827  002BA6  0E0F               	movlw	15
  3828  002BA8  EC90  F019         	call	_LCDcmd
  3829  002BAC  0012               	return	
  3830  002BAE                     __end_of_LCDinit:
  3831                           	opt stack 0
  3832                           tblptru	equ	0xFF8
  3833                           tblptrh	equ	0xFF7
  3834                           tblptrl	equ	0xFF6
  3835                           tablat	equ	0xFF5
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           intcon	equ	0xFF2
  3839                           postinc0	equ	0xFEE
  3840                           wreg	equ	0xFE8
  3841                           postdec1	equ	0xFE5
  3842                           fsr1l	equ	0xFE1
  3843                           indf2	equ	0xFDF
  3844                           postinc2	equ	0xFDE
  3845                           postdec2	equ	0xFDD
  3846                           fsr2h	equ	0xFDA
  3847                           fsr2l	equ	0xFD9
  3848                           status	equ	0xFD8
  3849                           
  3850 ;; *************** function _LCDcmd *****************
  3851 ;; Defined at:
  3852 ;;		line 307 in file "../src/main.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  byte            1    wreg     unsigned char 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  byte            1   44[COMRAM] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;		None               void
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3866 ;;      Params:         0       0       0       0       0       0       0       0       0
  3867 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3869 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3870 ;;Total ram usage:        1 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:   11
  3873 ;; This function calls:
  3874 ;;		_LCDnibble
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;;		_LCDinit
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text17
  3882  003320                     __ptext17:
  3883                           	opt stack 0
  3884  003320                     _LCDcmd:
  3885                           	opt stack 18
  3886                           
  3887                           ;incstack = 0
  3888                           ;LCDcmd@byte stored from wreg
  3889  003320  6E2D               	movwf	LCDcmd@byte,c
  3890                           
  3891                           ;main.c: 309: LATDbits.LATD7 = 0;
  3892  003322  9E8C               	bcf	3980,7,c	;volatile
  3893                           
  3894                           ;main.c: 310: LCDnibble(byte >> 4);
  3895  003324  382D               	swapf	LCDcmd@byte,w,c
  3896  003326  0B0F               	andlw	15
  3897  003328  ECBC  F018         	call	_LCDnibble
  3898                           
  3899                           ;main.c: 311: LCDnibble(byte & 0xF);
  3900  00332C  502D               	movf	LCDcmd@byte,w,c
  3901  00332E  0B0F               	andlw	15
  3902  003330  ECBC  F018         	call	_LCDnibble
  3903  003334  0012               	return	
  3904  003336                     __end_of_LCDcmd:
  3905                           	opt stack 0
  3906                           tblptru	equ	0xFF8
  3907                           tblptrh	equ	0xFF7
  3908                           tblptrl	equ	0xFF6
  3909                           tablat	equ	0xFF5
  3910                           prodh	equ	0xFF4
  3911                           prodl	equ	0xFF3
  3912                           intcon	equ	0xFF2
  3913                           postinc0	equ	0xFEE
  3914                           wreg	equ	0xFE8
  3915                           postdec1	equ	0xFE5
  3916                           fsr1l	equ	0xFE1
  3917                           indf2	equ	0xFDF
  3918                           postinc2	equ	0xFDE
  3919                           postdec2	equ	0xFDD
  3920                           fsr2h	equ	0xFDA
  3921                           fsr2l	equ	0xFD9
  3922                           status	equ	0xFD8
  3923                           
  3924 ;; *************** function _LCDdouble *****************
  3925 ;; Defined at:
  3926 ;;		line 338 in file "../src/main.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  a               3   78[BANK0 ] unsigned char 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  i               2   94[BANK0 ] int 
  3931 ;;  digit           2   92[BANK0 ] int 
  3932 ;;  zflag           2   87[BANK0 ] int 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;		None               void
  3935 ;; Registers used:
  3936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3942 ;;      Params:         0       3       0       0       0       0       0       0       0
  3943 ;;      Locals:         0      15       0       0       0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3945 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3946 ;;Total ram usage:       18 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:   15
  3949 ;; This function calls:
  3950 ;;		_LCDdata
  3951 ;;		___awtoft
  3952 ;;		___ftadd
  3953 ;;		___ftdiv
  3954 ;;		___ftmul
  3955 ;;		___ftneg
  3956 ;;		___fttol
  3957 ;;		_pow
  3958 ;; This function is called by:
  3959 ;;		_main
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text18
  3964  000902                     __ptext18:
  3965                           	opt stack 0
  3966  000902                     _LCDdouble:
  3967                           	opt stack 15
  3968                           
  3969                           ;main.c: 340: int digit;
  3970                           ;main.c: 341: int i;
  3971                           ;main.c: 342: int zflag = 1;
  3972                           
  3973                           ;incstack = 0
  3974  000902  0E00               	movlw	0
  3975  000904  0100               	movlb	0	; () banked
  3976  000906  6FB8               	movwf	(LCDdouble@zflag+1)& (0+255),b
  3977  000908  0E01               	movlw	1
  3978  00090A  6FB7               	movwf	LCDdouble@zflag& (0+255),b
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;main.c: 343: if(a < 0){
  3982  00090C  0100               	movlb	0	; () banked
  3983  00090E  AFB0               	btfss	(LCDdouble@a+2)& (0+255),7,b
  3984  000910  D01A               	goto	l5925
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;main.c: 344: LCDdata('-');
  3988  000912  0E2D               	movlw	45
  3989  000914  ECFB  F018         	call	_LCDdata
  3990                           
  3991                           ;main.c: 345: a *= -1;
  3992  000918  C0AE  F063         	movff	LCDdouble@a,___ftmul@f1
  3993  00091C  C0AF  F064         	movff	LCDdouble@a+1,___ftmul@f1+1
  3994  000920  C0B0  F065         	movff	LCDdouble@a+2,___ftmul@f1+2
  3995  000924  0E00               	movlw	0
  3996  000926  0100               	movlb	0	; () banked
  3997  000928  6F66               	movwf	___ftmul@f2& (0+255),b
  3998  00092A  0E80               	movlw	128
  3999  00092C  0100               	movlb	0	; () banked
  4000  00092E  6F67               	movwf	(___ftmul@f2+1)& (0+255),b
  4001  000930  0EBF               	movlw	191
  4002  000932  0100               	movlb	0	; () banked
  4003  000934  6F68               	movwf	(___ftmul@f2+2)& (0+255),b
  4004  000936  EC37  F006         	call	___ftmul	;wreg free
  4005  00093A  C063  F0AE         	movff	?___ftmul,LCDdouble@a
  4006  00093E  C064  F0AF         	movff	?___ftmul+1,LCDdouble@a+1
  4007  000942  C065  F0B0         	movff	?___ftmul+2,LCDdouble@a+2
  4008  000946                     l5925:
  4009                           
  4010                           ;main.c: 346: }
  4011                           ;main.c: 347: for (i=10; i>=0; i--){
  4012  000946  0E00               	movlw	0
  4013  000948  0100               	movlb	0	; () banked
  4014  00094A  6FBF               	movwf	(LCDdouble@i+1)& (0+255),b
  4015  00094C  0E0A               	movlw	10
  4016  00094E  6FBE               	movwf	LCDdouble@i& (0+255),b
  4017  000950                     l5927:
  4018                           
  4019                           ; BSR set to: 0
  4020  000950  0100               	movlb	0	; () banked
  4021  000952  BFBF               	btfsc	(LCDdouble@i+1)& (0+255),7,b
  4022  000954  0012               	return	
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;main.c: 348: digit= (int)(a/pow (10,i));
  4026                           
  4027                           ; BSR set to: 0
  4028                           
  4029                           ; BSR set to: 0
  4030  000956  C0BE  F060         	movff	LCDdouble@i,___awtoft@c
  4031  00095A  C0BF  F061         	movff	LCDdouble@i+1,___awtoft@c+1
  4032  00095E  EC35  F017         	call	___awtoft	;wreg free
  4033  000962  C060  F0B9         	movff	?___awtoft,_LCDdouble$4050
  4034  000966  C061  F0BA         	movff	?___awtoft+1,_LCDdouble$4050+1
  4035  00096A  C062  F0BB         	movff	?___awtoft+2,_LCDdouble$4050+2
  4036                           
  4037                           ;main.c: 348: digit= (int)(a/pow (10,i));
  4038  00096E  C0B9  F0A0         	movff	_LCDdouble$4050,pow@y
  4039  000972  C0BA  F0A1         	movff	_LCDdouble$4050+1,pow@y+1
  4040  000976  C0BB  F0A2         	movff	_LCDdouble$4050+2,pow@y+2
  4041  00097A  0E00               	movlw	0
  4042  00097C  0100               	movlb	0	; () banked
  4043  00097E  6F9D               	movwf	pow@x& (0+255),b
  4044  000980  0E20               	movlw	32
  4045  000982  0100               	movlb	0	; () banked
  4046  000984  6F9E               	movwf	(pow@x+1)& (0+255),b
  4047  000986  0E41               	movlw	65
  4048  000988  0100               	movlb	0	; () banked
  4049  00098A  6F9F               	movwf	(pow@x+2)& (0+255),b
  4050  00098C  EC61  F005         	call	_pow	;wreg free
  4051  000990  C09D  F0B1         	movff	?_pow,_LCDdouble$4051
  4052  000994  C09E  F0B2         	movff	?_pow+1,_LCDdouble$4051+1
  4053  000998  C09F  F0B3         	movff	?_pow+2,_LCDdouble$4051+2
  4054                           
  4055                           ;main.c: 348: digit= (int)(a/pow (10,i));
  4056  00099C  C0B1  F066         	movff	_LCDdouble$4051,___ftdiv@f2
  4057  0009A0  C0B2  F067         	movff	_LCDdouble$4051+1,___ftdiv@f2+1
  4058  0009A4  C0B3  F068         	movff	_LCDdouble$4051+2,___ftdiv@f2+2
  4059  0009A8  C0AE  F063         	movff	LCDdouble@a,___ftdiv@f1
  4060  0009AC  C0AF  F064         	movff	LCDdouble@a+1,___ftdiv@f1+1
  4061  0009B0  C0B0  F065         	movff	LCDdouble@a+2,___ftdiv@f1+2
  4062  0009B4  EC8C  F007         	call	___ftdiv	;wreg free
  4063  0009B8  C063  F072         	movff	?___ftdiv,___fttol@f1
  4064  0009BC  C064  F073         	movff	?___ftdiv+1,___fttol@f1+1
  4065  0009C0  C065  F074         	movff	?___ftdiv+2,___fttol@f1+2
  4066  0009C4  ECD4  F008         	call	___fttol	;wreg free
  4067  0009C8  C072  F0BC         	movff	?___fttol,LCDdouble@digit
  4068  0009CC  C073  F0BD         	movff	?___fttol+1,LCDdouble@digit+1
  4069                           
  4070                           ;main.c: 349: if (digit != 0){
  4071  0009D0  0100               	movlb	0	; () banked
  4072  0009D2  51BC               	movf	LCDdouble@digit& (0+255),w,b
  4073  0009D4  0100               	movlb	0	; () banked
  4074  0009D6  11BD               	iorwf	(LCDdouble@digit+1)& (0+255),w,b
  4075  0009D8  B4D8               	btfsc	status,2,c
  4076  0009DA  D005               	goto	l5941
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;main.c: 350: zflag = 0;
  4080  0009DC  0E00               	movlw	0
  4081  0009DE  0100               	movlb	0	; () banked
  4082  0009E0  6FB8               	movwf	(LCDdouble@zflag+1)& (0+255),b
  4083  0009E2  0E00               	movlw	0
  4084  0009E4  6FB7               	movwf	LCDdouble@zflag& (0+255),b
  4085  0009E6                     l5941:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;main.c: 351: }
  4089                           ;main.c: 352: if(i == 0){
  4090  0009E6  0100               	movlb	0	; () banked
  4091  0009E8  51BE               	movf	LCDdouble@i& (0+255),w,b
  4092  0009EA  0100               	movlb	0	; () banked
  4093  0009EC  11BF               	iorwf	(LCDdouble@i+1)& (0+255),w,b
  4094  0009EE  A4D8               	btfss	status,2,c
  4095  0009F0  D005               	goto	l5945
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;main.c: 353: zflag = 0;
  4099  0009F2  0E00               	movlw	0
  4100  0009F4  0100               	movlb	0	; () banked
  4101  0009F6  6FB8               	movwf	(LCDdouble@zflag+1)& (0+255),b
  4102  0009F8  0E00               	movlw	0
  4103  0009FA  6FB7               	movwf	LCDdouble@zflag& (0+255),b
  4104  0009FC                     l5945:
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;main.c: 354: }
  4108                           ;main.c: 356: a= a - digit * pow(10,i);
  4109  0009FC  C0BE  F060         	movff	LCDdouble@i,___awtoft@c
  4110  000A00  C0BF  F061         	movff	LCDdouble@i+1,___awtoft@c+1
  4111  000A04  EC35  F017         	call	___awtoft	;wreg free
  4112  000A08  C060  F0B9         	movff	?___awtoft,_LCDdouble$4050
  4113  000A0C  C061  F0BA         	movff	?___awtoft+1,_LCDdouble$4050+1
  4114  000A10  C062  F0BB         	movff	?___awtoft+2,_LCDdouble$4050+2
  4115                           
  4116                           ;main.c: 354: }
  4117                           ;main.c: 356: a= a - digit * pow(10,i);
  4118  000A14  C0B9  F0A0         	movff	_LCDdouble$4050,pow@y
  4119  000A18  C0BA  F0A1         	movff	_LCDdouble$4050+1,pow@y+1
  4120  000A1C  C0BB  F0A2         	movff	_LCDdouble$4050+2,pow@y+2
  4121  000A20  0E00               	movlw	0
  4122  000A22  0100               	movlb	0	; () banked
  4123  000A24  6F9D               	movwf	pow@x& (0+255),b
  4124  000A26  0E20               	movlw	32
  4125  000A28  0100               	movlb	0	; () banked
  4126  000A2A  6F9E               	movwf	(pow@x+1)& (0+255),b
  4127  000A2C  0E41               	movlw	65
  4128  000A2E  0100               	movlb	0	; () banked
  4129  000A30  6F9F               	movwf	(pow@x+2)& (0+255),b
  4130  000A32  EC61  F005         	call	_pow	;wreg free
  4131  000A36  C09D  F0B4         	movff	?_pow,_LCDdouble$4052
  4132  000A3A  C09E  F0B5         	movff	?_pow+1,_LCDdouble$4052+1
  4133  000A3E  C09F  F0B6         	movff	?_pow+2,_LCDdouble$4052+2
  4134                           
  4135                           ;main.c: 354: }
  4136                           ;main.c: 356: a= a - digit * pow(10,i);
  4137  000A42  C0B4  F066         	movff	_LCDdouble$4052,___ftmul@f2
  4138  000A46  C0B5  F067         	movff	_LCDdouble$4052+1,___ftmul@f2+1
  4139  000A4A  C0B6  F068         	movff	_LCDdouble$4052+2,___ftmul@f2+2
  4140  000A4E  C0BC  F060         	movff	LCDdouble@digit,___awtoft@c
  4141  000A52  C0BD  F061         	movff	LCDdouble@digit+1,___awtoft@c+1
  4142  000A56  EC35  F017         	call	___awtoft	;wreg free
  4143  000A5A  C060  F063         	movff	?___awtoft,___ftmul@f1
  4144  000A5E  C061  F064         	movff	?___awtoft+1,___ftmul@f1+1
  4145  000A62  C062  F065         	movff	?___awtoft+2,___ftmul@f1+2
  4146  000A66  EC37  F006         	call	___ftmul	;wreg free
  4147  000A6A  C063  F072         	movff	?___ftmul,___ftneg@f1
  4148  000A6E  C064  F073         	movff	?___ftmul+1,___ftneg@f1+1
  4149  000A72  C065  F074         	movff	?___ftmul+2,___ftneg@f1+2
  4150  000A76  EC60  F018         	call	___ftneg	;wreg free
  4151  000A7A  C072  F075         	movff	?___ftneg,___ftadd@f1
  4152  000A7E  C073  F076         	movff	?___ftneg+1,___ftadd@f1+1
  4153  000A82  C074  F077         	movff	?___ftneg+2,___ftadd@f1+2
  4154  000A86  C0AE  F078         	movff	LCDdouble@a,___ftadd@f2
  4155  000A8A  C0AF  F079         	movff	LCDdouble@a+1,___ftadd@f2+1
  4156  000A8E  C0B0  F07A         	movff	LCDdouble@a+2,___ftadd@f2+2
  4157  000A92  EC4B  F001         	call	___ftadd	;wreg free
  4158  000A96  C075  F0AE         	movff	?___ftadd,LCDdouble@a
  4159  000A9A  C076  F0AF         	movff	?___ftadd+1,LCDdouble@a+1
  4160  000A9E  C077  F0B0         	movff	?___ftadd+2,LCDdouble@a+2
  4161                           
  4162                           ;main.c: 357: if(!zflag){
  4163  000AA2  0100               	movlb	0	; () banked
  4164  000AA4  51B7               	movf	LCDdouble@zflag& (0+255),w,b
  4165  000AA6  0100               	movlb	0	; () banked
  4166  000AA8  11B8               	iorwf	(LCDdouble@zflag+1)& (0+255),w,b
  4167  000AAA  A4D8               	btfss	status,2,c
  4168  000AAC  D005               	goto	l5955
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;main.c: 358: LCDdata((char)digit + 0x30);
  4172  000AAE  0100               	movlb	0	; () banked
  4173  000AB0  51BC               	movf	LCDdouble@digit& (0+255),w,b
  4174  000AB2  0F30               	addlw	48
  4175  000AB4  ECFB  F018         	call	_LCDdata
  4176  000AB8                     l5955:
  4177  000AB8  0100               	movlb	0	; () banked
  4178  000ABA  07BE               	decf	LCDdouble@i& (0+255),f,b
  4179  000ABC  A0D8               	btfss	status,0,c
  4180  000ABE  07BF               	decf	(LCDdouble@i+1)& (0+255),f,b
  4181  000AC0  D747               	goto	l5927
  4182  000AC2                     __end_of_LCDdouble:
  4183                           	opt stack 0
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           intcon	equ	0xFF2
  4191                           postinc0	equ	0xFEE
  4192                           wreg	equ	0xFE8
  4193                           postdec1	equ	0xFE5
  4194                           fsr1l	equ	0xFE1
  4195                           indf2	equ	0xFDF
  4196                           postinc2	equ	0xFDE
  4197                           postdec2	equ	0xFDD
  4198                           fsr2h	equ	0xFDA
  4199                           fsr2l	equ	0xFD9
  4200                           status	equ	0xFD8
  4201                           
  4202 ;; *************** function _pow *****************
  4203 ;; Defined at:
  4204 ;;		line 5 in file "/Applications/microchip/xc8/v1.35/sources/common/pow.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  x               3   61[BANK0 ] int 
  4207 ;;  y               3   64[BANK0 ] int 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  yi              4   74[BANK0 ] unsigned long 
  4210 ;;  sign            1   73[BANK0 ] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  3   61[BANK0 ] unsigned char 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4220 ;;      Params:         0       6       0       0       0       0       0       0       0
  4221 ;;      Locals:         0      11       0       0       0       0       0       0       0
  4222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4223 ;;      Totals:         0      17       0       0       0       0       0       0       0
  4224 ;;Total ram usage:       17 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:   14
  4227 ;; This function calls:
  4228 ;;		___ftge
  4229 ;;		___ftmul
  4230 ;;		___ftneg
  4231 ;;		___fttol
  4232 ;;		___lltoft
  4233 ;;		_exp
  4234 ;;		_log
  4235 ;; This function is called by:
  4236 ;;		_LCDdouble
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text19
  4241  000AC2                     __ptext19:
  4242                           	opt stack 0
  4243  000AC2                     _pow:
  4244                           	opt stack 15
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;incstack = 0
  4248  000AC2  0E00               	movlw	0
  4249  000AC4  0100               	movlb	0	; () banked
  4250  000AC6  6FA9               	movwf	pow@sign& (0+255),b
  4251                           
  4252                           ; BSR set to: 0
  4253  000AC8  0100               	movlb	0	; () banked
  4254  000ACA  519D               	movf	pow@x& (0+255),w,b
  4255  000ACC  0100               	movlb	0	; () banked
  4256  000ACE  119E               	iorwf	(pow@x+1)& (0+255),w,b
  4257  000AD0  0100               	movlb	0	; () banked
  4258  000AD2  119F               	iorwf	(pow@x+2)& (0+255),w,b
  4259  000AD4  A4D8               	btfss	status,2,c
  4260  000AD6  D01F               	goto	l5409
  4261                           
  4262                           ; BSR set to: 0
  4263  000AD8  0E00               	movlw	0
  4264  000ADA  6E2B               	movwf	___ftge@ff1,c
  4265  000ADC  0E00               	movlw	0
  4266  000ADE  6E2C               	movwf	___ftge@ff1+1,c
  4267  000AE0  0E00               	movlw	0
  4268  000AE2  6E2D               	movwf	___ftge@ff1+2,c
  4269  000AE4  C0A0  F02E         	movff	pow@y,___ftge@ff2
  4270  000AE8  C0A1  F02F         	movff	pow@y+1,___ftge@ff2+1
  4271  000AEC  C0A2  F030         	movff	pow@y+2,___ftge@ff2+2
  4272  000AF0  ECD7  F013         	call	___ftge	;wreg free
  4273  000AF4  A0D8               	btfss	status,0,c
  4274  000AF6  D005               	goto	l1501
  4275  000AF8  0E00               	movlw	0
  4276  000AFA  0100               	movlb	0	; () banked
  4277  000AFC  6FEA               	movwf	(_errno+1)& (0+255),b
  4278  000AFE  0E21               	movlw	33
  4279  000B00  6FE9               	movwf	_errno& (0+255),b
  4280  000B02                     l1501:
  4281  000B02  0E00               	movlw	0
  4282  000B04  0100               	movlb	0	; () banked
  4283  000B06  6F9D               	movwf	?_pow& (0+255),b
  4284  000B08  0E00               	movlw	0
  4285  000B0A  0100               	movlb	0	; () banked
  4286  000B0C  6F9E               	movwf	(?_pow+1)& (0+255),b
  4287  000B0E  0E00               	movlw	0
  4288  000B10  0100               	movlb	0	; () banked
  4289  000B12  6F9F               	movwf	(?_pow+2)& (0+255),b
  4290                           
  4291                           ; BSR set to: 0
  4292  000B14  0012               	return	
  4293  000B16                     l5409:
  4294                           
  4295                           ; BSR set to: 0
  4296  000B16  0100               	movlb	0	; () banked
  4297  000B18  51A0               	movf	pow@y& (0+255),w,b
  4298  000B1A  0100               	movlb	0	; () banked
  4299  000B1C  11A1               	iorwf	(pow@y+1)& (0+255),w,b
  4300  000B1E  0100               	movlb	0	; () banked
  4301  000B20  11A2               	iorwf	(pow@y+2)& (0+255),w,b
  4302  000B22  A4D8               	btfss	status,2,c
  4303  000B24  D00A               	goto	l5415
  4304                           
  4305                           ; BSR set to: 0
  4306  000B26  0E00               	movlw	0
  4307  000B28  0100               	movlb	0	; () banked
  4308  000B2A  6F9D               	movwf	?_pow& (0+255),b
  4309  000B2C  0E80               	movlw	128
  4310  000B2E  0100               	movlb	0	; () banked
  4311  000B30  6F9E               	movwf	(?_pow+1)& (0+255),b
  4312  000B32  0E3F               	movlw	63
  4313  000B34  0100               	movlb	0	; () banked
  4314  000B36  6F9F               	movwf	(?_pow+2)& (0+255),b
  4315                           
  4316                           ; BSR set to: 0
  4317  000B38  0012               	return	
  4318  000B3A                     l5415:
  4319                           
  4320                           ; BSR set to: 0
  4321  000B3A  0100               	movlb	0	; () banked
  4322  000B3C  AF9F               	btfss	(pow@x+2)& (0+255),7,b
  4323  000B3E  D04C               	goto	l5427
  4324                           
  4325                           ; BSR set to: 0
  4326  000B40  C0A0  F072         	movff	pow@y,___fttol@f1
  4327  000B44  C0A1  F073         	movff	pow@y+1,___fttol@f1+1
  4328  000B48  C0A2  F074         	movff	pow@y+2,___fttol@f1+2
  4329  000B4C  ECD4  F008         	call	___fttol	;wreg free
  4330  000B50  C072  F0AA         	movff	?___fttol,pow@yi
  4331  000B54  C073  F0AB         	movff	?___fttol+1,pow@yi+1
  4332  000B58  C074  F0AC         	movff	?___fttol+2,pow@yi+2
  4333  000B5C  C075  F0AD         	movff	?___fttol+3,pow@yi+3
  4334  000B60  C0AA  F060         	movff	pow@yi,___lltoft@c
  4335  000B64  C0AB  F061         	movff	pow@yi+1,___lltoft@c+1
  4336  000B68  C0AC  F062         	movff	pow@yi+2,___lltoft@c+2
  4337  000B6C  C0AD  F063         	movff	pow@yi+3,___lltoft@c+3
  4338  000B70  EC2A  F015         	call	___lltoft	;wreg free
  4339  000B74  0100               	movlb	0	; () banked
  4340  000B76  51A0               	movf	pow@y& (0+255),w,b
  4341  000B78  0100               	movlb	0	; () banked
  4342  000B7A  1960               	xorwf	?___lltoft& (0+255),w,b
  4343  000B7C  E10B               	bnz	u5070
  4344  000B7E  0100               	movlb	0	; () banked
  4345  000B80  51A1               	movf	(pow@y+1)& (0+255),w,b
  4346  000B82  0100               	movlb	0	; () banked
  4347  000B84  1961               	xorwf	(?___lltoft+1)& (0+255),w,b
  4348  000B86  E106               	bnz	u5070
  4349  000B88  0100               	movlb	0	; () banked
  4350  000B8A  51A2               	movf	(pow@y+2)& (0+255),w,b
  4351  000B8C  0100               	movlb	0	; () banked
  4352  000B8E  1962               	xorwf	(?___lltoft+2)& (0+255),w,b
  4353  000B90  B4D8               	btfsc	status,2,c
  4354  000B92  D00F               	goto	l5423
  4355  000B94                     u5070:
  4356                           
  4357                           ; BSR set to: 0
  4358  000B94  0E00               	movlw	0
  4359  000B96  0100               	movlb	0	; () banked
  4360  000B98  6FEA               	movwf	(_errno+1)& (0+255),b
  4361  000B9A  0E21               	movlw	33
  4362  000B9C  6FE9               	movwf	_errno& (0+255),b
  4363  000B9E  0E00               	movlw	0
  4364  000BA0  0100               	movlb	0	; () banked
  4365  000BA2  6F9D               	movwf	?_pow& (0+255),b
  4366  000BA4  0E00               	movlw	0
  4367  000BA6  0100               	movlb	0	; () banked
  4368  000BA8  6F9E               	movwf	(?_pow+1)& (0+255),b
  4369  000BAA  0E00               	movlw	0
  4370  000BAC  0100               	movlb	0	; () banked
  4371  000BAE  6F9F               	movwf	(?_pow+2)& (0+255),b
  4372                           
  4373                           ; BSR set to: 0
  4374  000BB0  0012               	return	
  4375  000BB2                     l5423:
  4376                           
  4377                           ; BSR set to: 0
  4378  000BB2  0100               	movlb	0	; () banked
  4379  000BB4  51AA               	movf	pow@yi& (0+255),w,b
  4380  000BB6  0B01               	andlw	1
  4381  000BB8  0100               	movlb	0	; () banked
  4382  000BBA  6FA9               	movwf	pow@sign& (0+255),b
  4383                           
  4384                           ; BSR set to: 0
  4385  000BBC  C09D  F072         	movff	pow@x,___ftneg@f1
  4386  000BC0  C09E  F073         	movff	pow@x+1,___ftneg@f1+1
  4387  000BC4  C09F  F074         	movff	pow@x+2,___ftneg@f1+2
  4388  000BC8  EC60  F018         	call	___ftneg	;wreg free
  4389  000BCC  C072  F09D         	movff	?___ftneg,pow@x
  4390  000BD0  C073  F09E         	movff	?___ftneg+1,pow@x+1
  4391  000BD4  C074  F09F         	movff	?___ftneg+2,pow@x+2
  4392  000BD8                     l5427:
  4393  000BD8  C09D  F08D         	movff	pow@x,log@x
  4394  000BDC  C09E  F08E         	movff	pow@x+1,log@x+1
  4395  000BE0  C09F  F08F         	movff	pow@x+2,log@x+2
  4396  000BE4  ECE6  F006         	call	_log	;wreg free
  4397  000BE8  C08D  F0A3         	movff	?_log,_pow$4053
  4398  000BEC  C08E  F0A4         	movff	?_log+1,_pow$4053+1
  4399  000BF0  C08F  F0A5         	movff	?_log+2,_pow$4053+2
  4400  000BF4  C0A3  F063         	movff	_pow$4053,___ftmul@f1
  4401  000BF8  C0A4  F064         	movff	_pow$4053+1,___ftmul@f1+1
  4402  000BFC  C0A5  F065         	movff	_pow$4053+2,___ftmul@f1+2
  4403  000C00  C0A0  F066         	movff	pow@y,___ftmul@f2
  4404  000C04  C0A1  F067         	movff	pow@y+1,___ftmul@f2+1
  4405  000C08  C0A2  F068         	movff	pow@y+2,___ftmul@f2+2
  4406  000C0C  EC37  F006         	call	___ftmul	;wreg free
  4407  000C10  C063  F0A6         	movff	?___ftmul,_pow$4054
  4408  000C14  C064  F0A7         	movff	?___ftmul+1,_pow$4054+1
  4409  000C18  C065  F0A8         	movff	?___ftmul+2,_pow$4054+2
  4410  000C1C  C0A6  F094         	movff	_pow$4054,exp@x
  4411  000C20  C0A7  F095         	movff	_pow$4054+1,exp@x+1
  4412  000C24  C0A8  F096         	movff	_pow$4054+2,exp@x+2
  4413  000C28  EC7F  F002         	call	_exp	;wreg free
  4414  000C2C  C094  F09D         	movff	?_exp,pow@x
  4415  000C30  C095  F09E         	movff	?_exp+1,pow@x+1
  4416  000C34  C096  F09F         	movff	?_exp+2,pow@x+2
  4417  000C38  0100               	movlb	0	; () banked
  4418  000C3A  51A9               	movf	pow@sign& (0+255),w,b
  4419  000C3C  0100               	movlb	0	; () banked
  4420  000C3E  B4D8               	btfsc	status,2,c
  4421  000C40  D00F               	goto	l1506
  4422                           
  4423                           ; BSR set to: 0
  4424  000C42  C09D  F072         	movff	pow@x,___ftneg@f1
  4425  000C46  C09E  F073         	movff	pow@x+1,___ftneg@f1+1
  4426  000C4A  C09F  F074         	movff	pow@x+2,___ftneg@f1+2
  4427  000C4E  EC60  F018         	call	___ftneg	;wreg free
  4428  000C52  C072  F09D         	movff	?___ftneg,?_pow
  4429  000C56  C073  F09E         	movff	?___ftneg+1,?_pow+1
  4430  000C5A  C074  F09F         	movff	?___ftneg+2,?_pow+2
  4431  000C5E  0012               	return	
  4432  000C60                     l1506:
  4433                           
  4434                           ; BSR set to: 0
  4435  000C60  C09D  F09D         	movff	pow@x,?_pow
  4436  000C64  C09E  F09E         	movff	pow@x+1,?_pow+1
  4437  000C68  C09F  F09F         	movff	pow@x+2,?_pow+2
  4438  000C6C  0012               	return		;funcret
  4439  000C6E                     __end_of_pow:
  4440                           	opt stack 0
  4441                           tblptru	equ	0xFF8
  4442                           tblptrh	equ	0xFF7
  4443                           tblptrl	equ	0xFF6
  4444                           tablat	equ	0xFF5
  4445                           prodh	equ	0xFF4
  4446                           prodl	equ	0xFF3
  4447                           intcon	equ	0xFF2
  4448                           postinc0	equ	0xFEE
  4449                           wreg	equ	0xFE8
  4450                           postdec1	equ	0xFE5
  4451                           fsr1l	equ	0xFE1
  4452                           indf2	equ	0xFDF
  4453                           postinc2	equ	0xFDE
  4454                           postdec2	equ	0xFDD
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           
  4459 ;; *************** function _log *****************
  4460 ;; Defined at:
  4461 ;;		line 5 in file "/Applications/microchip/xc8/v1.35/sources/common/log.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  x               3   45[BANK0 ] unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  exponent        2   48[BANK0 ] int 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  3   45[BANK0 ] int 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4475 ;;      Params:         0       3       0       0       0       0       0       0       0
  4476 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4478 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4479 ;;Total ram usage:        5 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   13
  4482 ;; This function calls:
  4483 ;;		___awtoft
  4484 ;;		___ftadd
  4485 ;;		___ftmul
  4486 ;;		_eval_poly
  4487 ;;		_frexp
  4488 ;; This function is called by:
  4489 ;;		_pow
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text20
  4494  000DCC                     __ptext20:
  4495                           	opt stack 0
  4496  000DCC                     _log:
  4497                           	opt stack 15
  4498                           
  4499                           ;incstack = 0
  4500  000DCC  0100               	movlb	0	; () banked
  4501  000DCE  AF8F               	btfss	(log@x+2)& (0+255),7,b
  4502  000DD0  D00F               	goto	l5243
  4503                           
  4504                           ; BSR set to: 0
  4505  000DD2  0E00               	movlw	0
  4506  000DD4  0100               	movlb	0	; () banked
  4507  000DD6  6FEA               	movwf	(_errno+1)& (0+255),b
  4508  000DD8  0E21               	movlw	33
  4509  000DDA  6FE9               	movwf	_errno& (0+255),b
  4510  000DDC  0E00               	movlw	0
  4511  000DDE  0100               	movlb	0	; () banked
  4512  000DE0  6F8D               	movwf	?_log& (0+255),b
  4513  000DE2  0E00               	movlw	0
  4514  000DE4  0100               	movlb	0	; () banked
  4515  000DE6  6F8E               	movwf	(?_log+1)& (0+255),b
  4516  000DE8  0E00               	movlw	0
  4517  000DEA  0100               	movlb	0	; () banked
  4518  000DEC  6F8F               	movwf	(?_log+2)& (0+255),b
  4519                           
  4520                           ; BSR set to: 0
  4521  000DEE  0012               	return	
  4522  000DF0                     l5243:
  4523                           
  4524                           ; BSR set to: 0
  4525  000DF0  0100               	movlb	0	; () banked
  4526  000DF2  518D               	movf	log@x& (0+255),w,b
  4527  000DF4  0100               	movlb	0	; () banked
  4528  000DF6  118E               	iorwf	(log@x+1)& (0+255),w,b
  4529  000DF8  0100               	movlb	0	; () banked
  4530  000DFA  118F               	iorwf	(log@x+2)& (0+255),w,b
  4531  000DFC  A4D8               	btfss	status,2,c
  4532  000DFE  D00F               	goto	l5249
  4533                           
  4534                           ; BSR set to: 0
  4535  000E00  0E00               	movlw	0
  4536  000E02  0100               	movlb	0	; () banked
  4537  000E04  6FEA               	movwf	(_errno+1)& (0+255),b
  4538  000E06  0E22               	movlw	34
  4539  000E08  6FE9               	movwf	_errno& (0+255),b
  4540  000E0A  0E00               	movlw	0
  4541  000E0C  0100               	movlb	0	; () banked
  4542  000E0E  6F8D               	movwf	?_log& (0+255),b
  4543  000E10  0E00               	movlw	0
  4544  000E12  0100               	movlb	0	; () banked
  4545  000E14  6F8E               	movwf	(?_log+1)& (0+255),b
  4546  000E16  0E00               	movlw	0
  4547  000E18  0100               	movlb	0	; () banked
  4548  000E1A  6F8F               	movwf	(?_log+2)& (0+255),b
  4549                           
  4550                           ; BSR set to: 0
  4551  000E1C  0012               	return	
  4552  000E1E                     l5249:
  4553                           
  4554                           ; BSR set to: 0
  4555  000E1E  0E00               	movlw	0
  4556  000E20  0100               	movlb	0	; () banked
  4557  000E22  6F66               	movwf	___ftmul@f2& (0+255),b
  4558  000E24  0E00               	movlw	0
  4559  000E26  0100               	movlb	0	; () banked
  4560  000E28  6F67               	movwf	(___ftmul@f2+1)& (0+255),b
  4561  000E2A  0E40               	movlw	64
  4562  000E2C  0100               	movlb	0	; () banked
  4563  000E2E  6F68               	movwf	(___ftmul@f2+2)& (0+255),b
  4564  000E30  0E90               	movlw	low log@exponent
  4565  000E32  6E2E               	movwf	frexp@eptr,c
  4566  000E34  0E00               	movlw	high log@exponent
  4567  000E36  6E2F               	movwf	frexp@eptr+1,c
  4568  000E38  C08D  F02B         	movff	log@x,frexp@value
  4569  000E3C  C08E  F02C         	movff	log@x+1,frexp@value+1
  4570  000E40  C08F  F02D         	movff	log@x+2,frexp@value+2
  4571  000E44  EC8F  F013         	call	_frexp	;wreg free
  4572  000E48  C02B  F063         	movff	?_frexp,___ftmul@f1
  4573  000E4C  C02C  F064         	movff	?_frexp+1,___ftmul@f1+1
  4574  000E50  C02D  F065         	movff	?_frexp+2,___ftmul@f1+2
  4575  000E54  EC37  F006         	call	___ftmul	;wreg free
  4576  000E58  C063  F075         	movff	?___ftmul,___ftadd@f1
  4577  000E5C  C064  F076         	movff	?___ftmul+1,___ftadd@f1+1
  4578  000E60  C065  F077         	movff	?___ftmul+2,___ftadd@f1+2
  4579  000E64  0E00               	movlw	0
  4580  000E66  0100               	movlb	0	; () banked
  4581  000E68  6F78               	movwf	___ftadd@f2& (0+255),b
  4582  000E6A  0E80               	movlw	128
  4583  000E6C  0100               	movlb	0	; () banked
  4584  000E6E  6F79               	movwf	(___ftadd@f2+1)& (0+255),b
  4585  000E70  0EBF               	movlw	191
  4586  000E72  0100               	movlb	0	; () banked
  4587  000E74  6F7A               	movwf	(___ftadd@f2+2)& (0+255),b
  4588  000E76  EC4B  F001         	call	___ftadd	;wreg free
  4589  000E7A  C075  F08D         	movff	?___ftadd,log@x
  4590  000E7E  C076  F08E         	movff	?___ftadd+1,log@x+1
  4591  000E82  C077  F08F         	movff	?___ftadd+2,log@x+2
  4592  000E86  0100               	movlb	0	; () banked
  4593  000E88  0790               	decf	log@exponent& (0+255),f,b
  4594  000E8A  A0D8               	btfss	status,0,c
  4595  000E8C  0791               	decf	(log@exponent+1)& (0+255),f,b
  4596                           
  4597                           ; BSR set to: 0
  4598  000E8E  C08D  F081         	movff	log@x,eval_poly@x
  4599  000E92  C08E  F082         	movff	log@x+1,eval_poly@x+1
  4600  000E96  C08F  F083         	movff	log@x+2,eval_poly@x+2
  4601  000E9A  0ECD               	movlw	low log@coeff
  4602  000E9C  0100               	movlb	0	; () banked
  4603  000E9E  6F84               	movwf	eval_poly@d& (0+255),b
  4604  000EA0  0E7F               	movlw	high log@coeff
  4605  000EA2  0100               	movlb	0	; () banked
  4606  000EA4  6F85               	movwf	(eval_poly@d+1)& (0+255),b
  4607  000EA6  0E00               	movlw	0
  4608  000EA8  0100               	movlb	0	; () banked
  4609  000EAA  6F87               	movwf	(eval_poly@n+1)& (0+255),b
  4610  000EAC  0E08               	movlw	8
  4611  000EAE  6F86               	movwf	eval_poly@n& (0+255),b
  4612  000EB0  ECB8  F00D         	call	_eval_poly	;wreg free
  4613  000EB4  C081  F08D         	movff	?_eval_poly,log@x
  4614  000EB8  C082  F08E         	movff	?_eval_poly+1,log@x+1
  4615  000EBC  C083  F08F         	movff	?_eval_poly+2,log@x+2
  4616  000EC0  0E72               	movlw	114
  4617  000EC2  0100               	movlb	0	; () banked
  4618  000EC4  6F66               	movwf	___ftmul@f2& (0+255),b
  4619  000EC6  0E31               	movlw	49
  4620  000EC8  0100               	movlb	0	; () banked
  4621  000ECA  6F67               	movwf	(___ftmul@f2+1)& (0+255),b
  4622  000ECC  0E3F               	movlw	63
  4623  000ECE  0100               	movlb	0	; () banked
  4624  000ED0  6F68               	movwf	(___ftmul@f2+2)& (0+255),b
  4625  000ED2  C090  F060         	movff	log@exponent,___awtoft@c
  4626  000ED6  C091  F061         	movff	log@exponent+1,___awtoft@c+1
  4627  000EDA  EC35  F017         	call	___awtoft	;wreg free
  4628  000EDE  C060  F063         	movff	?___awtoft,___ftmul@f1
  4629  000EE2  C061  F064         	movff	?___awtoft+1,___ftmul@f1+1
  4630  000EE6  C062  F065         	movff	?___awtoft+2,___ftmul@f1+2
  4631  000EEA  EC37  F006         	call	___ftmul	;wreg free
  4632  000EEE  C063  F075         	movff	?___ftmul,___ftadd@f1
  4633  000EF2  C064  F076         	movff	?___ftmul+1,___ftadd@f1+1
  4634  000EF6  C065  F077         	movff	?___ftmul+2,___ftadd@f1+2
  4635  000EFA  C08D  F078         	movff	log@x,___ftadd@f2
  4636  000EFE  C08E  F079         	movff	log@x+1,___ftadd@f2+1
  4637  000F02  C08F  F07A         	movff	log@x+2,___ftadd@f2+2
  4638  000F06  EC4B  F001         	call	___ftadd	;wreg free
  4639  000F0A  C075  F08D         	movff	?___ftadd,?_log
  4640  000F0E  C076  F08E         	movff	?___ftadd+1,?_log+1
  4641  000F12  C077  F08F         	movff	?___ftadd+2,?_log+2
  4642  000F16  0012               	return	
  4643  000F18                     __end_of_log:
  4644                           	opt stack 0
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           prodh	equ	0xFF4
  4650                           prodl	equ	0xFF3
  4651                           intcon	equ	0xFF2
  4652                           postinc0	equ	0xFEE
  4653                           wreg	equ	0xFE8
  4654                           postdec1	equ	0xFE5
  4655                           fsr1l	equ	0xFE1
  4656                           indf2	equ	0xFDF
  4657                           postinc2	equ	0xFDE
  4658                           postdec2	equ	0xFDD
  4659                           fsr2h	equ	0xFDA
  4660                           fsr2l	equ	0xFD9
  4661                           status	equ	0xFD8
  4662                           
  4663 ;; *************** function _exp *****************
  4664 ;; Defined at:
  4665 ;;		line 12 in file "/Applications/microchip/xc8/v1.35/sources/common/exp.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  x               3   52[BANK0 ] int 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  exponent        2   58[BANK0 ] int 
  4670 ;;  sign            1   60[BANK0 ] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  3   52[BANK0 ] unsigned char 
  4673 ;; Registers used:
  4674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4680 ;;      Params:         0       3       0       0       0       0       0       0       0
  4681 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4683 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4684 ;;Total ram usage:        9 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:   13
  4687 ;; This function calls:
  4688 ;;		___awtoft
  4689 ;;		___ftdiv
  4690 ;;		___ftge
  4691 ;;		___ftmul
  4692 ;;		___ftneg
  4693 ;;		___ftsub
  4694 ;;		___fttol
  4695 ;;		_eval_poly
  4696 ;;		_floor
  4697 ;;		_ldexp
  4698 ;; This function is called by:
  4699 ;;		_pow
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text21
  4704  0004FE                     __ptext21:
  4705                           	opt stack 0
  4706  0004FE                     _exp:
  4707                           	opt stack 15
  4708                           
  4709                           ;incstack = 0
  4710  0004FE  0100               	movlb	0	; () banked
  4711  000500  5194               	movf	exp@x& (0+255),w,b
  4712  000502  0100               	movlb	0	; () banked
  4713  000504  1195               	iorwf	(exp@x+1)& (0+255),w,b
  4714  000506  0100               	movlb	0	; () banked
  4715  000508  1196               	iorwf	(exp@x+2)& (0+255),w,b
  4716  00050A  A4D8               	btfss	status,2,c
  4717  00050C  D00A               	goto	l5265
  4718                           
  4719                           ; BSR set to: 0
  4720  00050E  0E00               	movlw	0
  4721  000510  0100               	movlb	0	; () banked
  4722  000512  6F94               	movwf	?_exp& (0+255),b
  4723  000514  0E80               	movlw	128
  4724  000516  0100               	movlb	0	; () banked
  4725  000518  6F95               	movwf	(?_exp+1)& (0+255),b
  4726  00051A  0E3F               	movlw	63
  4727  00051C  0100               	movlb	0	; () banked
  4728  00051E  6F96               	movwf	(?_exp+2)& (0+255),b
  4729                           
  4730                           ; BSR set to: 0
  4731  000520  0012               	return	
  4732  000522                     l5265:
  4733                           
  4734                           ; BSR set to: 0
  4735  000522  0E72               	movlw	114
  4736  000524  6E2B               	movwf	___ftge@ff1,c
  4737  000526  0E31               	movlw	49
  4738  000528  6E2C               	movwf	___ftge@ff1+1,c
  4739  00052A  0E44               	movlw	68
  4740  00052C  6E2D               	movwf	___ftge@ff1+2,c
  4741  00052E  C094  F02E         	movff	exp@x,___ftge@ff2
  4742  000532  C095  F02F         	movff	exp@x+1,___ftge@ff2+1
  4743  000536  C096  F030         	movff	exp@x+2,___ftge@ff2+2
  4744  00053A  ECD7  F013         	call	___ftge	;wreg free
  4745  00053E  B0D8               	btfsc	status,0,c
  4746  000540  D00F               	goto	l5271
  4747  000542  0E00               	movlw	0
  4748  000544  0100               	movlb	0	; () banked
  4749  000546  6FEA               	movwf	(_errno+1)& (0+255),b
  4750  000548  0E22               	movlw	34
  4751  00054A  6FE9               	movwf	_errno& (0+255),b
  4752  00054C  0EFF               	movlw	255
  4753  00054E  0100               	movlb	0	; () banked
  4754  000550  6F94               	movwf	?_exp& (0+255),b
  4755  000552  0E7F               	movlw	127
  4756  000554  0100               	movlb	0	; () banked
  4757  000556  6F95               	movwf	(?_exp+1)& (0+255),b
  4758  000558  0E7F               	movlw	127
  4759  00055A  0100               	movlb	0	; () banked
  4760  00055C  6F96               	movwf	(?_exp+2)& (0+255),b
  4761                           
  4762                           ; BSR set to: 0
  4763  00055E  0012               	return	
  4764  000560                     l5271:
  4765  000560  C094  F02B         	movff	exp@x,___ftge@ff1
  4766  000564  C095  F02C         	movff	exp@x+1,___ftge@ff1+1
  4767  000568  C096  F02D         	movff	exp@x+2,___ftge@ff1+2
  4768  00056C  0E49               	movlw	73
  4769  00056E  6E2E               	movwf	___ftge@ff2,c
  4770  000570  0E3A               	movlw	58
  4771  000572  6E2F               	movwf	___ftge@ff2+1,c
  4772  000574  0EC4               	movlw	196
  4773  000576  6E30               	movwf	___ftge@ff2+2,c
  4774  000578  ECD7  F013         	call	___ftge	;wreg free
  4775  00057C  B0D8               	btfsc	status,0,c
  4776  00057E  D00F               	goto	l5277
  4777  000580  0E00               	movlw	0
  4778  000582  0100               	movlb	0	; () banked
  4779  000584  6FEA               	movwf	(_errno+1)& (0+255),b
  4780  000586  0E22               	movlw	34
  4781  000588  6FE9               	movwf	_errno& (0+255),b
  4782  00058A  0E00               	movlw	0
  4783  00058C  0100               	movlb	0	; () banked
  4784  00058E  6F94               	movwf	?_exp& (0+255),b
  4785  000590  0E00               	movlw	0
  4786  000592  0100               	movlb	0	; () banked
  4787  000594  6F95               	movwf	(?_exp+1)& (0+255),b
  4788  000596  0E00               	movlw	0
  4789  000598  0100               	movlb	0	; () banked
  4790  00059A  6F96               	movwf	(?_exp+2)& (0+255),b
  4791                           
  4792                           ; BSR set to: 0
  4793  00059C  0012               	return	
  4794  00059E                     l5277:
  4795  00059E  0100               	movlb	0	; () banked
  4796  0005A0  AF96               	btfss	(exp@x+2)& (0+255),7,b
  4797  0005A2  D002               	goto	u4810
  4798  0005A4  0E01               	movlw	1
  4799  0005A6  D001               	goto	u4820
  4800  0005A8                     u4810:
  4801  0005A8  0E00               	movlw	0
  4802  0005AA                     u4820:
  4803  0005AA  0100               	movlb	0	; () banked
  4804  0005AC  6F9C               	movwf	exp@sign& (0+255),b
  4805                           
  4806                           ; BSR set to: 0
  4807  0005AE  0100               	movlb	0	; () banked
  4808  0005B0  519C               	movf	exp@sign& (0+255),w,b
  4809  0005B2  0100               	movlb	0	; () banked
  4810  0005B4  B4D8               	btfsc	status,2,c
  4811  0005B6  D00E               	goto	l1664
  4812                           
  4813                           ; BSR set to: 0
  4814  0005B8  C094  F072         	movff	exp@x,___ftneg@f1
  4815  0005BC  C095  F073         	movff	exp@x+1,___ftneg@f1+1
  4816  0005C0  C096  F074         	movff	exp@x+2,___ftneg@f1+2
  4817  0005C4  EC60  F018         	call	___ftneg	;wreg free
  4818  0005C8  C072  F094         	movff	?___ftneg,exp@x
  4819  0005CC  C073  F095         	movff	?___ftneg+1,exp@x+1
  4820  0005D0  C074  F096         	movff	?___ftneg+2,exp@x+2
  4821  0005D4                     l1664:
  4822  0005D4  C094  F063         	movff	exp@x,___ftmul@f1
  4823  0005D8  C095  F064         	movff	exp@x+1,___ftmul@f1+1
  4824  0005DC  C096  F065         	movff	exp@x+2,___ftmul@f1+2
  4825  0005E0  0EAA               	movlw	170
  4826  0005E2  0100               	movlb	0	; () banked
  4827  0005E4  6F66               	movwf	___ftmul@f2& (0+255),b
  4828  0005E6  0EB8               	movlw	184
  4829  0005E8  0100               	movlb	0	; () banked
  4830  0005EA  6F67               	movwf	(___ftmul@f2+1)& (0+255),b
  4831  0005EC  0E3F               	movlw	63
  4832  0005EE  0100               	movlb	0	; () banked
  4833  0005F0  6F68               	movwf	(___ftmul@f2+2)& (0+255),b
  4834  0005F2  EC37  F006         	call	___ftmul	;wreg free
  4835  0005F6  C063  F094         	movff	?___ftmul,exp@x
  4836  0005FA  C064  F095         	movff	?___ftmul+1,exp@x+1
  4837  0005FE  C065  F096         	movff	?___ftmul+2,exp@x+2
  4838  000602  C094  F08B         	movff	exp@x,floor@x
  4839  000606  C095  F08C         	movff	exp@x+1,floor@x+1
  4840  00060A  C096  F08D         	movff	exp@x+2,floor@x+2
  4841  00060E  EC50  F00C         	call	_floor	;wreg free
  4842  000612  C08B  F097         	movff	?_floor,_exp$4055
  4843  000616  C08C  F098         	movff	?_floor+1,_exp$4055+1
  4844  00061A  C08D  F099         	movff	?_floor+2,_exp$4055+2
  4845  00061E  C097  F072         	movff	_exp$4055,___fttol@f1
  4846  000622  C098  F073         	movff	_exp$4055+1,___fttol@f1+1
  4847  000626  C099  F074         	movff	_exp$4055+2,___fttol@f1+2
  4848  00062A  ECD4  F008         	call	___fttol	;wreg free
  4849  00062E  C072  F09A         	movff	?___fttol,exp@exponent
  4850  000632  C073  F09B         	movff	?___fttol+1,exp@exponent+1
  4851  000636  C094  F081         	movff	exp@x,___ftsub@f1
  4852  00063A  C095  F082         	movff	exp@x+1,___ftsub@f1+1
  4853  00063E  C096  F083         	movff	exp@x+2,___ftsub@f1+2
  4854  000642  C09A  F060         	movff	exp@exponent,___awtoft@c
  4855  000646  C09B  F061         	movff	exp@exponent+1,___awtoft@c+1
  4856  00064A  EC35  F017         	call	___awtoft	;wreg free
  4857  00064E  C060  F084         	movff	?___awtoft,___ftsub@f2
  4858  000652  C061  F085         	movff	?___awtoft+1,___ftsub@f2+1
  4859  000656  C062  F086         	movff	?___awtoft+2,___ftsub@f2+2
  4860  00065A  ECCE  F016         	call	___ftsub	;wreg free
  4861  00065E  C081  F094         	movff	?___ftsub,exp@x
  4862  000662  C082  F095         	movff	?___ftsub+1,exp@x+1
  4863  000666  C083  F096         	movff	?___ftsub+2,exp@x+2
  4864  00066A  C094  F081         	movff	exp@x,eval_poly@x
  4865  00066E  C095  F082         	movff	exp@x+1,eval_poly@x+1
  4866  000672  C096  F083         	movff	exp@x+2,eval_poly@x+2
  4867  000676  0EAF               	movlw	low exp@coeff
  4868  000678  0100               	movlb	0	; () banked
  4869  00067A  6F84               	movwf	eval_poly@d& (0+255),b
  4870  00067C  0E7F               	movlw	high exp@coeff
  4871  00067E  0100               	movlb	0	; () banked
  4872  000680  6F85               	movwf	(eval_poly@d+1)& (0+255),b
  4873  000682  0E00               	movlw	0
  4874  000684  0100               	movlb	0	; () banked
  4875  000686  6F87               	movwf	(eval_poly@n+1)& (0+255),b
  4876  000688  0E09               	movlw	9
  4877  00068A  6F86               	movwf	eval_poly@n& (0+255),b
  4878  00068C  ECB8  F00D         	call	_eval_poly	;wreg free
  4879  000690  C081  F08D         	movff	?_eval_poly,ldexp@value
  4880  000694  C082  F08E         	movff	?_eval_poly+1,ldexp@value+1
  4881  000698  C083  F08F         	movff	?_eval_poly+2,ldexp@value+2
  4882  00069C  C09A  F090         	movff	exp@exponent,ldexp@newexp
  4883  0006A0  C09B  F091         	movff	exp@exponent+1,ldexp@newexp+1
  4884  0006A4  EC3E  F00B         	call	_ldexp	;wreg free
  4885  0006A8  C08D  F094         	movff	?_ldexp,exp@x
  4886  0006AC  C08E  F095         	movff	?_ldexp+1,exp@x+1
  4887  0006B0  C08F  F096         	movff	?_ldexp+2,exp@x+2
  4888  0006B4  0100               	movlb	0	; () banked
  4889  0006B6  519C               	movf	exp@sign& (0+255),w,b
  4890  0006B8  0100               	movlb	0	; () banked
  4891  0006BA  B4D8               	btfsc	status,2,c
  4892  0006BC  D02E               	goto	l1665
  4893                           
  4894                           ; BSR set to: 0
  4895  0006BE  0100               	movlb	0	; () banked
  4896  0006C0  2994               	incf	exp@x& (0+255),w,b
  4897  0006C2  E113               	bnz	l5299
  4898  0006C4  0E7F               	movlw	127
  4899  0006C6  0100               	movlb	0	; () banked
  4900  0006C8  1995               	xorwf	(exp@x+1)& (0+255),w,b
  4901  0006CA  E10F               	bnz	l5299
  4902  0006CC  0E7F               	movlw	127
  4903  0006CE  0100               	movlb	0	; () banked
  4904  0006D0  1996               	xorwf	(exp@x+2)& (0+255),w,b
  4905  0006D2  A4D8               	btfss	status,2,c
  4906  0006D4  D00A               	goto	l5299
  4907                           
  4908                           ; BSR set to: 0
  4909  0006D6  0E00               	movlw	0
  4910  0006D8  0100               	movlb	0	; () banked
  4911  0006DA  6F94               	movwf	?_exp& (0+255),b
  4912  0006DC  0E00               	movlw	0
  4913  0006DE  0100               	movlb	0	; () banked
  4914  0006E0  6F95               	movwf	(?_exp+1)& (0+255),b
  4915  0006E2  0E00               	movlw	0
  4916  0006E4  0100               	movlb	0	; () banked
  4917  0006E6  6F96               	movwf	(?_exp+2)& (0+255),b
  4918                           
  4919                           ; BSR set to: 0
  4920  0006E8  0012               	return	
  4921  0006EA                     l5299:
  4922                           
  4923                           ; BSR set to: 0
  4924  0006EA  0E00               	movlw	0
  4925  0006EC  0100               	movlb	0	; () banked
  4926  0006EE  6F63               	movwf	___ftdiv@f1& (0+255),b
  4927  0006F0  0E80               	movlw	128
  4928  0006F2  0100               	movlb	0	; () banked
  4929  0006F4  6F64               	movwf	(___ftdiv@f1+1)& (0+255),b
  4930  0006F6  0E3F               	movlw	63
  4931  0006F8  0100               	movlb	0	; () banked
  4932  0006FA  6F65               	movwf	(___ftdiv@f1+2)& (0+255),b
  4933  0006FC  C094  F066         	movff	exp@x,___ftdiv@f2
  4934  000700  C095  F067         	movff	exp@x+1,___ftdiv@f2+1
  4935  000704  C096  F068         	movff	exp@x+2,___ftdiv@f2+2
  4936  000708  EC8C  F007         	call	___ftdiv	;wreg free
  4937  00070C  C063  F094         	movff	?___ftdiv,?_exp
  4938  000710  C064  F095         	movff	?___ftdiv+1,?_exp+1
  4939  000714  C065  F096         	movff	?___ftdiv+2,?_exp+2
  4940  000718  0012               	return	
  4941  00071A                     l1665:
  4942                           
  4943                           ; BSR set to: 0
  4944  00071A  C094  F094         	movff	exp@x,?_exp
  4945  00071E  C095  F095         	movff	exp@x+1,?_exp+1
  4946  000722  C096  F096         	movff	exp@x+2,?_exp+2
  4947  000726  0012               	return		;funcret
  4948  000728                     __end_of_exp:
  4949                           	opt stack 0
  4950                           tblptru	equ	0xFF8
  4951                           tblptrh	equ	0xFF7
  4952                           tblptrl	equ	0xFF6
  4953                           tablat	equ	0xFF5
  4954                           prodh	equ	0xFF4
  4955                           prodl	equ	0xFF3
  4956                           intcon	equ	0xFF2
  4957                           postinc0	equ	0xFEE
  4958                           wreg	equ	0xFE8
  4959                           postdec1	equ	0xFE5
  4960                           fsr1l	equ	0xFE1
  4961                           indf2	equ	0xFDF
  4962                           postinc2	equ	0xFDE
  4963                           postdec2	equ	0xFDD
  4964                           fsr2h	equ	0xFDA
  4965                           fsr2l	equ	0xFD9
  4966                           status	equ	0xFD8
  4967                           
  4968 ;; *************** function _ldexp *****************
  4969 ;; Defined at:
  4970 ;;		line 277 in file "/Applications/microchip/xc8/v1.35/sources/common/frexp.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  value           3   45[BANK0 ] unsigned char 
  4973 ;;  newexp          2   48[BANK0 ] int 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;		None
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  3   45[BANK0 ] int 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4985 ;;      Params:         0       5       0       0       0       0       0       0       0
  4986 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4987 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4988 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4989 ;;Total ram usage:        7 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:   10
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_exp
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text22
  5000  00167C                     __ptext22:
  5001                           	opt stack 0
  5002  00167C                     _ldexp:
  5003                           	opt stack 17
  5004                           
  5005                           ;incstack = 0
  5006  00167C  0100               	movlb	0	; () banked
  5007  00167E  518D               	movf	ldexp@value& (0+255),w,b
  5008  001680  0100               	movlb	0	; () banked
  5009  001682  118E               	iorwf	(ldexp@value+1)& (0+255),w,b
  5010  001684  0100               	movlb	0	; () banked
  5011  001686  118F               	iorwf	(ldexp@value+2)& (0+255),w,b
  5012  001688  A4D8               	btfss	status,2,c
  5013  00168A  D00A               	goto	l5089
  5014                           
  5015                           ; BSR set to: 0
  5016  00168C  0E00               	movlw	0
  5017  00168E  0100               	movlb	0	; () banked
  5018  001690  6F8D               	movwf	?_ldexp& (0+255),b
  5019  001692  0E00               	movlw	0
  5020  001694  0100               	movlb	0	; () banked
  5021  001696  6F8E               	movwf	(?_ldexp+1)& (0+255),b
  5022  001698  0E00               	movlw	0
  5023  00169A  0100               	movlb	0	; () banked
  5024  00169C  6F8F               	movwf	(?_ldexp+2)& (0+255),b
  5025                           
  5026                           ; BSR set to: 0
  5027  00169E  0012               	return	
  5028  0016A0                     l5089:
  5029                           
  5030                           ; BSR set to: 0
  5031  0016A0  0100               	movlb	0	; () banked
  5032  0016A2  518F               	movf	(ldexp@value+2)& (0+255),w,b
  5033  0016A4  0B7F               	andlw	127
  5034  0016A6  0100               	movlb	0	; () banked
  5035  0016A8  6F92               	movwf	??_ldexp& (0+255),b
  5036  0016AA  6B93               	clrf	(??_ldexp+1)& (0+255),b
  5037  0016AC  90D8               	bcf	status,0,c
  5038  0016AE  0100               	movlb	0	; () banked
  5039  0016B0  3792               	rlcf	??_ldexp& (0+255),f,b
  5040  0016B2  3793               	rlcf	(??_ldexp+1)& (0+255),f,b
  5041  0016B4  0100               	movlb	0	; () banked
  5042  0016B6  5192               	movf	??_ldexp& (0+255),w,b
  5043  0016B8  0100               	movlb	0	; () banked
  5044  0016BA  2790               	addwf	ldexp@newexp& (0+255),f,b
  5045  0016BC  0100               	movlb	0	; () banked
  5046  0016BE  5193               	movf	(??_ldexp+1)& (0+255),w,b
  5047  0016C0  0100               	movlb	0	; () banked
  5048  0016C2  2391               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5049  0016C4  0100               	movlb	0	; () banked
  5050  0016C6  AF8E               	btfss	(ldexp@value+1)& (0+255),7,b
  5051  0016C8  D004               	goto	u4600
  5052  0016CA  0100               	movlb	0	; () banked
  5053  0016CC  6B92               	clrf	??_ldexp& (0+255),b
  5054  0016CE  2B92               	incf	??_ldexp& (0+255),f,b
  5055  0016D0  D002               	goto	u4608
  5056  0016D2                     u4600:
  5057  0016D2  0100               	movlb	0	; () banked
  5058  0016D4  6B92               	clrf	??_ldexp& (0+255),b
  5059  0016D6                     u4608:
  5060  0016D6  0100               	movlb	0	; () banked
  5061  0016D8  5192               	movf	??_ldexp& (0+255),w,b
  5062  0016DA  0100               	movlb	0	; () banked
  5063  0016DC  2790               	addwf	ldexp@newexp& (0+255),f,b
  5064  0016DE  0E00               	movlw	0
  5065  0016E0  2391               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5066  0016E2  0100               	movlb	0	; () banked
  5067  0016E4  AF91               	btfss	(ldexp@newexp+1)& (0+255),7,b
  5068  0016E6  D00F               	goto	l5097
  5069                           
  5070                           ; BSR set to: 0
  5071  0016E8  0E00               	movlw	0
  5072  0016EA  0100               	movlb	0	; () banked
  5073  0016EC  6FEA               	movwf	(_errno+1)& (0+255),b
  5074  0016EE  0E22               	movlw	34
  5075  0016F0  6FE9               	movwf	_errno& (0+255),b
  5076  0016F2  0E00               	movlw	0
  5077  0016F4  0100               	movlb	0	; () banked
  5078  0016F6  6F8D               	movwf	?_ldexp& (0+255),b
  5079  0016F8  0E00               	movlw	0
  5080  0016FA  0100               	movlb	0	; () banked
  5081  0016FC  6F8E               	movwf	(?_ldexp+1)& (0+255),b
  5082  0016FE  0E00               	movlw	0
  5083  001700                     L1:
  5084  001700  0100               	movlb	0	; () banked
  5085  001702  6F8F               	movwf	(?_ldexp+2)& (0+255),b
  5086                           
  5087                           ; BSR set to: 0
  5088  001704  0012               	return	
  5089  001706                     l5097:
  5090                           
  5091                           ; BSR set to: 0
  5092  001706  0100               	movlb	0	; () banked
  5093  001708  BF91               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  5094  00170A  D01C               	goto	l5113
  5095  00170C  0100               	movlb	0	; () banked
  5096  00170E  0591               	decf	(ldexp@newexp+1)& (0+255),w,b
  5097  001710  A0D8               	btfss	status,0,c
  5098  001712  D018               	goto	l5113
  5099                           
  5100                           ; BSR set to: 0
  5101  001714  0E00               	movlw	0
  5102  001716  0100               	movlb	0	; () banked
  5103  001718  6FEA               	movwf	(_errno+1)& (0+255),b
  5104  00171A  0E22               	movlw	34
  5105  00171C  6FE9               	movwf	_errno& (0+255),b
  5106                           
  5107                           ; BSR set to: 0
  5108  00171E  0100               	movlb	0	; () banked
  5109  001720  AF8F               	btfss	(ldexp@value+2)& (0+255),7,b
  5110  001722  D008               	goto	l5109
  5111                           
  5112                           ; BSR set to: 0
  5113  001724  0EFF               	movlw	255
  5114  001726  0100               	movlb	0	; () banked
  5115  001728  6F8D               	movwf	?_ldexp& (0+255),b
  5116  00172A  0E7F               	movlw	127
  5117  00172C  0100               	movlb	0	; () banked
  5118  00172E  6F8E               	movwf	(?_ldexp+1)& (0+255),b
  5119  001730  0EFF               	movlw	255
  5120  001732  D7E6               	goto	L1
  5121  001734                     l5109:
  5122                           
  5123                           ; BSR set to: 0
  5124  001734  0EFF               	movlw	255
  5125  001736  0100               	movlb	0	; () banked
  5126  001738  6F8D               	movwf	?_ldexp& (0+255),b
  5127  00173A  0E7F               	movlw	127
  5128  00173C  0100               	movlb	0	; () banked
  5129  00173E  6F8E               	movwf	(?_ldexp+1)& (0+255),b
  5130  001740  0E7F               	movlw	127
  5131  001742  D7DE               	goto	L1
  5132  001744                     l5113:
  5133                           
  5134                           ; BSR set to: 0
  5135  001744  0100               	movlb	0	; () banked
  5136  001746  3591               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  5137  001748  3191               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  5138  00174A  0100               	movlb	0	; () banked
  5139  00174C  6F93               	movwf	(??_ldexp+1)& (0+255),b
  5140  00174E  0100               	movlb	0	; () banked
  5141  001750  3190               	rrcf	ldexp@newexp& (0+255),w,b
  5142  001752  0100               	movlb	0	; () banked
  5143  001754  6F92               	movwf	??_ldexp& (0+255),b
  5144  001756  0100               	movlb	0	; () banked
  5145  001758  518F               	movf	(ldexp@value+2)& (0+255),w,b
  5146  00175A  0100               	movlb	0	; () banked
  5147  00175C  1992               	xorwf	??_ldexp& (0+255),w,b
  5148  00175E  0B80               	andlw	-128
  5149  001760  1992               	xorwf	??_ldexp& (0+255),w,b
  5150  001762  0100               	movlb	0	; () banked
  5151  001764  6F8F               	movwf	(ldexp@value+2)& (0+255),b
  5152  001766  C090  F092         	movff	ldexp@newexp,??_ldexp
  5153  00176A  0E01               	movlw	1
  5154  00176C  0100               	movlb	0	; () banked
  5155  00176E  1792               	andwf	??_ldexp& (0+255),f,b
  5156  001770  0100               	movlb	0	; () banked
  5157  001772  3392               	rrcf	??_ldexp& (0+255),f,b
  5158  001774  3392               	rrcf	??_ldexp& (0+255),f,b
  5159  001776  0100               	movlb	0	; () banked
  5160  001778  518E               	movf	(ldexp@value+1)& (0+255),w,b
  5161  00177A  0100               	movlb	0	; () banked
  5162  00177C  1992               	xorwf	??_ldexp& (0+255),w,b
  5163  00177E  0B7F               	andlw	-129
  5164  001780  1992               	xorwf	??_ldexp& (0+255),w,b
  5165  001782  0100               	movlb	0	; () banked
  5166  001784  6F8E               	movwf	(ldexp@value+1)& (0+255),b
  5167                           
  5168                           ; BSR set to: 0
  5169                           
  5170                           ; BSR set to: 0
  5171                           
  5172                           ; BSR set to: 0
  5173  001786  C08D  F08D         	movff	ldexp@value,?_ldexp
  5174  00178A  C08E  F08E         	movff	ldexp@value+1,?_ldexp+1
  5175  00178E  C08F  F08F         	movff	ldexp@value+2,?_ldexp+2
  5176  001792  0012               	return	
  5177  001794                     __end_of_ldexp:
  5178                           	opt stack 0
  5179                           tblptru	equ	0xFF8
  5180                           tblptrh	equ	0xFF7
  5181                           tblptrl	equ	0xFF6
  5182                           tablat	equ	0xFF5
  5183                           prodh	equ	0xFF4
  5184                           prodl	equ	0xFF3
  5185                           intcon	equ	0xFF2
  5186                           postinc0	equ	0xFEE
  5187                           wreg	equ	0xFE8
  5188                           postdec1	equ	0xFE5
  5189                           fsr1l	equ	0xFE1
  5190                           indf2	equ	0xFDF
  5191                           postinc2	equ	0xFDE
  5192                           postdec2	equ	0xFDD
  5193                           fsr2h	equ	0xFDA
  5194                           fsr2l	equ	0xFD9
  5195                           status	equ	0xFD8
  5196                           
  5197 ;; *************** function _floor *****************
  5198 ;; Defined at:
  5199 ;;		line 13 in file "/Applications/microchip/xc8/v1.35/sources/common/floor.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  x               3   43[BANK0 ] int 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  i               3   46[BANK0 ] int 
  5204 ;;  expon           2   49[BANK0 ] int 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  3   43[BANK0 ] int 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5214 ;;      Params:         0       3       0       0       0       0       0       0       0
  5215 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5217 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5218 ;;Total ram usage:        8 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:   12
  5221 ;; This function calls:
  5222 ;;		___altoft
  5223 ;;		___ftadd
  5224 ;;		___ftge
  5225 ;;		___fttol
  5226 ;;		_frexp
  5227 ;; This function is called by:
  5228 ;;		_exp
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text23
  5233  0018A0                     __ptext23:
  5234                           	opt stack 0
  5235  0018A0                     _floor:
  5236                           	opt stack 15
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;incstack = 0
  5240  0018A0  C08B  F02B         	movff	floor@x,frexp@value
  5241  0018A4  C08C  F02C         	movff	floor@x+1,frexp@value+1
  5242  0018A8  C08D  F02D         	movff	floor@x+2,frexp@value+2
  5243  0018AC  0E91               	movlw	low floor@expon
  5244  0018AE  6E2E               	movwf	frexp@eptr,c
  5245  0018B0  0E00               	movlw	high floor@expon
  5246  0018B2  6E2F               	movwf	frexp@eptr+1,c
  5247  0018B4  EC8F  F013         	call	_frexp	;wreg free
  5248  0018B8  0100               	movlb	0	; () banked
  5249  0018BA  AF92               	btfss	(floor@expon+1)& (0+255),7,b
  5250  0018BC  D017               	goto	l5067
  5251                           
  5252                           ; BSR set to: 0
  5253  0018BE  0100               	movlb	0	; () banked
  5254  0018C0  AF8D               	btfss	(floor@x+2)& (0+255),7,b
  5255  0018C2  D00A               	goto	l5063
  5256                           
  5257                           ; BSR set to: 0
  5258  0018C4  0E00               	movlw	0
  5259  0018C6  0100               	movlb	0	; () banked
  5260  0018C8  6F8B               	movwf	?_floor& (0+255),b
  5261  0018CA  0E80               	movlw	128
  5262  0018CC  0100               	movlb	0	; () banked
  5263  0018CE  6F8C               	movwf	(?_floor+1)& (0+255),b
  5264  0018D0  0EBF               	movlw	191
  5265  0018D2  0100               	movlb	0	; () banked
  5266  0018D4  6F8D               	movwf	(?_floor+2)& (0+255),b
  5267                           
  5268                           ; BSR set to: 0
  5269  0018D6  0012               	return	
  5270  0018D8                     l5063:
  5271                           
  5272                           ; BSR set to: 0
  5273  0018D8  0E00               	movlw	0
  5274  0018DA  0100               	movlb	0	; () banked
  5275  0018DC  6F8B               	movwf	?_floor& (0+255),b
  5276  0018DE  0E00               	movlw	0
  5277  0018E0  0100               	movlb	0	; () banked
  5278  0018E2  6F8C               	movwf	(?_floor+1)& (0+255),b
  5279  0018E4  0E00               	movlw	0
  5280  0018E6  0100               	movlb	0	; () banked
  5281  0018E8  6F8D               	movwf	(?_floor+2)& (0+255),b
  5282                           
  5283                           ; BSR set to: 0
  5284  0018EA  0012               	return	
  5285  0018EC                     l5067:
  5286                           
  5287                           ; BSR set to: 0
  5288  0018EC  0100               	movlb	0	; () banked
  5289  0018EE  5192               	movf	(floor@expon+1)& (0+255),w,b
  5290  0018F0  E105               	bnz	u4560
  5291  0018F2  0E15               	movlw	21
  5292  0018F4  0100               	movlb	0	; () banked
  5293  0018F6  5D91               	subwf	floor@expon& (0+255),w,b
  5294  0018F8  A0D8               	btfss	status,0,c
  5295  0018FA  D007               	goto	l5071
  5296  0018FC                     u4560:
  5297                           
  5298                           ; BSR set to: 0
  5299  0018FC  C08B  F08B         	movff	floor@x,?_floor
  5300  001900  C08C  F08C         	movff	floor@x+1,?_floor+1
  5301  001904  C08D  F08D         	movff	floor@x+2,?_floor+2
  5302  001908  0012               	return	
  5303  00190A                     l5071:
  5304                           
  5305                           ; BSR set to: 0
  5306  00190A  C08B  F072         	movff	floor@x,___fttol@f1
  5307  00190E  C08C  F073         	movff	floor@x+1,___fttol@f1+1
  5308  001912  C08D  F074         	movff	floor@x+2,___fttol@f1+2
  5309  001916  ECD4  F008         	call	___fttol	;wreg free
  5310  00191A  C072  F081         	movff	?___fttol,___altoft@c
  5311  00191E  C073  F082         	movff	?___fttol+1,___altoft@c+1
  5312  001922  C074  F083         	movff	?___fttol+2,___altoft@c+2
  5313  001926  C075  F084         	movff	?___fttol+3,___altoft@c+3
  5314  00192A  ECA9  F012         	call	___altoft	;wreg free
  5315  00192E  C081  F08E         	movff	?___altoft,floor@i
  5316  001932  C082  F08F         	movff	?___altoft+1,floor@i+1
  5317  001936  C083  F090         	movff	?___altoft+2,floor@i+2
  5318  00193A  C08B  F02B         	movff	floor@x,___ftge@ff1
  5319  00193E  C08C  F02C         	movff	floor@x+1,___ftge@ff1+1
  5320  001942  C08D  F02D         	movff	floor@x+2,___ftge@ff1+2
  5321  001946  C08E  F02E         	movff	floor@i,___ftge@ff2
  5322  00194A  C08F  F02F         	movff	floor@i+1,___ftge@ff2+1
  5323  00194E  C090  F030         	movff	floor@i+2,___ftge@ff2+2
  5324  001952  ECD7  F013         	call	___ftge	;wreg free
  5325  001956  B0D8               	btfsc	status,0,c
  5326  001958  D018               	goto	l1675
  5327  00195A  C08E  F075         	movff	floor@i,___ftadd@f1
  5328  00195E  C08F  F076         	movff	floor@i+1,___ftadd@f1+1
  5329  001962  C090  F077         	movff	floor@i+2,___ftadd@f1+2
  5330  001966  0E00               	movlw	0
  5331  001968  0100               	movlb	0	; () banked
  5332  00196A  6F78               	movwf	___ftadd@f2& (0+255),b
  5333  00196C  0E80               	movlw	128
  5334  00196E  0100               	movlb	0	; () banked
  5335  001970  6F79               	movwf	(___ftadd@f2+1)& (0+255),b
  5336  001972  0EBF               	movlw	191
  5337  001974  0100               	movlb	0	; () banked
  5338  001976  6F7A               	movwf	(___ftadd@f2+2)& (0+255),b
  5339  001978  EC4B  F001         	call	___ftadd	;wreg free
  5340  00197C  C075  F08B         	movff	?___ftadd,?_floor
  5341  001980  C076  F08C         	movff	?___ftadd+1,?_floor+1
  5342  001984  C077  F08D         	movff	?___ftadd+2,?_floor+2
  5343  001988  0012               	return	
  5344  00198A                     l1675:
  5345  00198A  C08E  F08B         	movff	floor@i,?_floor
  5346  00198E  C08F  F08C         	movff	floor@i+1,?_floor+1
  5347  001992  C090  F08D         	movff	floor@i+2,?_floor+2
  5348  001996  0012               	return		;funcret
  5349  001998                     __end_of_floor:
  5350                           	opt stack 0
  5351                           tblptru	equ	0xFF8
  5352                           tblptrh	equ	0xFF7
  5353                           tblptrl	equ	0xFF6
  5354                           tablat	equ	0xFF5
  5355                           prodh	equ	0xFF4
  5356                           prodl	equ	0xFF3
  5357                           intcon	equ	0xFF2
  5358                           postinc0	equ	0xFEE
  5359                           wreg	equ	0xFE8
  5360                           postdec1	equ	0xFE5
  5361                           fsr1l	equ	0xFE1
  5362                           indf2	equ	0xFDF
  5363                           postinc2	equ	0xFDE
  5364                           postdec2	equ	0xFDD
  5365                           fsr2h	equ	0xFDA
  5366                           fsr2l	equ	0xFD9
  5367                           status	equ	0xFD8
  5368                           
  5369 ;; *************** function _frexp *****************
  5370 ;; Defined at:
  5371 ;;		line 254 in file "/Applications/microchip/xc8/v1.35/sources/common/frexp.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  value           3   42[COMRAM] int 
  5374 ;;  eptr            2   45[COMRAM] PTR int 
  5375 ;;		 -> log@exponent(2), floor@expon(2), 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  3   42[COMRAM] PTR int 
  5380 ;; Registers used:
  5381 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5387 ;;      Params:         5       0       0       0       0       0       0       0       0
  5388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5389 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5390 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5391 ;;Total ram usage:        7 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:   10
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		_floor
  5398 ;;		_log
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text24
  5403  00271E                     __ptext24:
  5404                           	opt stack 0
  5405  00271E                     _frexp:
  5406                           	opt stack 17
  5407                           
  5408                           ;incstack = 0
  5409  00271E  502B               	movf	frexp@value,w,c
  5410  002720  102C               	iorwf	frexp@value+1,w,c
  5411  002722  102D               	iorwf	frexp@value+2,w,c
  5412  002724  A4D8               	btfss	status,2,c
  5413  002726  D00F               	goto	l4839
  5414  002728  C02E  FFD9         	movff	frexp@eptr,fsr2l
  5415  00272C  C02F  FFDA         	movff	frexp@eptr+1,fsr2h
  5416  002730  0E00               	movlw	0
  5417  002732  6EDE               	movwf	postinc2,c
  5418  002734  0E00               	movlw	0
  5419  002736  6EDD               	movwf	postdec2,c
  5420  002738  0E00               	movlw	0
  5421  00273A  6E2B               	movwf	?_frexp,c
  5422  00273C  0E00               	movlw	0
  5423  00273E  6E2C               	movwf	?_frexp+1,c
  5424  002740  0E00               	movlw	0
  5425  002742  6E2D               	movwf	?_frexp+2,c
  5426  002744  0012               	return	
  5427  002746                     l4839:
  5428  002746  502D               	movf	frexp@value+2,w,c
  5429  002748  0B7F               	andlw	127
  5430  00274A  6E30               	movwf	??_frexp& (0+255),c
  5431  00274C  6A31               	clrf	(??_frexp+1)& (0+255),c
  5432  00274E  90D8               	bcf	status,0,c
  5433  002750  3630               	rlcf	??_frexp,f,c
  5434  002752  3631               	rlcf	??_frexp+1,f,c
  5435  002754  C02E  FFD9         	movff	frexp@eptr,fsr2l
  5436  002758  C02F  FFDA         	movff	frexp@eptr+1,fsr2h
  5437  00275C  C030  FFDE         	movff	??_frexp,postinc2
  5438  002760  C031  FFDD         	movff	??_frexp+1,postdec2
  5439  002764  AE2C               	btfss	frexp@value+1,7,c
  5440  002766  D003               	goto	u4320
  5441  002768  6A30               	clrf	??_frexp& (0+255),c
  5442  00276A  2A30               	incf	??_frexp& (0+255),f,c
  5443  00276C  D001               	goto	u4328
  5444  00276E                     u4320:
  5445  00276E  6A30               	clrf	??_frexp& (0+255),c
  5446  002770                     u4328:
  5447  002770  5030               	movf	??_frexp,w,c
  5448  002772  C02E  FFD9         	movff	frexp@eptr,fsr2l
  5449  002776  C02F  FFDA         	movff	frexp@eptr+1,fsr2h
  5450  00277A  12DE               	iorwf	postinc2,f,c
  5451  00277C  0E00               	movlw	0
  5452  00277E  12DD               	iorwf	postdec2,f,c
  5453  002780  C02E  FFD9         	movff	frexp@eptr,fsr2l
  5454  002784  C02F  FFDA         	movff	frexp@eptr+1,fsr2h
  5455  002788  0E82               	movlw	130
  5456  00278A  26DE               	addwf	postinc2,f,c
  5457  00278C  0EFF               	movlw	255
  5458  00278E  22DD               	addwfc	postdec2,f,c
  5459  002790  802D               	bsf	frexp@value+2,0,c
  5460  002792  822D               	bsf	frexp@value+2,1,c
  5461  002794  842D               	bsf	frexp@value+2,2,c
  5462  002796  862D               	bsf	frexp@value+2,3,c
  5463  002798  882D               	bsf	frexp@value+2,4,c
  5464  00279A  8A2D               	bsf	frexp@value+2,5,c
  5465  00279C  9C2D               	bcf	frexp@value+2,6,c
  5466  00279E  9E2C               	bcf	frexp@value+1,7,c
  5467  0027A0  C02B  F02B         	movff	frexp@value,?_frexp
  5468  0027A4  C02C  F02C         	movff	frexp@value+1,?_frexp+1
  5469  0027A8  C02D  F02D         	movff	frexp@value+2,?_frexp+2
  5470  0027AC  0012               	return	
  5471  0027AE                     __end_of_frexp:
  5472                           	opt stack 0
  5473                           tblptru	equ	0xFF8
  5474                           tblptrh	equ	0xFF7
  5475                           tblptrl	equ	0xFF6
  5476                           tablat	equ	0xFF5
  5477                           prodh	equ	0xFF4
  5478                           prodl	equ	0xFF3
  5479                           intcon	equ	0xFF2
  5480                           postinc0	equ	0xFEE
  5481                           wreg	equ	0xFE8
  5482                           postdec1	equ	0xFE5
  5483                           fsr1l	equ	0xFE1
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491 ;; *************** function ___fttol *****************
  5492 ;; Defined at:
  5493 ;;		line 44 in file "/Applications/microchip/xc8/v1.35/sources/common/fttol.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  f1              3   18[BANK0 ] float 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  lval            4   28[BANK0 ] unsigned long 
  5498 ;;  exp1            1   32[BANK0 ] unsigned char 
  5499 ;;  sign1           1   27[BANK0 ] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  4   18[BANK0 ] long 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5509 ;;      Params:         0       4       0       0       0       0       0       0       0
  5510 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5511 ;;      Temps:          0       5       0       0       0       0       0       0       0
  5512 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5513 ;;Total ram usage:       15 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:   10
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_LCDdouble
  5520 ;;		_pow
  5521 ;;		_exp
  5522 ;;		_floor
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text25
  5527  0011A8                     __ptext25:
  5528                           	opt stack 0
  5529  0011A8                     ___fttol:
  5530                           	opt stack 16
  5531                           
  5532                           ;incstack = 0
  5533  0011A8  C074  F076         	movff	___fttol@f1+2,??___fttol
  5534  0011AC  0100               	movlb	0	; () banked
  5535  0011AE  6B77               	clrf	(??___fttol+1)& (0+255),b
  5536  0011B0  6B78               	clrf	(??___fttol+2)& (0+255),b
  5537  0011B2  0100               	movlb	0	; () banked
  5538  0011B4  3573               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5539  0011B6  0100               	movlb	0	; () banked
  5540  0011B8  3776               	rlcf	??___fttol& (0+255),f,b
  5541  0011BA  E301               	bnc	u4231
  5542  0011BC  8177               	bsf	(??___fttol+1)& (0+255),0,b
  5543  0011BE                     u4231:
  5544  0011BE  0100               	movlb	0	; () banked
  5545  0011C0  5176               	movf	??___fttol& (0+255),w,b
  5546  0011C2  0100               	movlb	0	; () banked
  5547  0011C4  6F80               	movwf	___fttol@exp1& (0+255),b
  5548  0011C6  0100               	movlb	0	; () banked
  5549  0011C8  5180               	movf	___fttol@exp1& (0+255),w,b
  5550  0011CA  A4D8               	btfss	status,2,c
  5551  0011CC  D00A               	goto	l4791
  5552                           
  5553                           ; BSR set to: 0
  5554  0011CE  0E00               	movlw	0
  5555  0011D0  0100               	movlb	0	; () banked
  5556  0011D2  6F72               	movwf	?___fttol& (0+255),b
  5557  0011D4  0E00               	movlw	0
  5558  0011D6  6F73               	movwf	(?___fttol+1)& (0+255),b
  5559  0011D8  0E00               	movlw	0
  5560  0011DA  6F74               	movwf	(?___fttol+2)& (0+255),b
  5561  0011DC  0E00               	movlw	0
  5562  0011DE  6F75               	movwf	(?___fttol+3)& (0+255),b
  5563                           
  5564                           ; BSR set to: 0
  5565  0011E0  0012               	return	
  5566  0011E2                     l4791:
  5567                           
  5568                           ; BSR set to: 0
  5569  0011E2  0E17               	movlw	23
  5570  0011E4  0100               	movlb	0	; () banked
  5571  0011E6  6F76               	movwf	??___fttol& (0+255),b
  5572  0011E8  C072  F077         	movff	___fttol@f1,??___fttol+1
  5573  0011EC  C073  F078         	movff	___fttol@f1+1,??___fttol+2
  5574  0011F0  C074  F079         	movff	___fttol@f1+2,??___fttol+3
  5575  0011F4  0100               	movlb	0	; () banked
  5576  0011F6  2976               	incf	??___fttol& (0+255),w,b
  5577  0011F8  0100               	movlb	0	; () banked
  5578  0011FA  6F7A               	movwf	(??___fttol+4)& (0+255),b
  5579  0011FC  D005               	goto	u4250
  5580  0011FE                     u4255:
  5581  0011FE  0100               	movlb	0	; () banked
  5582  001200  90D8               	bcf	status,0,c
  5583  001202  3379               	rrcf	(??___fttol+3)& (0+255),f,b
  5584  001204  3378               	rrcf	(??___fttol+2)& (0+255),f,b
  5585  001206  3377               	rrcf	(??___fttol+1)& (0+255),f,b
  5586  001208                     u4250:
  5587  001208  0100               	movlb	0	; () banked
  5588  00120A  2F7A               	decfsz	(??___fttol+4)& (0+255),f,b
  5589  00120C  D7F8               	goto	u4255
  5590  00120E  0100               	movlb	0	; () banked
  5591  001210  5177               	movf	(??___fttol+1)& (0+255),w,b
  5592  001212  0100               	movlb	0	; () banked
  5593  001214  6F7B               	movwf	___fttol@sign1& (0+255),b
  5594                           
  5595                           ; BSR set to: 0
  5596  001216  0100               	movlb	0	; () banked
  5597  001218  8F73               	bsf	(___fttol@f1+1)& (0+255),7,b
  5598                           
  5599                           ; BSR set to: 0
  5600  00121A  0EFF               	movlw	255
  5601  00121C  0100               	movlb	0	; () banked
  5602  00121E  1772               	andwf	___fttol@f1& (0+255),f,b
  5603  001220  0EFF               	movlw	255
  5604  001222  0100               	movlb	0	; () banked
  5605  001224  1773               	andwf	(___fttol@f1+1)& (0+255),f,b
  5606  001226  0E00               	movlw	0
  5607  001228  0100               	movlb	0	; () banked
  5608  00122A  1774               	andwf	(___fttol@f1+2)& (0+255),f,b
  5609                           
  5610                           ; BSR set to: 0
  5611  00122C  0100               	movlb	0	; () banked
  5612  00122E  5172               	movf	___fttol@f1& (0+255),w,b
  5613  001230  0100               	movlb	0	; () banked
  5614  001232  6F7C               	movwf	___fttol@lval& (0+255),b
  5615  001234  0100               	movlb	0	; () banked
  5616  001236  5173               	movf	(___fttol@f1+1)& (0+255),w,b
  5617  001238  0100               	movlb	0	; () banked
  5618  00123A  6F7D               	movwf	(___fttol@lval+1)& (0+255),b
  5619  00123C  0100               	movlb	0	; () banked
  5620  00123E  5174               	movf	(___fttol@f1+2)& (0+255),w,b
  5621  001240  0100               	movlb	0	; () banked
  5622  001242  6F7E               	movwf	(___fttol@lval+2)& (0+255),b
  5623  001244  0100               	movlb	0	; () banked
  5624  001246  6B7F               	clrf	(___fttol@lval+3)& (0+255),b
  5625                           
  5626                           ; BSR set to: 0
  5627  001248  0E8E               	movlw	142
  5628  00124A  0100               	movlb	0	; () banked
  5629  00124C  5F80               	subwf	___fttol@exp1& (0+255),f,b
  5630                           
  5631                           ; BSR set to: 0
  5632  00124E  0100               	movlb	0	; () banked
  5633  001250  AF80               	btfss	___fttol@exp1& (0+255),7,b
  5634  001252  D01A               	goto	l4813
  5635                           
  5636                           ; BSR set to: 0
  5637  001254  0100               	movlb	0	; () banked
  5638  001256  5180               	movf	___fttol@exp1& (0+255),w,b
  5639  001258  0A80               	xorlw	128
  5640  00125A  0F8F               	addlw	143
  5641  00125C  B0D8               	btfsc	status,0,c
  5642  00125E  D00A               	goto	l4809
  5643                           
  5644                           ; BSR set to: 0
  5645  001260  0E00               	movlw	0
  5646  001262  0100               	movlb	0	; () banked
  5647  001264  6F72               	movwf	?___fttol& (0+255),b
  5648  001266  0E00               	movlw	0
  5649  001268  6F73               	movwf	(?___fttol+1)& (0+255),b
  5650  00126A  0E00               	movlw	0
  5651  00126C  6F74               	movwf	(?___fttol+2)& (0+255),b
  5652  00126E  0E00               	movlw	0
  5653  001270  6F75               	movwf	(?___fttol+3)& (0+255),b
  5654                           
  5655                           ; BSR set to: 0
  5656  001272  0012               	return	
  5657  001274                     l4809:
  5658                           
  5659                           ; BSR set to: 0
  5660  001274  0100               	movlb	0	; () banked
  5661  001276  90D8               	bcf	status,0,c
  5662  001278  337F               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5663  00127A  337E               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5664  00127C  337D               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5665  00127E  337C               	rrcf	___fttol@lval& (0+255),f,b
  5666                           
  5667                           ; BSR set to: 0
  5668  001280  0100               	movlb	0	; () banked
  5669  001282  3F80               	incfsz	___fttol@exp1& (0+255),f,b
  5670  001284  D7F7               	goto	l4809
  5671                           
  5672                           ; BSR set to: 0
  5673  001286  D01B               	goto	l4823
  5674  001288                     l4813:
  5675                           
  5676                           ; BSR set to: 0
  5677  001288  0E17               	movlw	23
  5678  00128A  0100               	movlb	0	; () banked
  5679  00128C  6580               	cpfsgt	___fttol@exp1& (0+255),b
  5680  00128E  D012               	goto	l4821
  5681                           
  5682                           ; BSR set to: 0
  5683  001290  0E00               	movlw	0
  5684  001292  0100               	movlb	0	; () banked
  5685  001294  6F72               	movwf	?___fttol& (0+255),b
  5686  001296  0E00               	movlw	0
  5687  001298  6F73               	movwf	(?___fttol+1)& (0+255),b
  5688  00129A  0E00               	movlw	0
  5689  00129C  6F74               	movwf	(?___fttol+2)& (0+255),b
  5690  00129E  0E00               	movlw	0
  5691  0012A0  6F75               	movwf	(?___fttol+3)& (0+255),b
  5692                           
  5693                           ; BSR set to: 0
  5694  0012A2  0012               	return	
  5695  0012A4                     l4819:
  5696                           
  5697                           ; BSR set to: 0
  5698  0012A4  0100               	movlb	0	; () banked
  5699  0012A6  90D8               	bcf	status,0,c
  5700  0012A8  377C               	rlcf	___fttol@lval& (0+255),f,b
  5701  0012AA  377D               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5702  0012AC  377E               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5703  0012AE  377F               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5704  0012B0  0100               	movlb	0	; () banked
  5705  0012B2  0780               	decf	___fttol@exp1& (0+255),f,b
  5706  0012B4                     l4821:
  5707                           
  5708                           ; BSR set to: 0
  5709  0012B4  0100               	movlb	0	; () banked
  5710  0012B6  5180               	movf	___fttol@exp1& (0+255),w,b
  5711  0012B8  0100               	movlb	0	; () banked
  5712  0012BA  A4D8               	btfss	status,2,c
  5713  0012BC  D7F3               	goto	l4819
  5714  0012BE                     l4823:
  5715                           
  5716                           ; BSR set to: 0
  5717  0012BE  0100               	movlb	0	; () banked
  5718  0012C0  517B               	movf	___fttol@sign1& (0+255),w,b
  5719  0012C2  0100               	movlb	0	; () banked
  5720  0012C4  B4D8               	btfsc	status,2,c
  5721  0012C6  D009               	goto	l4827
  5722                           
  5723                           ; BSR set to: 0
  5724  0012C8  0100               	movlb	0	; () banked
  5725  0012CA  1F7F               	comf	(___fttol@lval+3)& (0+255),f,b
  5726  0012CC  1F7E               	comf	(___fttol@lval+2)& (0+255),f,b
  5727  0012CE  1F7D               	comf	(___fttol@lval+1)& (0+255),f,b
  5728  0012D0  6D7C               	negf	___fttol@lval& (0+255),b
  5729  0012D2  0E00               	movlw	0
  5730  0012D4  237D               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5731  0012D6  237E               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5732  0012D8  237F               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5733  0012DA                     l4827:
  5734                           
  5735                           ; BSR set to: 0
  5736  0012DA  C07C  F072         	movff	___fttol@lval,?___fttol
  5737  0012DE  C07D  F073         	movff	___fttol@lval+1,?___fttol+1
  5738  0012E2  C07E  F074         	movff	___fttol@lval+2,?___fttol+2
  5739  0012E6  C07F  F075         	movff	___fttol@lval+3,?___fttol+3
  5740  0012EA  0012               	return	
  5741  0012EC                     __end_of___fttol:
  5742                           	opt stack 0
  5743                           tblptru	equ	0xFF8
  5744                           tblptrh	equ	0xFF7
  5745                           tblptrl	equ	0xFF6
  5746                           tablat	equ	0xFF5
  5747                           prodh	equ	0xFF4
  5748                           prodl	equ	0xFF3
  5749                           intcon	equ	0xFF2
  5750                           postinc0	equ	0xFEE
  5751                           wreg	equ	0xFE8
  5752                           postdec1	equ	0xFE5
  5753                           fsr1l	equ	0xFE1
  5754                           indf2	equ	0xFDF
  5755                           postinc2	equ	0xFDE
  5756                           postdec2	equ	0xFDD
  5757                           fsr2h	equ	0xFDA
  5758                           fsr2l	equ	0xFD9
  5759                           status	equ	0xFD8
  5760                           
  5761 ;; *************** function ___ftge *****************
  5762 ;; Defined at:
  5763 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/ftge.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  ff1             3   42[COMRAM] float 
  5766 ;;  ff2             3   45[COMRAM] float 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;		None               void
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5778 ;;      Params:         6       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5781 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        9 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:   10
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_pow
  5789 ;;		_exp
  5790 ;;		_floor
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text26
  5795  0027AE                     __ptext26:
  5796                           	opt stack 0
  5797  0027AE                     ___ftge:
  5798                           	opt stack 16
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;incstack = 0
  5802  0027AE  AE2D               	btfss	___ftge@ff1+2,7,c
  5803  0027B0  D016               	goto	l4771
  5804  0027B2  C02B  F031         	movff	___ftge@ff1,??___ftge
  5805  0027B6  C02C  F032         	movff	___ftge@ff1+1,??___ftge+1
  5806  0027BA  C02D  F033         	movff	___ftge@ff1+2,??___ftge+2
  5807  0027BE  1E31               	comf	??___ftge,f,c
  5808  0027C0  1E32               	comf	??___ftge+1,f,c
  5809  0027C2  1E33               	comf	??___ftge+2,f,c
  5810  0027C4  2A31               	incf	??___ftge,f,c
  5811  0027C6  0E00               	movlw	0
  5812  0027C8  2232               	addwfc	??___ftge+1,f,c
  5813  0027CA  2233               	addwfc	??___ftge+2,f,c
  5814  0027CC  0E00               	movlw	0
  5815  0027CE  2431               	addwf	??___ftge,w,c
  5816  0027D0  6E2B               	movwf	___ftge@ff1,c
  5817  0027D2  0E00               	movlw	0
  5818  0027D4  2032               	addwfc	??___ftge+1,w,c
  5819  0027D6  6E2C               	movwf	___ftge@ff1+1,c
  5820  0027D8  0E80               	movlw	128
  5821  0027DA  2033               	addwfc	??___ftge+2,w,c
  5822  0027DC  6E2D               	movwf	___ftge@ff1+2,c
  5823  0027DE                     l4771:
  5824  0027DE  AE30               	btfss	___ftge@ff2+2,7,c
  5825  0027E0  D016               	goto	l4775
  5826  0027E2  C02E  F031         	movff	___ftge@ff2,??___ftge
  5827  0027E6  C02F  F032         	movff	___ftge@ff2+1,??___ftge+1
  5828  0027EA  C030  F033         	movff	___ftge@ff2+2,??___ftge+2
  5829  0027EE  1E31               	comf	??___ftge,f,c
  5830  0027F0  1E32               	comf	??___ftge+1,f,c
  5831  0027F2  1E33               	comf	??___ftge+2,f,c
  5832  0027F4  2A31               	incf	??___ftge,f,c
  5833  0027F6  0E00               	movlw	0
  5834  0027F8  2232               	addwfc	??___ftge+1,f,c
  5835  0027FA  2233               	addwfc	??___ftge+2,f,c
  5836  0027FC  0E00               	movlw	0
  5837  0027FE  2431               	addwf	??___ftge,w,c
  5838  002800  6E2E               	movwf	___ftge@ff2,c
  5839  002802  0E00               	movlw	0
  5840  002804  2032               	addwfc	??___ftge+1,w,c
  5841  002806  6E2F               	movwf	___ftge@ff2+1,c
  5842  002808  0E80               	movlw	128
  5843  00280A  2033               	addwfc	??___ftge+2,w,c
  5844  00280C  6E30               	movwf	___ftge@ff2+2,c
  5845  00280E                     l4775:
  5846  00280E  0E00               	movlw	0
  5847  002810  1A2B               	xorwf	___ftge@ff1,f,c
  5848  002812  0E00               	movlw	0
  5849  002814  1A2C               	xorwf	___ftge@ff1+1,f,c
  5850  002816  0E80               	movlw	128
  5851  002818  1A2D               	xorwf	___ftge@ff1+2,f,c
  5852  00281A  0E00               	movlw	0
  5853  00281C  1A2E               	xorwf	___ftge@ff2,f,c
  5854  00281E  0E00               	movlw	0
  5855  002820  1A2F               	xorwf	___ftge@ff2+1,f,c
  5856  002822  0E80               	movlw	128
  5857  002824  1A30               	xorwf	___ftge@ff2+2,f,c
  5858  002826  502E               	movf	___ftge@ff2,w,c
  5859  002828  5C2B               	subwf	___ftge@ff1,w,c
  5860  00282A  502F               	movf	___ftge@ff2+1,w,c
  5861  00282C  582C               	subwfb	___ftge@ff1+1,w,c
  5862  00282E  5030               	movf	___ftge@ff2+2,w,c
  5863  002830  582D               	subwfb	___ftge@ff1+2,w,c
  5864  002832  B0D8               	btfsc	status,0,c
  5865  002834  D002               	goto	l4781
  5866  002836  90D8               	bcf	status,0,c
  5867  002838  0012               	return	
  5868  00283A                     l4781:
  5869  00283A  80D8               	bsf	status,0,c
  5870  00283C  0012               	return	
  5871  00283E                     __end_of___ftge:
  5872                           	opt stack 0
  5873                           tblptru	equ	0xFF8
  5874                           tblptrh	equ	0xFF7
  5875                           tblptrl	equ	0xFF6
  5876                           tablat	equ	0xFF5
  5877                           prodh	equ	0xFF4
  5878                           prodl	equ	0xFF3
  5879                           intcon	equ	0xFF2
  5880                           postinc0	equ	0xFEE
  5881                           wreg	equ	0xFE8
  5882                           postdec1	equ	0xFE5
  5883                           fsr1l	equ	0xFE1
  5884                           indf2	equ	0xFDF
  5885                           postinc2	equ	0xFDE
  5886                           postdec2	equ	0xFDD
  5887                           fsr2h	equ	0xFDA
  5888                           fsr2l	equ	0xFD9
  5889                           status	equ	0xFD8
  5890                           
  5891 ;; *************** function ___altoft *****************
  5892 ;; Defined at:
  5893 ;;		line 42 in file "/Applications/microchip/xc8/v1.35/sources/common/altoft.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  c               4   33[BANK0 ] long 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;  sign            1   42[BANK0 ] unsigned char 
  5898 ;;  exp             1   41[BANK0 ] unsigned char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  3   33[BANK0 ] float 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5908 ;;      Params:         0       4       0       0       0       0       0       0       0
  5909 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5910 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5911 ;;      Totals:         0      10       0       0       0       0       0       0       0
  5912 ;;Total ram usage:       10 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:   11
  5915 ;; This function calls:
  5916 ;;		___ftpack
  5917 ;; This function is called by:
  5918 ;;		_floor
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text27
  5923  002552                     __ptext27:
  5924                           	opt stack 0
  5925  002552                     ___altoft:
  5926                           	opt stack 15
  5927                           
  5928                           ;incstack = 0
  5929  002552  0E00               	movlw	0
  5930  002554  0100               	movlb	0	; () banked
  5931  002556  6F8A               	movwf	___altoft@sign& (0+255),b
  5932  002558  0E8E               	movlw	142
  5933  00255A  0100               	movlb	0	; () banked
  5934  00255C  6F89               	movwf	___altoft@exp& (0+255),b
  5935                           
  5936                           ; BSR set to: 0
  5937  00255E  0100               	movlb	0	; () banked
  5938  002560  AF84               	btfss	(___altoft@c+3)& (0+255),7,b
  5939  002562  D015               	goto	l4643
  5940                           
  5941                           ; BSR set to: 0
  5942  002564  0100               	movlb	0	; () banked
  5943  002566  1F84               	comf	(___altoft@c+3)& (0+255),f,b
  5944  002568  1F83               	comf	(___altoft@c+2)& (0+255),f,b
  5945  00256A  1F82               	comf	(___altoft@c+1)& (0+255),f,b
  5946  00256C  6D81               	negf	___altoft@c& (0+255),b
  5947  00256E  0E00               	movlw	0
  5948  002570  2382               	addwfc	(___altoft@c+1)& (0+255),f,b
  5949  002572  2383               	addwfc	(___altoft@c+2)& (0+255),f,b
  5950  002574  2384               	addwfc	(___altoft@c+3)& (0+255),f,b
  5951                           
  5952                           ; BSR set to: 0
  5953  002576  0E01               	movlw	1
  5954  002578  0100               	movlb	0	; () banked
  5955  00257A  6F8A               	movwf	___altoft@sign& (0+255),b
  5956                           
  5957                           ; BSR set to: 0
  5958  00257C  D008               	goto	l4643
  5959  00257E                     l4641:
  5960                           
  5961                           ; BSR set to: 0
  5962  00257E  0100               	movlb	0	; () banked
  5963  002580  90D8               	bcf	status,0,c
  5964  002582  3384               	rrcf	(___altoft@c+3)& (0+255),f,b
  5965  002584  3383               	rrcf	(___altoft@c+2)& (0+255),f,b
  5966  002586  3382               	rrcf	(___altoft@c+1)& (0+255),f,b
  5967  002588  3381               	rrcf	___altoft@c& (0+255),f,b
  5968  00258A  0100               	movlb	0	; () banked
  5969  00258C  2B89               	incf	___altoft@exp& (0+255),f,b
  5970  00258E                     l4643:
  5971                           
  5972                           ; BSR set to: 0
  5973  00258E  0E00               	movlw	0
  5974  002590  0100               	movlb	0	; () banked
  5975  002592  1581               	andwf	___altoft@c& (0+255),w,b
  5976  002594  0100               	movlb	0	; () banked
  5977  002596  6F85               	movwf	??___altoft& (0+255),b
  5978  002598  0E00               	movlw	0
  5979  00259A  0100               	movlb	0	; () banked
  5980  00259C  1582               	andwf	(___altoft@c+1)& (0+255),w,b
  5981  00259E  0100               	movlb	0	; () banked
  5982  0025A0  6F86               	movwf	(??___altoft+1)& (0+255),b
  5983  0025A2  0E00               	movlw	0
  5984  0025A4  0100               	movlb	0	; () banked
  5985  0025A6  1583               	andwf	(___altoft@c+2)& (0+255),w,b
  5986  0025A8  0100               	movlb	0	; () banked
  5987  0025AA  6F87               	movwf	(??___altoft+2)& (0+255),b
  5988  0025AC  0EFF               	movlw	255
  5989  0025AE  0100               	movlb	0	; () banked
  5990  0025B0  1584               	andwf	(___altoft@c+3)& (0+255),w,b
  5991  0025B2  0100               	movlb	0	; () banked
  5992  0025B4  6F88               	movwf	(??___altoft+3)& (0+255),b
  5993  0025B6  0100               	movlb	0	; () banked
  5994  0025B8  5185               	movf	??___altoft& (0+255),w,b
  5995  0025BA  0100               	movlb	0	; () banked
  5996  0025BC  1186               	iorwf	(??___altoft+1)& (0+255),w,b
  5997  0025BE  0100               	movlb	0	; () banked
  5998  0025C0  1187               	iorwf	(??___altoft+2)& (0+255),w,b
  5999  0025C2  0100               	movlb	0	; () banked
  6000  0025C4  1188               	iorwf	(??___altoft+3)& (0+255),w,b
  6001  0025C6  A4D8               	btfss	status,2,c
  6002  0025C8  D7DA               	goto	l4641
  6003                           
  6004                           ; BSR set to: 0
  6005                           
  6006                           ; BSR set to: 0
  6007  0025CA  C081  F02B         	movff	___altoft@c,___ftpack@arg
  6008  0025CE  C082  F02C         	movff	___altoft@c+1,___ftpack@arg+1
  6009  0025D2  C083  F02D         	movff	___altoft@c+2,___ftpack@arg+2
  6010  0025D6  C089  F02E         	movff	___altoft@exp,___ftpack@exp
  6011  0025DA  C08A  F02F         	movff	___altoft@sign,___ftpack@sign
  6012  0025DE  ECFB  F011         	call	___ftpack	;wreg free
  6013  0025E2  C02B  F081         	movff	?___ftpack,?___altoft
  6014  0025E6  C02C  F082         	movff	?___ftpack+1,?___altoft+1
  6015  0025EA  C02D  F083         	movff	?___ftpack+2,?___altoft+2
  6016  0025EE  0012               	return	
  6017  0025F0                     __end_of___altoft:
  6018                           	opt stack 0
  6019                           tblptru	equ	0xFF8
  6020                           tblptrh	equ	0xFF7
  6021                           tblptrl	equ	0xFF6
  6022                           tablat	equ	0xFF5
  6023                           prodh	equ	0xFF4
  6024                           prodl	equ	0xFF3
  6025                           intcon	equ	0xFF2
  6026                           postinc0	equ	0xFEE
  6027                           wreg	equ	0xFE8
  6028                           postdec1	equ	0xFE5
  6029                           fsr1l	equ	0xFE1
  6030                           indf2	equ	0xFDF
  6031                           postinc2	equ	0xFDE
  6032                           postdec2	equ	0xFDD
  6033                           fsr2h	equ	0xFDA
  6034                           fsr2l	equ	0xFD9
  6035                           status	equ	0xFD8
  6036                           
  6037 ;; *************** function _eval_poly *****************
  6038 ;; Defined at:
  6039 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/evalpoly.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  x               3   33[BANK0 ] float 
  6042 ;;  d               2   36[BANK0 ] PTR const 
  6043 ;;		 -> log@coeff(27), exp@coeff(30), 
  6044 ;;  n               2   38[BANK0 ] int 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  res             3   42[BANK0 ] int 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  3   33[BANK0 ] int 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6056 ;;      Params:         0       7       0       0       0       0       0       0       0
  6057 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6058 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6059 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6060 ;;Total ram usage:       12 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:   12
  6063 ;; This function calls:
  6064 ;;		___ftadd
  6065 ;;		___ftmul
  6066 ;;		___wmul
  6067 ;; This function is called by:
  6068 ;;		_exp
  6069 ;;		_log
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text28
  6074  001B70                     __ptext28:
  6075                           	opt stack 0
  6076  001B70                     _eval_poly:
  6077                           	opt stack 15
  6078                           
  6079                           ;incstack = 0
  6080  001B70  C086  F02B         	movff	eval_poly@n,___wmul@multiplier
  6081  001B74  C087  F02C         	movff	eval_poly@n+1,___wmul@multiplier+1
  6082  001B78  0E00               	movlw	0
  6083  001B7A  6E2E               	movwf	___wmul@multiplicand+1,c
  6084  001B7C  0E03               	movlw	3
  6085  001B7E  6E2D               	movwf	___wmul@multiplicand,c
  6086  001B80  ECE8  F018         	call	___wmul	;wreg free
  6087  001B84  C084  F088         	movff	eval_poly@d,??_eval_poly
  6088  001B88  C085  F089         	movff	eval_poly@d+1,??_eval_poly+1
  6089  001B8C  502B               	movf	?___wmul,w,c
  6090  001B8E  0100               	movlb	0	; () banked
  6091  001B90  2788               	addwf	??_eval_poly& (0+255),f,b
  6092  001B92  502C               	movf	?___wmul+1,w,c
  6093  001B94  0100               	movlb	0	; () banked
  6094  001B96  2389               	addwfc	(??_eval_poly+1)& (0+255),f,b
  6095  001B98  C088  FFF6         	movff	??_eval_poly,tblptrl
  6096  001B9C  C089  FFF7         	movff	??_eval_poly+1,tblptrh
  6097  001BA0                     	if	0	;tblptru may be non-zero
  6098  001BA0                     	endif
  6099  001BA0                     	if	0	;tblptru may be non-zero
  6100  001BA0                     	endif
  6101  001BA0  0009               	tblrd		*+
  6102  001BA2  CFF5 F08A          	movff	tablat,eval_poly@res
  6103  001BA6  0009               	tblrd		*+
  6104  001BA8  CFF5 F08B          	movff	tablat,eval_poly@res+1
  6105  001BAC  000A               	tblrd		*-
  6106  001BAE  CFF5 F08C          	movff	tablat,eval_poly@res+2
  6107  001BB2  D041               	goto	l5081
  6108  001BB4                     l5079:
  6109                           
  6110                           ; BSR set to: 0
  6111  001BB4  C08A  F066         	movff	eval_poly@res,___ftmul@f2
  6112  001BB8  C08B  F067         	movff	eval_poly@res+1,___ftmul@f2+1
  6113  001BBC  C08C  F068         	movff	eval_poly@res+2,___ftmul@f2+2
  6114  001BC0  C081  F063         	movff	eval_poly@x,___ftmul@f1
  6115  001BC4  C082  F064         	movff	eval_poly@x+1,___ftmul@f1+1
  6116  001BC8  C083  F065         	movff	eval_poly@x+2,___ftmul@f1+2
  6117  001BCC  EC37  F006         	call	___ftmul	;wreg free
  6118  001BD0  C063  F075         	movff	?___ftmul,___ftadd@f1
  6119  001BD4  C064  F076         	movff	?___ftmul+1,___ftadd@f1+1
  6120  001BD8  C065  F077         	movff	?___ftmul+2,___ftadd@f1+2
  6121  001BDC  0E00               	movlw	0
  6122  001BDE  6E2E               	movwf	___wmul@multiplicand+1,c
  6123  001BE0  0E03               	movlw	3
  6124  001BE2  6E2D               	movwf	___wmul@multiplicand,c
  6125  001BE4  0100               	movlb	0	; () banked
  6126  001BE6  0786               	decf	eval_poly@n& (0+255),f,b
  6127  001BE8  A0D8               	btfss	status,0,c
  6128  001BEA  0787               	decf	(eval_poly@n+1)& (0+255),f,b
  6129  001BEC  C086  F02B         	movff	eval_poly@n,___wmul@multiplier
  6130  001BF0  C087  F02C         	movff	eval_poly@n+1,___wmul@multiplier+1
  6131  001BF4  ECE8  F018         	call	___wmul	;wreg free
  6132  001BF8  C084  F088         	movff	eval_poly@d,??_eval_poly
  6133  001BFC  C085  F089         	movff	eval_poly@d+1,??_eval_poly+1
  6134  001C00  502B               	movf	?___wmul,w,c
  6135  001C02  0100               	movlb	0	; () banked
  6136  001C04  2788               	addwf	??_eval_poly& (0+255),f,b
  6137  001C06  502C               	movf	?___wmul+1,w,c
  6138  001C08  0100               	movlb	0	; () banked
  6139  001C0A  2389               	addwfc	(??_eval_poly+1)& (0+255),f,b
  6140  001C0C  C088  FFF6         	movff	??_eval_poly,tblptrl
  6141  001C10  C089  FFF7         	movff	??_eval_poly+1,tblptrh
  6142  001C14                     	if	0	;tblptru may be non-zero
  6143  001C14                     	endif
  6144  001C14                     	if	0	;tblptru may be non-zero
  6145  001C14                     	endif
  6146  001C14  0009               	tblrd		*+
  6147  001C16  CFF5 F078          	movff	tablat,___ftadd@f2
  6148  001C1A  0009               	tblrd		*+
  6149  001C1C  CFF5 F079          	movff	tablat,___ftadd@f2+1
  6150  001C20  000A               	tblrd		*-
  6151  001C22  CFF5 F07A          	movff	tablat,___ftadd@f2+2
  6152  001C26  EC4B  F001         	call	___ftadd	;wreg free
  6153  001C2A  C075  F08A         	movff	?___ftadd,eval_poly@res
  6154  001C2E  C076  F08B         	movff	?___ftadd+1,eval_poly@res+1
  6155  001C32  C077  F08C         	movff	?___ftadd+2,eval_poly@res+2
  6156  001C36                     l5081:
  6157  001C36  0100               	movlb	0	; () banked
  6158  001C38  5186               	movf	eval_poly@n& (0+255),w,b
  6159  001C3A  0100               	movlb	0	; () banked
  6160  001C3C  1187               	iorwf	(eval_poly@n+1)& (0+255),w,b
  6161  001C3E  A4D8               	btfss	status,2,c
  6162  001C40  D7B9               	goto	l5079
  6163                           
  6164                           ; BSR set to: 0
  6165  001C42  C08A  F081         	movff	eval_poly@res,?_eval_poly
  6166  001C46  C08B  F082         	movff	eval_poly@res+1,?_eval_poly+1
  6167  001C4A  C08C  F083         	movff	eval_poly@res+2,?_eval_poly+2
  6168                           
  6169                           ; BSR set to: 0
  6170  001C4E  0012               	return		;funcret
  6171  001C50                     __end_of_eval_poly:
  6172                           	opt stack 0
  6173                           tblptru	equ	0xFF8
  6174                           tblptrh	equ	0xFF7
  6175                           tblptrl	equ	0xFF6
  6176                           tablat	equ	0xFF5
  6177                           prodh	equ	0xFF4
  6178                           prodl	equ	0xFF3
  6179                           intcon	equ	0xFF2
  6180                           postinc0	equ	0xFEE
  6181                           wreg	equ	0xFE8
  6182                           postdec1	equ	0xFE5
  6183                           fsr1l	equ	0xFE1
  6184                           indf2	equ	0xFDF
  6185                           postinc2	equ	0xFDE
  6186                           postdec2	equ	0xFDD
  6187                           fsr2h	equ	0xFDA
  6188                           fsr2l	equ	0xFD9
  6189                           status	equ	0xFD8
  6190                           
  6191 ;; *************** function ___wmul *****************
  6192 ;; Defined at:
  6193 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul16.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  multiplier      2   42[COMRAM] unsigned int 
  6196 ;;  multiplicand    2   44[COMRAM] unsigned int 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  product         2   46[COMRAM] unsigned int 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  2   42[COMRAM] unsigned int 
  6201 ;; Registers used:
  6202 ;;		wreg, status,2, status,0, prodl, prodh
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6208 ;;      Params:         4       0       0       0       0       0       0       0       0
  6209 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6211 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6212 ;;Total ram usage:        6 bytes
  6213 ;; Hardware stack levels used:    1
  6214 ;; Hardware stack levels required when called:   10
  6215 ;; This function calls:
  6216 ;;		Nothing
  6217 ;; This function is called by:
  6218 ;;		_eval_poly
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           	psect	text29
  6223  0031D0                     __ptext29:
  6224                           	opt stack 0
  6225  0031D0                     ___wmul:
  6226                           	opt stack 16
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;incstack = 0
  6230  0031D0  502B               	movf	___wmul@multiplier,w,c
  6231  0031D2  022D               	mulwf	___wmul@multiplicand,c
  6232  0031D4  CFF3 F02F          	movff	prodl,___wmul@product
  6233  0031D8  CFF4 F030          	movff	prodh,___wmul@product+1
  6234  0031DC  502B               	movf	___wmul@multiplier,w,c
  6235  0031DE  022E               	mulwf	___wmul@multiplicand+1,c
  6236  0031E0  50F3               	movf	prodl,w,c
  6237  0031E2  2630               	addwf	___wmul@product+1,f,c
  6238  0031E4  502C               	movf	___wmul@multiplier+1,w,c
  6239  0031E6  022D               	mulwf	___wmul@multiplicand,c
  6240  0031E8  50F3               	movf	prodl,w,c
  6241  0031EA  2630               	addwf	___wmul@product+1,f,c
  6242  0031EC  C02F  F02B         	movff	___wmul@product,?___wmul
  6243  0031F0  C030  F02C         	movff	___wmul@product+1,?___wmul+1
  6244  0031F4  0012               	return	
  6245  0031F6                     __end_of___wmul:
  6246                           	opt stack 0
  6247                           tblptru	equ	0xFF8
  6248                           tblptrh	equ	0xFF7
  6249                           tblptrl	equ	0xFF6
  6250                           tablat	equ	0xFF5
  6251                           prodh	equ	0xFF4
  6252                           prodl	equ	0xFF3
  6253                           intcon	equ	0xFF2
  6254                           postinc0	equ	0xFEE
  6255                           wreg	equ	0xFE8
  6256                           postdec1	equ	0xFE5
  6257                           fsr1l	equ	0xFE1
  6258                           indf2	equ	0xFDF
  6259                           postinc2	equ	0xFDE
  6260                           postdec2	equ	0xFDD
  6261                           fsr2h	equ	0xFDA
  6262                           fsr2l	equ	0xFD9
  6263                           status	equ	0xFD8
  6264                           
  6265 ;; *************** function ___ftmul *****************
  6266 ;; Defined at:
  6267 ;;		line 62 in file "/Applications/microchip/xc8/v1.35/sources/common/ftmul.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  f1              3    3[BANK0 ] float 
  6270 ;;  f2              3    6[BANK0 ] float 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  f3_as_produc    3   13[BANK0 ] unsigned um
  6273 ;;  sign            1   17[BANK0 ] unsigned char 
  6274 ;;  cntr            1   16[BANK0 ] unsigned char 
  6275 ;;  exp             1   12[BANK0 ] unsigned char 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  3    3[BANK0 ] float 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6285 ;;      Params:         0       6       0       0       0       0       0       0       0
  6286 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6287 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6288 ;;      Totals:         0      15       0       0       0       0       0       0       0
  6289 ;;Total ram usage:       15 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:   11
  6292 ;; This function calls:
  6293 ;;		___ftpack
  6294 ;; This function is called by:
  6295 ;;		_main
  6296 ;;		_LCDdouble
  6297 ;;		_pow
  6298 ;;		_exp
  6299 ;;		_log
  6300 ;;		_eval_poly
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           	psect	text30
  6305  000C6E                     __ptext30:
  6306                           	opt stack 0
  6307  000C6E                     ___ftmul:
  6308                           	opt stack 19
  6309                           
  6310                           ;incstack = 0
  6311  000C6E  C065  F069         	movff	___ftmul@f1+2,??___ftmul
  6312  000C72  0100               	movlb	0	; () banked
  6313  000C74  6B6A               	clrf	(??___ftmul+1)& (0+255),b
  6314  000C76  6B6B               	clrf	(??___ftmul+2)& (0+255),b
  6315  000C78  0100               	movlb	0	; () banked
  6316  000C7A  3564               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6317  000C7C  0100               	movlb	0	; () banked
  6318  000C7E  3769               	rlcf	??___ftmul& (0+255),f,b
  6319  000C80  E301               	bnc	u4141
  6320  000C82  816A               	bsf	(??___ftmul+1)& (0+255),0,b
  6321  000C84                     u4141:
  6322  000C84  0100               	movlb	0	; () banked
  6323  000C86  5169               	movf	??___ftmul& (0+255),w,b
  6324  000C88  0100               	movlb	0	; () banked
  6325  000C8A  6F6C               	movwf	___ftmul@exp& (0+255),b
  6326  000C8C  0100               	movlb	0	; () banked
  6327  000C8E  516C               	movf	___ftmul@exp& (0+255),w,b
  6328  000C90  A4D8               	btfss	status,2,c
  6329  000C92  D00A               	goto	l4725
  6330                           
  6331                           ; BSR set to: 0
  6332  000C94  0E00               	movlw	0
  6333  000C96  0100               	movlb	0	; () banked
  6334  000C98  6F63               	movwf	?___ftmul& (0+255),b
  6335  000C9A  0E00               	movlw	0
  6336  000C9C  0100               	movlb	0	; () banked
  6337  000C9E  6F64               	movwf	(?___ftmul+1)& (0+255),b
  6338  000CA0  0E00               	movlw	0
  6339  000CA2  0100               	movlb	0	; () banked
  6340  000CA4  6F65               	movwf	(?___ftmul+2)& (0+255),b
  6341                           
  6342                           ; BSR set to: 0
  6343  000CA6  0012               	return	
  6344  000CA8                     l4725:
  6345                           
  6346                           ; BSR set to: 0
  6347  000CA8  C068  F069         	movff	___ftmul@f2+2,??___ftmul
  6348  000CAC  0100               	movlb	0	; () banked
  6349  000CAE  6B6A               	clrf	(??___ftmul+1)& (0+255),b
  6350  000CB0  6B6B               	clrf	(??___ftmul+2)& (0+255),b
  6351  000CB2  0100               	movlb	0	; () banked
  6352  000CB4  3567               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6353  000CB6  0100               	movlb	0	; () banked
  6354  000CB8  3769               	rlcf	??___ftmul& (0+255),f,b
  6355  000CBA  E301               	bnc	u4161
  6356  000CBC  816A               	bsf	(??___ftmul+1)& (0+255),0,b
  6357  000CBE                     u4161:
  6358  000CBE  0100               	movlb	0	; () banked
  6359  000CC0  5169               	movf	??___ftmul& (0+255),w,b
  6360  000CC2  0100               	movlb	0	; () banked
  6361  000CC4  6F71               	movwf	___ftmul@sign& (0+255),b
  6362  000CC6  0100               	movlb	0	; () banked
  6363  000CC8  5171               	movf	___ftmul@sign& (0+255),w,b
  6364  000CCA  A4D8               	btfss	status,2,c
  6365  000CCC  D00A               	goto	l4731
  6366                           
  6367                           ; BSR set to: 0
  6368  000CCE  0E00               	movlw	0
  6369  000CD0  0100               	movlb	0	; () banked
  6370  000CD2  6F63               	movwf	?___ftmul& (0+255),b
  6371  000CD4  0E00               	movlw	0
  6372  000CD6  0100               	movlb	0	; () banked
  6373  000CD8  6F64               	movwf	(?___ftmul+1)& (0+255),b
  6374  000CDA  0E00               	movlw	0
  6375  000CDC  0100               	movlb	0	; () banked
  6376  000CDE  6F65               	movwf	(?___ftmul+2)& (0+255),b
  6377                           
  6378                           ; BSR set to: 0
  6379  000CE0  0012               	return	
  6380  000CE2                     l4731:
  6381                           
  6382                           ; BSR set to: 0
  6383  000CE2  0100               	movlb	0	; () banked
  6384  000CE4  5171               	movf	___ftmul@sign& (0+255),w,b
  6385  000CE6  0F7B               	addlw	123
  6386  000CE8  0100               	movlb	0	; () banked
  6387  000CEA  276C               	addwf	___ftmul@exp& (0+255),f,b
  6388                           
  6389                           ; BSR set to: 0
  6390  000CEC  C065  F071         	movff	___ftmul@f1+2,___ftmul@sign
  6391  000CF0  0100               	movlb	0	; () banked
  6392  000CF2  5168               	movf	(___ftmul@f2+2)& (0+255),w,b
  6393  000CF4  0100               	movlb	0	; () banked
  6394  000CF6  1B71               	xorwf	___ftmul@sign& (0+255),f,b
  6395  000CF8  0E80               	movlw	128
  6396  000CFA  0100               	movlb	0	; () banked
  6397  000CFC  1771               	andwf	___ftmul@sign& (0+255),f,b
  6398                           
  6399                           ; BSR set to: 0
  6400  000CFE  0100               	movlb	0	; () banked
  6401  000D00  8F64               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6402                           
  6403                           ; BSR set to: 0
  6404  000D02  0100               	movlb	0	; () banked
  6405  000D04  8F67               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6406                           
  6407                           ; BSR set to: 0
  6408  000D06  0EFF               	movlw	255
  6409  000D08  0100               	movlb	0	; () banked
  6410  000D0A  1766               	andwf	___ftmul@f2& (0+255),f,b
  6411  000D0C  0EFF               	movlw	255
  6412  000D0E  0100               	movlb	0	; () banked
  6413  000D10  1767               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6414  000D12  0E00               	movlw	0
  6415  000D14  0100               	movlb	0	; () banked
  6416  000D16  1768               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6417                           
  6418                           ; BSR set to: 0
  6419  000D18  0E00               	movlw	0
  6420  000D1A  0100               	movlb	0	; () banked
  6421  000D1C  6F6D               	movwf	___ftmul@f3_as_product& (0+255),b
  6422  000D1E  0E00               	movlw	0
  6423  000D20  0100               	movlb	0	; () banked
  6424  000D22  6F6E               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6425  000D24  0E00               	movlw	0
  6426  000D26  0100               	movlb	0	; () banked
  6427  000D28  6F6F               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6428                           
  6429                           ; BSR set to: 0
  6430  000D2A  0E07               	movlw	7
  6431  000D2C  0100               	movlb	0	; () banked
  6432  000D2E  6F70               	movwf	___ftmul@cntr& (0+255),b
  6433  000D30                     l4745:
  6434                           
  6435                           ; BSR set to: 0
  6436  000D30  0100               	movlb	0	; () banked
  6437  000D32  A163               	btfss	___ftmul@f1& (0+255),0,b
  6438  000D34  D00C               	goto	l4749
  6439                           
  6440                           ; BSR set to: 0
  6441  000D36  0100               	movlb	0	; () banked
  6442  000D38  5166               	movf	___ftmul@f2& (0+255),w,b
  6443  000D3A  0100               	movlb	0	; () banked
  6444  000D3C  276D               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6445  000D3E  0100               	movlb	0	; () banked
  6446  000D40  5167               	movf	(___ftmul@f2+1)& (0+255),w,b
  6447  000D42  0100               	movlb	0	; () banked
  6448  000D44  236E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6449  000D46  0100               	movlb	0	; () banked
  6450  000D48  5168               	movf	(___ftmul@f2+2)& (0+255),w,b
  6451  000D4A  0100               	movlb	0	; () banked
  6452  000D4C  236F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6453  000D4E                     l4749:
  6454                           
  6455                           ; BSR set to: 0
  6456  000D4E  0100               	movlb	0	; () banked
  6457  000D50  90D8               	bcf	status,0,c
  6458  000D52  3365               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6459  000D54  3364               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6460  000D56  3363               	rrcf	___ftmul@f1& (0+255),f,b
  6461  000D58  0100               	movlb	0	; () banked
  6462  000D5A  90D8               	bcf	status,0,c
  6463  000D5C  3766               	rlcf	___ftmul@f2& (0+255),f,b
  6464  000D5E  3767               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6465  000D60  3768               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6466                           
  6467                           ; BSR set to: 0
  6468  000D62  0100               	movlb	0	; () banked
  6469  000D64  2F70               	decfsz	___ftmul@cntr& (0+255),f,b
  6470  000D66  D7E4               	goto	l4745
  6471                           
  6472                           ; BSR set to: 0
  6473                           
  6474                           ; BSR set to: 0
  6475  000D68  0E09               	movlw	9
  6476  000D6A  0100               	movlb	0	; () banked
  6477  000D6C  6F70               	movwf	___ftmul@cntr& (0+255),b
  6478  000D6E                     l4755:
  6479                           
  6480                           ; BSR set to: 0
  6481  000D6E  0100               	movlb	0	; () banked
  6482  000D70  A163               	btfss	___ftmul@f1& (0+255),0,b
  6483  000D72  D00C               	goto	l4759
  6484                           
  6485                           ; BSR set to: 0
  6486  000D74  0100               	movlb	0	; () banked
  6487  000D76  5166               	movf	___ftmul@f2& (0+255),w,b
  6488  000D78  0100               	movlb	0	; () banked
  6489  000D7A  276D               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6490  000D7C  0100               	movlb	0	; () banked
  6491  000D7E  5167               	movf	(___ftmul@f2+1)& (0+255),w,b
  6492  000D80  0100               	movlb	0	; () banked
  6493  000D82  236E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6494  000D84  0100               	movlb	0	; () banked
  6495  000D86  5168               	movf	(___ftmul@f2+2)& (0+255),w,b
  6496  000D88  0100               	movlb	0	; () banked
  6497  000D8A  236F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6498  000D8C                     l4759:
  6499                           
  6500                           ; BSR set to: 0
  6501  000D8C  0100               	movlb	0	; () banked
  6502  000D8E  90D8               	bcf	status,0,c
  6503  000D90  3365               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6504  000D92  3364               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6505  000D94  3363               	rrcf	___ftmul@f1& (0+255),f,b
  6506  000D96  0100               	movlb	0	; () banked
  6507  000D98  90D8               	bcf	status,0,c
  6508  000D9A  336F               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6509  000D9C  336E               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6510  000D9E  336D               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6511                           
  6512                           ; BSR set to: 0
  6513  000DA0  0100               	movlb	0	; () banked
  6514  000DA2  2F70               	decfsz	___ftmul@cntr& (0+255),f,b
  6515  000DA4  D7E4               	goto	l4755
  6516                           
  6517                           ; BSR set to: 0
  6518                           
  6519                           ; BSR set to: 0
  6520  000DA6  C06D  F02B         	movff	___ftmul@f3_as_product,___ftpack@arg
  6521  000DAA  C06E  F02C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6522  000DAE  C06F  F02D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6523  000DB2  C06C  F02E         	movff	___ftmul@exp,___ftpack@exp
  6524  000DB6  C071  F02F         	movff	___ftmul@sign,___ftpack@sign
  6525  000DBA  ECFB  F011         	call	___ftpack	;wreg free
  6526  000DBE  C02B  F063         	movff	?___ftpack,?___ftmul
  6527  000DC2  C02C  F064         	movff	?___ftpack+1,?___ftmul+1
  6528  000DC6  C02D  F065         	movff	?___ftpack+2,?___ftmul+2
  6529  000DCA  0012               	return	
  6530  000DCC                     __end_of___ftmul:
  6531                           	opt stack 0
  6532                           tblptru	equ	0xFF8
  6533                           tblptrh	equ	0xFF7
  6534                           tblptrl	equ	0xFF6
  6535                           tablat	equ	0xFF5
  6536                           prodh	equ	0xFF4
  6537                           prodl	equ	0xFF3
  6538                           intcon	equ	0xFF2
  6539                           postinc0	equ	0xFEE
  6540                           wreg	equ	0xFE8
  6541                           postdec1	equ	0xFE5
  6542                           fsr1l	equ	0xFE1
  6543                           indf2	equ	0xFDF
  6544                           postinc2	equ	0xFDE
  6545                           postdec2	equ	0xFDD
  6546                           fsr2h	equ	0xFDA
  6547                           fsr2l	equ	0xFD9
  6548                           status	equ	0xFD8
  6549                           
  6550 ;; *************** function ___ftsub *****************
  6551 ;; Defined at:
  6552 ;;		line 20 in file "/Applications/microchip/xc8/v1.35/sources/common/ftsub.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  f1              3   33[BANK0 ] float 
  6555 ;;  f2              3   36[BANK0 ] float 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  3   33[BANK0 ] float 
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6567 ;;      Params:         0       6       0       0       0       0       0       0       0
  6568 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6570 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6571 ;;Total ram usage:        6 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:   12
  6574 ;; This function calls:
  6575 ;;		___ftadd
  6576 ;; This function is called by:
  6577 ;;		_exp
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text31
  6582  002D9C                     __ptext31:
  6583                           	opt stack 0
  6584  002D9C                     ___ftsub:
  6585                           	opt stack 15
  6586                           
  6587                           ;incstack = 0
  6588  002D9C  0100               	movlb	0	; () banked
  6589  002D9E  5184               	movf	___ftsub@f2& (0+255),w,b
  6590  002DA0  0100               	movlb	0	; () banked
  6591  002DA2  1185               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  6592  002DA4  0100               	movlb	0	; () banked
  6593  002DA6  1186               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  6594  002DA8  B4D8               	btfsc	status,2,c
  6595  002DAA  D009               	goto	l5033
  6596                           
  6597                           ; BSR set to: 0
  6598  002DAC  0E00               	movlw	0
  6599  002DAE  0100               	movlb	0	; () banked
  6600  002DB0  1B84               	xorwf	___ftsub@f2& (0+255),f,b
  6601  002DB2  0E00               	movlw	0
  6602  002DB4  0100               	movlb	0	; () banked
  6603  002DB6  1B85               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  6604  002DB8  0E80               	movlw	128
  6605  002DBA  0100               	movlb	0	; () banked
  6606  002DBC  1B86               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  6607  002DBE                     l5033:
  6608                           
  6609                           ; BSR set to: 0
  6610  002DBE  C081  F075         	movff	___ftsub@f1,___ftadd@f1
  6611  002DC2  C082  F076         	movff	___ftsub@f1+1,___ftadd@f1+1
  6612  002DC6  C083  F077         	movff	___ftsub@f1+2,___ftadd@f1+2
  6613  002DCA  C084  F078         	movff	___ftsub@f2,___ftadd@f2
  6614  002DCE  C085  F079         	movff	___ftsub@f2+1,___ftadd@f2+1
  6615  002DD2  C086  F07A         	movff	___ftsub@f2+2,___ftadd@f2+2
  6616  002DD6  EC4B  F001         	call	___ftadd	;wreg free
  6617  002DDA  C075  F081         	movff	?___ftadd,?___ftsub
  6618  002DDE  C076  F082         	movff	?___ftadd+1,?___ftsub+1
  6619  002DE2  C077  F083         	movff	?___ftadd+2,?___ftsub+2
  6620  002DE6  0012               	return	
  6621  002DE8                     __end_of___ftsub:
  6622                           	opt stack 0
  6623                           tblptru	equ	0xFF8
  6624                           tblptrh	equ	0xFF7
  6625                           tblptrl	equ	0xFF6
  6626                           tablat	equ	0xFF5
  6627                           prodh	equ	0xFF4
  6628                           prodl	equ	0xFF3
  6629                           intcon	equ	0xFF2
  6630                           postinc0	equ	0xFEE
  6631                           wreg	equ	0xFE8
  6632                           postdec1	equ	0xFE5
  6633                           fsr1l	equ	0xFE1
  6634                           indf2	equ	0xFDF
  6635                           postinc2	equ	0xFDE
  6636                           postdec2	equ	0xFDD
  6637                           fsr2h	equ	0xFDA
  6638                           fsr2l	equ	0xFD9
  6639                           status	equ	0xFD8
  6640                           
  6641 ;; *************** function ___ftadd *****************
  6642 ;; Defined at:
  6643 ;;		line 86 in file "/Applications/microchip/xc8/v1.35/sources/common/ftadd.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  f1              3   21[BANK0 ] float 
  6646 ;;  f2              3   24[BANK0 ] float 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;  exp1            1   32[BANK0 ] unsigned char 
  6649 ;;  exp2            1   31[BANK0 ] unsigned char 
  6650 ;;  sign            1   30[BANK0 ] unsigned char 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  3   21[BANK0 ] float 
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6660 ;;      Params:         0       6       0       0       0       0       0       0       0
  6661 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6662 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6663 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6664 ;;Total ram usage:       12 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:   11
  6667 ;; This function calls:
  6668 ;;		___ftpack
  6669 ;; This function is called by:
  6670 ;;		_LCDdouble
  6671 ;;		___ftsub
  6672 ;;		_floor
  6673 ;;		_log
  6674 ;;		_eval_poly
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text32
  6679  000296                     __ptext32:
  6680                           	opt stack 0
  6681  000296                     ___ftadd:
  6682                           	opt stack 15
  6683                           
  6684                           ;incstack = 0
  6685  000296  C077  F07B         	movff	___ftadd@f1+2,??___ftadd
  6686  00029A  0100               	movlb	0	; () banked
  6687  00029C  6B7C               	clrf	(??___ftadd+1)& (0+255),b
  6688  00029E  6B7D               	clrf	(??___ftadd+2)& (0+255),b
  6689  0002A0  0100               	movlb	0	; () banked
  6690  0002A2  3576               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  6691  0002A4  0100               	movlb	0	; () banked
  6692  0002A6  377B               	rlcf	??___ftadd& (0+255),f,b
  6693  0002A8  E301               	bnc	u3931
  6694  0002AA  817C               	bsf	(??___ftadd+1)& (0+255),0,b
  6695  0002AC                     u3931:
  6696  0002AC  0100               	movlb	0	; () banked
  6697  0002AE  517B               	movf	??___ftadd& (0+255),w,b
  6698  0002B0  0100               	movlb	0	; () banked
  6699  0002B2  6F80               	movwf	___ftadd@exp1& (0+255),b
  6700  0002B4  C07A  F07B         	movff	___ftadd@f2+2,??___ftadd
  6701  0002B8  0100               	movlb	0	; () banked
  6702  0002BA  6B7C               	clrf	(??___ftadd+1)& (0+255),b
  6703  0002BC  6B7D               	clrf	(??___ftadd+2)& (0+255),b
  6704  0002BE  0100               	movlb	0	; () banked
  6705  0002C0  3579               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  6706  0002C2  0100               	movlb	0	; () banked
  6707  0002C4  377B               	rlcf	??___ftadd& (0+255),f,b
  6708  0002C6  E301               	bnc	u3941
  6709  0002C8  817C               	bsf	(??___ftadd+1)& (0+255),0,b
  6710  0002CA                     u3941:
  6711  0002CA  0100               	movlb	0	; () banked
  6712  0002CC  517B               	movf	??___ftadd& (0+255),w,b
  6713  0002CE  0100               	movlb	0	; () banked
  6714  0002D0  6F7F               	movwf	___ftadd@exp2& (0+255),b
  6715                           
  6716                           ; BSR set to: 0
  6717  0002D2  0100               	movlb	0	; () banked
  6718  0002D4  5180               	movf	___ftadd@exp1& (0+255),w,b
  6719  0002D6  0100               	movlb	0	; () banked
  6720  0002D8  B4D8               	btfsc	status,2,c
  6721  0002DA  D011               	goto	l1302
  6722                           
  6723                           ; BSR set to: 0
  6724  0002DC  0100               	movlb	0	; () banked
  6725  0002DE  517F               	movf	___ftadd@exp2& (0+255),w,b
  6726  0002E0  0100               	movlb	0	; () banked
  6727  0002E2  5D80               	subwf	___ftadd@exp1& (0+255),w,b
  6728  0002E4  B0D8               	btfsc	status,0,c
  6729  0002E6  D012               	goto	l4657
  6730                           
  6731                           ; BSR set to: 0
  6732  0002E8  0100               	movlb	0	; () banked
  6733  0002EA  5180               	movf	___ftadd@exp1& (0+255),w,b
  6734  0002EC  0800               	sublw	0
  6735  0002EE  0100               	movlb	0	; () banked
  6736  0002F0  257F               	addwf	___ftadd@exp2& (0+255),w,b
  6737  0002F2  0100               	movlb	0	; () banked
  6738  0002F4  6F7B               	movwf	??___ftadd& (0+255),b
  6739  0002F6  0E18               	movlw	24
  6740  0002F8  0100               	movlb	0	; () banked
  6741  0002FA  657B               	cpfsgt	??___ftadd& (0+255),b
  6742  0002FC  D007               	goto	l4657
  6743  0002FE                     l1302:
  6744                           
  6745                           ; BSR set to: 0
  6746  0002FE  C078  F075         	movff	___ftadd@f2,?___ftadd
  6747  000302  C079  F076         	movff	___ftadd@f2+1,?___ftadd+1
  6748  000306  C07A  F077         	movff	___ftadd@f2+2,?___ftadd+2
  6749  00030A  0012               	return	
  6750  00030C                     l4657:
  6751                           
  6752                           ; BSR set to: 0
  6753  00030C  0100               	movlb	0	; () banked
  6754  00030E  517F               	movf	___ftadd@exp2& (0+255),w,b
  6755  000310  0100               	movlb	0	; () banked
  6756  000312  B4D8               	btfsc	status,2,c
  6757  000314  D011               	goto	l1306
  6758                           
  6759                           ; BSR set to: 0
  6760  000316  0100               	movlb	0	; () banked
  6761  000318  5180               	movf	___ftadd@exp1& (0+255),w,b
  6762  00031A  0100               	movlb	0	; () banked
  6763  00031C  5D7F               	subwf	___ftadd@exp2& (0+255),w,b
  6764  00031E  B0D8               	btfsc	status,0,c
  6765  000320  D012               	goto	l4663
  6766                           
  6767                           ; BSR set to: 0
  6768  000322  0100               	movlb	0	; () banked
  6769  000324  517F               	movf	___ftadd@exp2& (0+255),w,b
  6770  000326  0800               	sublw	0
  6771  000328  0100               	movlb	0	; () banked
  6772  00032A  2580               	addwf	___ftadd@exp1& (0+255),w,b
  6773  00032C  0100               	movlb	0	; () banked
  6774  00032E  6F7B               	movwf	??___ftadd& (0+255),b
  6775  000330  0E18               	movlw	24
  6776  000332  0100               	movlb	0	; () banked
  6777  000334  657B               	cpfsgt	??___ftadd& (0+255),b
  6778  000336  D007               	goto	l4663
  6779  000338                     l1306:
  6780                           
  6781                           ; BSR set to: 0
  6782  000338  C075  F075         	movff	___ftadd@f1,?___ftadd
  6783  00033C  C076  F076         	movff	___ftadd@f1+1,?___ftadd+1
  6784  000340  C077  F077         	movff	___ftadd@f1+2,?___ftadd+2
  6785  000344  0012               	return	
  6786  000346                     l4663:
  6787                           
  6788                           ; BSR set to: 0
  6789  000346  0E06               	movlw	6
  6790  000348  0100               	movlb	0	; () banked
  6791  00034A  6F7E               	movwf	___ftadd@sign& (0+255),b
  6792                           
  6793                           ; BSR set to: 0
  6794  00034C  0100               	movlb	0	; () banked
  6795  00034E  AF77               	btfss	(___ftadd@f1+2)& (0+255),7,b
  6796  000350  D002               	goto	l4669
  6797                           
  6798                           ; BSR set to: 0
  6799  000352  0100               	movlb	0	; () banked
  6800  000354  8F7E               	bsf	___ftadd@sign& (0+255),7,b
  6801  000356                     l4669:
  6802                           
  6803                           ; BSR set to: 0
  6804  000356  0100               	movlb	0	; () banked
  6805  000358  AF7A               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6806  00035A  D002               	goto	l1308
  6807                           
  6808                           ; BSR set to: 0
  6809  00035C  0100               	movlb	0	; () banked
  6810  00035E  8D7E               	bsf	___ftadd@sign& (0+255),6,b
  6811  000360                     l1308:
  6812                           
  6813                           ; BSR set to: 0
  6814  000360  0100               	movlb	0	; () banked
  6815  000362  8F76               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6816                           
  6817                           ; BSR set to: 0
  6818  000364  0EFF               	movlw	255
  6819  000366  0100               	movlb	0	; () banked
  6820  000368  1775               	andwf	___ftadd@f1& (0+255),f,b
  6821  00036A  0EFF               	movlw	255
  6822  00036C  0100               	movlb	0	; () banked
  6823  00036E  1776               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6824  000370  0E00               	movlw	0
  6825  000372  0100               	movlb	0	; () banked
  6826  000374  1777               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6827  000376  0100               	movlb	0	; () banked
  6828  000378  8F79               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6829                           
  6830                           ; BSR set to: 0
  6831  00037A  0EFF               	movlw	255
  6832  00037C  0100               	movlb	0	; () banked
  6833  00037E  1778               	andwf	___ftadd@f2& (0+255),f,b
  6834  000380  0EFF               	movlw	255
  6835  000382  0100               	movlb	0	; () banked
  6836  000384  1779               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6837  000386  0E00               	movlw	0
  6838  000388  0100               	movlb	0	; () banked
  6839  00038A  177A               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6840                           
  6841                           ; BSR set to: 0
  6842  00038C  0100               	movlb	0	; () banked
  6843  00038E  517F               	movf	___ftadd@exp2& (0+255),w,b
  6844  000390  0100               	movlb	0	; () banked
  6845  000392  5D80               	subwf	___ftadd@exp1& (0+255),w,b
  6846  000394  B0D8               	btfsc	status,0,c
  6847  000396  D025               	goto	l4689
  6848  000398                     l4679:
  6849                           
  6850                           ; BSR set to: 0
  6851  000398  0100               	movlb	0	; () banked
  6852  00039A  90D8               	bcf	status,0,c
  6853  00039C  3778               	rlcf	___ftadd@f2& (0+255),f,b
  6854  00039E  3779               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  6855  0003A0  377A               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  6856  0003A2  0100               	movlb	0	; () banked
  6857  0003A4  077F               	decf	___ftadd@exp2& (0+255),f,b
  6858                           
  6859                           ; BSR set to: 0
  6860  0003A6  0100               	movlb	0	; () banked
  6861  0003A8  5180               	movf	___ftadd@exp1& (0+255),w,b
  6862  0003AA  0100               	movlb	0	; () banked
  6863  0003AC  197F               	xorwf	___ftadd@exp2& (0+255),w,b
  6864  0003AE  B4D8               	btfsc	status,2,c
  6865  0003B0  D011               	goto	l4687
  6866                           
  6867                           ; BSR set to: 0
  6868  0003B2  0100               	movlb	0	; () banked
  6869  0003B4  077E               	decf	___ftadd@sign& (0+255),f,b
  6870  0003B6  C07E  F07B         	movff	___ftadd@sign,??___ftadd
  6871  0003BA  0E07               	movlw	7
  6872  0003BC  0100               	movlb	0	; () banked
  6873  0003BE  177B               	andwf	??___ftadd& (0+255),f,b
  6874  0003C0  B4D8               	btfsc	status,2,c
  6875  0003C2  D008               	goto	l4687
  6876  0003C4  D7E9               	goto	l4679
  6877  0003C6                     l4685:
  6878                           
  6879                           ; BSR set to: 0
  6880  0003C6  0100               	movlb	0	; () banked
  6881  0003C8  90D8               	bcf	status,0,c
  6882  0003CA  3377               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  6883  0003CC  3376               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  6884  0003CE  3375               	rrcf	___ftadd@f1& (0+255),f,b
  6885  0003D0  0100               	movlb	0	; () banked
  6886  0003D2  2B80               	incf	___ftadd@exp1& (0+255),f,b
  6887  0003D4                     l4687:
  6888                           
  6889                           ; BSR set to: 0
  6890  0003D4  0100               	movlb	0	; () banked
  6891  0003D6  517F               	movf	___ftadd@exp2& (0+255),w,b
  6892  0003D8  0100               	movlb	0	; () banked
  6893  0003DA  1980               	xorwf	___ftadd@exp1& (0+255),w,b
  6894  0003DC  B4D8               	btfsc	status,2,c
  6895  0003DE  D02B               	goto	l1317
  6896  0003E0  D7F2               	goto	l4685
  6897  0003E2                     l4689:
  6898                           
  6899                           ; BSR set to: 0
  6900  0003E2  0100               	movlb	0	; () banked
  6901  0003E4  5180               	movf	___ftadd@exp1& (0+255),w,b
  6902  0003E6  0100               	movlb	0	; () banked
  6903  0003E8  5D7F               	subwf	___ftadd@exp2& (0+255),w,b
  6904  0003EA  B0D8               	btfsc	status,0,c
  6905  0003EC  D024               	goto	l1317
  6906  0003EE                     l4691:
  6907                           
  6908                           ; BSR set to: 0
  6909  0003EE  0100               	movlb	0	; () banked
  6910  0003F0  90D8               	bcf	status,0,c
  6911  0003F2  3775               	rlcf	___ftadd@f1& (0+255),f,b
  6912  0003F4  3776               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  6913  0003F6  3777               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  6914  0003F8  0100               	movlb	0	; () banked
  6915  0003FA  0780               	decf	___ftadd@exp1& (0+255),f,b
  6916                           
  6917                           ; BSR set to: 0
  6918  0003FC  0100               	movlb	0	; () banked
  6919  0003FE  5180               	movf	___ftadd@exp1& (0+255),w,b
  6920  000400  0100               	movlb	0	; () banked
  6921  000402  197F               	xorwf	___ftadd@exp2& (0+255),w,b
  6922  000404  B4D8               	btfsc	status,2,c
  6923  000406  D011               	goto	l4699
  6924                           
  6925                           ; BSR set to: 0
  6926  000408  0100               	movlb	0	; () banked
  6927  00040A  077E               	decf	___ftadd@sign& (0+255),f,b
  6928  00040C  C07E  F07B         	movff	___ftadd@sign,??___ftadd
  6929  000410  0E07               	movlw	7
  6930  000412  0100               	movlb	0	; () banked
  6931  000414  177B               	andwf	??___ftadd& (0+255),f,b
  6932  000416  B4D8               	btfsc	status,2,c
  6933  000418  D008               	goto	l4699
  6934  00041A  D7E9               	goto	l4691
  6935  00041C                     l4697:
  6936                           
  6937                           ; BSR set to: 0
  6938  00041C  0100               	movlb	0	; () banked
  6939  00041E  90D8               	bcf	status,0,c
  6940  000420  337A               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  6941  000422  3379               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  6942  000424  3378               	rrcf	___ftadd@f2& (0+255),f,b
  6943  000426  0100               	movlb	0	; () banked
  6944  000428  2B7F               	incf	___ftadd@exp2& (0+255),f,b
  6945  00042A                     l4699:
  6946                           
  6947                           ; BSR set to: 0
  6948  00042A  0100               	movlb	0	; () banked
  6949  00042C  517F               	movf	___ftadd@exp2& (0+255),w,b
  6950  00042E  0100               	movlb	0	; () banked
  6951  000430  1980               	xorwf	___ftadd@exp1& (0+255),w,b
  6952  000432  A4D8               	btfss	status,2,c
  6953  000434  D7F3               	goto	l4697
  6954  000436                     l1317:
  6955                           
  6956                           ; BSR set to: 0
  6957  000436  0100               	movlb	0	; () banked
  6958  000438  AF7E               	btfss	___ftadd@sign& (0+255),7,b
  6959  00043A  D012               	goto	l1326
  6960                           
  6961                           ; BSR set to: 0
  6962  00043C  0EFF               	movlw	255
  6963  00043E  0100               	movlb	0	; () banked
  6964  000440  1B75               	xorwf	___ftadd@f1& (0+255),f,b
  6965  000442  0EFF               	movlw	255
  6966  000444  0100               	movlb	0	; () banked
  6967  000446  1B76               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  6968  000448  0EFF               	movlw	255
  6969  00044A  0100               	movlb	0	; () banked
  6970  00044C  1B77               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  6971  00044E  0E01               	movlw	1
  6972  000450  0100               	movlb	0	; () banked
  6973  000452  2775               	addwf	___ftadd@f1& (0+255),f,b
  6974  000454  0E00               	movlw	0
  6975  000456  0100               	movlb	0	; () banked
  6976  000458  2376               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  6977  00045A  0E00               	movlw	0
  6978  00045C  0100               	movlb	0	; () banked
  6979  00045E  2377               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  6980  000460                     l1326:
  6981                           
  6982                           ; BSR set to: 0
  6983  000460  0100               	movlb	0	; () banked
  6984  000462  AD7E               	btfss	___ftadd@sign& (0+255),6,b
  6985  000464  D012               	goto	l4705
  6986                           
  6987                           ; BSR set to: 0
  6988  000466  0EFF               	movlw	255
  6989  000468  0100               	movlb	0	; () banked
  6990  00046A  1B78               	xorwf	___ftadd@f2& (0+255),f,b
  6991  00046C  0EFF               	movlw	255
  6992  00046E  0100               	movlb	0	; () banked
  6993  000470  1B79               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6994  000472  0EFF               	movlw	255
  6995  000474  0100               	movlb	0	; () banked
  6996  000476  1B7A               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6997  000478  0E01               	movlw	1
  6998  00047A  0100               	movlb	0	; () banked
  6999  00047C  2778               	addwf	___ftadd@f2& (0+255),f,b
  7000  00047E  0E00               	movlw	0
  7001  000480  0100               	movlb	0	; () banked
  7002  000482  2379               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7003  000484  0E00               	movlw	0
  7004  000486  0100               	movlb	0	; () banked
  7005  000488  237A               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7006  00048A                     l4705:
  7007                           
  7008                           ; BSR set to: 0
  7009  00048A  0E00               	movlw	0
  7010  00048C  0100               	movlb	0	; () banked
  7011  00048E  6F7E               	movwf	___ftadd@sign& (0+255),b
  7012                           
  7013                           ; BSR set to: 0
  7014  000490  0100               	movlb	0	; () banked
  7015  000492  5175               	movf	___ftadd@f1& (0+255),w,b
  7016  000494  0100               	movlb	0	; () banked
  7017  000496  2778               	addwf	___ftadd@f2& (0+255),f,b
  7018  000498  0100               	movlb	0	; () banked
  7019  00049A  5176               	movf	(___ftadd@f1+1)& (0+255),w,b
  7020  00049C  0100               	movlb	0	; () banked
  7021  00049E  2379               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7022  0004A0  0100               	movlb	0	; () banked
  7023  0004A2  5177               	movf	(___ftadd@f1+2)& (0+255),w,b
  7024  0004A4  0100               	movlb	0	; () banked
  7025  0004A6  237A               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7026                           
  7027                           ; BSR set to: 0
  7028  0004A8  0100               	movlb	0	; () banked
  7029  0004AA  AF7A               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7030  0004AC  D015               	goto	l4715
  7031                           
  7032                           ; BSR set to: 0
  7033  0004AE  0EFF               	movlw	255
  7034  0004B0  0100               	movlb	0	; () banked
  7035  0004B2  1B78               	xorwf	___ftadd@f2& (0+255),f,b
  7036  0004B4  0EFF               	movlw	255
  7037  0004B6  0100               	movlb	0	; () banked
  7038  0004B8  1B79               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7039  0004BA  0EFF               	movlw	255
  7040  0004BC  0100               	movlb	0	; () banked
  7041  0004BE  1B7A               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7042  0004C0  0E01               	movlw	1
  7043  0004C2  0100               	movlb	0	; () banked
  7044  0004C4  2778               	addwf	___ftadd@f2& (0+255),f,b
  7045  0004C6  0E00               	movlw	0
  7046  0004C8  0100               	movlb	0	; () banked
  7047  0004CA  2379               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7048  0004CC  0E00               	movlw	0
  7049  0004CE  0100               	movlb	0	; () banked
  7050  0004D0  237A               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7051                           
  7052                           ; BSR set to: 0
  7053  0004D2  0E01               	movlw	1
  7054  0004D4  0100               	movlb	0	; () banked
  7055  0004D6  6F7E               	movwf	___ftadd@sign& (0+255),b
  7056  0004D8                     l4715:
  7057                           
  7058                           ; BSR set to: 0
  7059  0004D8  C078  F02B         	movff	___ftadd@f2,___ftpack@arg
  7060  0004DC  C079  F02C         	movff	___ftadd@f2+1,___ftpack@arg+1
  7061  0004E0  C07A  F02D         	movff	___ftadd@f2+2,___ftpack@arg+2
  7062  0004E4  C080  F02E         	movff	___ftadd@exp1,___ftpack@exp
  7063  0004E8  C07E  F02F         	movff	___ftadd@sign,___ftpack@sign
  7064  0004EC  ECFB  F011         	call	___ftpack	;wreg free
  7065  0004F0  C02B  F075         	movff	?___ftpack,?___ftadd
  7066  0004F4  C02C  F076         	movff	?___ftpack+1,?___ftadd+1
  7067  0004F8  C02D  F077         	movff	?___ftpack+2,?___ftadd+2
  7068  0004FC  0012               	return	
  7069  0004FE                     __end_of___ftadd:
  7070                           	opt stack 0
  7071                           tblptru	equ	0xFF8
  7072                           tblptrh	equ	0xFF7
  7073                           tblptrl	equ	0xFF6
  7074                           tablat	equ	0xFF5
  7075                           prodh	equ	0xFF4
  7076                           prodl	equ	0xFF3
  7077                           intcon	equ	0xFF2
  7078                           postinc0	equ	0xFEE
  7079                           wreg	equ	0xFE8
  7080                           postdec1	equ	0xFE5
  7081                           fsr1l	equ	0xFE1
  7082                           indf2	equ	0xFDF
  7083                           postinc2	equ	0xFDE
  7084                           postdec2	equ	0xFDD
  7085                           fsr2h	equ	0xFDA
  7086                           fsr2l	equ	0xFD9
  7087                           status	equ	0xFD8
  7088                           
  7089 ;; *************** function ___ftneg *****************
  7090 ;; Defined at:
  7091 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/ftneg.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  f1              3   18[BANK0 ] float 
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;		None
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  3   18[BANK0 ] float 
  7098 ;; Registers used:
  7099 ;;		wreg, status,2, status,0
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7105 ;;      Params:         0       3       0       0       0       0       0       0       0
  7106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7108 ;;      Totals:         0       3       0       0       0       0       0       0       0
  7109 ;;Total ram usage:        3 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:   10
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		_LCDdouble
  7116 ;;		_pow
  7117 ;;		_exp
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text33
  7122  0030C0                     __ptext33:
  7123                           	opt stack 0
  7124  0030C0                     ___ftneg:
  7125                           	opt stack 17
  7126                           
  7127                           ;incstack = 0
  7128  0030C0  0100               	movlb	0	; () banked
  7129  0030C2  5172               	movf	___ftneg@f1& (0+255),w,b
  7130  0030C4  0100               	movlb	0	; () banked
  7131  0030C6  1173               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  7132  0030C8  0100               	movlb	0	; () banked
  7133  0030CA  1174               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  7134  0030CC  B4D8               	btfsc	status,2,c
  7135  0030CE  D009               	goto	l1359
  7136                           
  7137                           ; BSR set to: 0
  7138  0030D0  0E00               	movlw	0
  7139  0030D2  0100               	movlb	0	; () banked
  7140  0030D4  1B72               	xorwf	___ftneg@f1& (0+255),f,b
  7141  0030D6  0E00               	movlw	0
  7142  0030D8  0100               	movlb	0	; () banked
  7143  0030DA  1B73               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  7144  0030DC  0E80               	movlw	128
  7145  0030DE  0100               	movlb	0	; () banked
  7146  0030E0  1B74               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  7147  0030E2                     l1359:
  7148                           
  7149                           ; BSR set to: 0
  7150  0030E2  C072  F072         	movff	___ftneg@f1,?___ftneg
  7151  0030E6  C073  F073         	movff	___ftneg@f1+1,?___ftneg+1
  7152  0030EA  C074  F074         	movff	___ftneg@f1+2,?___ftneg+2
  7153                           
  7154                           ; BSR set to: 0
  7155  0030EE  0012               	return		;funcret
  7156  0030F0                     __end_of___ftneg:
  7157                           	opt stack 0
  7158                           tblptru	equ	0xFF8
  7159                           tblptrh	equ	0xFF7
  7160                           tblptrl	equ	0xFF6
  7161                           tablat	equ	0xFF5
  7162                           prodh	equ	0xFF4
  7163                           prodl	equ	0xFF3
  7164                           intcon	equ	0xFF2
  7165                           postinc0	equ	0xFEE
  7166                           wreg	equ	0xFE8
  7167                           postdec1	equ	0xFE5
  7168                           fsr1l	equ	0xFE1
  7169                           indf2	equ	0xFDF
  7170                           postinc2	equ	0xFDE
  7171                           postdec2	equ	0xFDD
  7172                           fsr2h	equ	0xFDA
  7173                           fsr2l	equ	0xFD9
  7174                           status	equ	0xFD8
  7175                           
  7176 ;; *************** function ___ftdiv *****************
  7177 ;; Defined at:
  7178 ;;		line 54 in file "/Applications/microchip/xc8/v1.35/sources/common/ftdiv.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  f1              3    3[BANK0 ] float 
  7181 ;;  f2              3    6[BANK0 ] float 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  f3              3   13[BANK0 ] float 
  7184 ;;  sign            1   17[BANK0 ] unsigned char 
  7185 ;;  exp             1   16[BANK0 ] unsigned char 
  7186 ;;  cntr            1   12[BANK0 ] unsigned char 
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  3    3[BANK0 ] float 
  7189 ;; Registers used:
  7190 ;;		wreg, status,2, status,0, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7196 ;;      Params:         0       6       0       0       0       0       0       0       0
  7197 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7198 ;;      Temps:          0       3       0       0       0       0       0       0       0
  7199 ;;      Totals:         0      15       0       0       0       0       0       0       0
  7200 ;;Total ram usage:       15 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:   11
  7203 ;; This function calls:
  7204 ;;		___ftpack
  7205 ;; This function is called by:
  7206 ;;		_LCDdouble
  7207 ;;		_exp
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           	psect	text34
  7212  000F18                     __ptext34:
  7213                           	opt stack 0
  7214  000F18                     ___ftdiv:
  7215                           	opt stack 16
  7216                           
  7217                           ; BSR set to: 0
  7218                           ;incstack = 0
  7219  000F18  C065  F069         	movff	___ftdiv@f1+2,??___ftdiv
  7220  000F1C  0100               	movlb	0	; () banked
  7221  000F1E  6B6A               	clrf	(??___ftdiv+1)& (0+255),b
  7222  000F20  6B6B               	clrf	(??___ftdiv+2)& (0+255),b
  7223  000F22  0100               	movlb	0	; () banked
  7224  000F24  3564               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  7225  000F26  0100               	movlb	0	; () banked
  7226  000F28  3769               	rlcf	??___ftdiv& (0+255),f,b
  7227  000F2A  E301               	bnc	u4461
  7228  000F2C  816A               	bsf	(??___ftdiv+1)& (0+255),0,b
  7229  000F2E                     u4461:
  7230  000F2E  0100               	movlb	0	; () banked
  7231  000F30  5169               	movf	??___ftdiv& (0+255),w,b
  7232  000F32  0100               	movlb	0	; () banked
  7233  000F34  6F70               	movwf	___ftdiv@exp& (0+255),b
  7234  000F36  0100               	movlb	0	; () banked
  7235  000F38  5170               	movf	___ftdiv@exp& (0+255),w,b
  7236  000F3A  A4D8               	btfss	status,2,c
  7237  000F3C  D00A               	goto	l4989
  7238                           
  7239                           ; BSR set to: 0
  7240  000F3E  0E00               	movlw	0
  7241  000F40  0100               	movlb	0	; () banked
  7242  000F42  6F63               	movwf	?___ftdiv& (0+255),b
  7243  000F44  0E00               	movlw	0
  7244  000F46  0100               	movlb	0	; () banked
  7245  000F48  6F64               	movwf	(?___ftdiv+1)& (0+255),b
  7246  000F4A  0E00               	movlw	0
  7247  000F4C  0100               	movlb	0	; () banked
  7248  000F4E  6F65               	movwf	(?___ftdiv+2)& (0+255),b
  7249                           
  7250                           ; BSR set to: 0
  7251  000F50  0012               	return	
  7252  000F52                     l4989:
  7253                           
  7254                           ; BSR set to: 0
  7255  000F52  C068  F069         	movff	___ftdiv@f2+2,??___ftdiv
  7256  000F56  0100               	movlb	0	; () banked
  7257  000F58  6B6A               	clrf	(??___ftdiv+1)& (0+255),b
  7258  000F5A  6B6B               	clrf	(??___ftdiv+2)& (0+255),b
  7259  000F5C  0100               	movlb	0	; () banked
  7260  000F5E  3567               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  7261  000F60  0100               	movlb	0	; () banked
  7262  000F62  3769               	rlcf	??___ftdiv& (0+255),f,b
  7263  000F64  E301               	bnc	u4481
  7264  000F66  816A               	bsf	(??___ftdiv+1)& (0+255),0,b
  7265  000F68                     u4481:
  7266  000F68  0100               	movlb	0	; () banked
  7267  000F6A  5169               	movf	??___ftdiv& (0+255),w,b
  7268  000F6C  0100               	movlb	0	; () banked
  7269  000F6E  6F71               	movwf	___ftdiv@sign& (0+255),b
  7270  000F70  0100               	movlb	0	; () banked
  7271  000F72  5171               	movf	___ftdiv@sign& (0+255),w,b
  7272  000F74  A4D8               	btfss	status,2,c
  7273  000F76  D00A               	goto	l4995
  7274                           
  7275                           ; BSR set to: 0
  7276  000F78  0E00               	movlw	0
  7277  000F7A  0100               	movlb	0	; () banked
  7278  000F7C  6F63               	movwf	?___ftdiv& (0+255),b
  7279  000F7E  0E00               	movlw	0
  7280  000F80  0100               	movlb	0	; () banked
  7281  000F82  6F64               	movwf	(?___ftdiv+1)& (0+255),b
  7282  000F84  0E00               	movlw	0
  7283  000F86  0100               	movlb	0	; () banked
  7284  000F88  6F65               	movwf	(?___ftdiv+2)& (0+255),b
  7285                           
  7286                           ; BSR set to: 0
  7287  000F8A  0012               	return	
  7288  000F8C                     l4995:
  7289                           
  7290                           ; BSR set to: 0
  7291  000F8C  0E00               	movlw	0
  7292  000F8E  0100               	movlb	0	; () banked
  7293  000F90  6F6D               	movwf	___ftdiv@f3& (0+255),b
  7294  000F92  0E00               	movlw	0
  7295  000F94  0100               	movlb	0	; () banked
  7296  000F96  6F6E               	movwf	(___ftdiv@f3+1)& (0+255),b
  7297  000F98  0E00               	movlw	0
  7298  000F9A  0100               	movlb	0	; () banked
  7299  000F9C  6F6F               	movwf	(___ftdiv@f3+2)& (0+255),b
  7300                           
  7301                           ; BSR set to: 0
  7302  000F9E  0100               	movlb	0	; () banked
  7303  000FA0  5171               	movf	___ftdiv@sign& (0+255),w,b
  7304  000FA2  0F89               	addlw	137
  7305  000FA4  0100               	movlb	0	; () banked
  7306  000FA6  5F70               	subwf	___ftdiv@exp& (0+255),f,b
  7307                           
  7308                           ; BSR set to: 0
  7309  000FA8  C065  F071         	movff	___ftdiv@f1+2,___ftdiv@sign
  7310                           
  7311                           ; BSR set to: 0
  7312  000FAC  0100               	movlb	0	; () banked
  7313  000FAE  5168               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7314  000FB0  0100               	movlb	0	; () banked
  7315  000FB2  1B71               	xorwf	___ftdiv@sign& (0+255),f,b
  7316                           
  7317                           ; BSR set to: 0
  7318  000FB4  0E80               	movlw	128
  7319  000FB6  0100               	movlb	0	; () banked
  7320  000FB8  1771               	andwf	___ftdiv@sign& (0+255),f,b
  7321                           
  7322                           ; BSR set to: 0
  7323  000FBA  0100               	movlb	0	; () banked
  7324  000FBC  8F64               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  7325                           
  7326                           ; BSR set to: 0
  7327  000FBE  0EFF               	movlw	255
  7328  000FC0  0100               	movlb	0	; () banked
  7329  000FC2  1763               	andwf	___ftdiv@f1& (0+255),f,b
  7330  000FC4  0EFF               	movlw	255
  7331  000FC6  0100               	movlb	0	; () banked
  7332  000FC8  1764               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  7333  000FCA  0E00               	movlw	0
  7334  000FCC  0100               	movlb	0	; () banked
  7335  000FCE  1765               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  7336                           
  7337                           ; BSR set to: 0
  7338  000FD0  0100               	movlb	0	; () banked
  7339  000FD2  8F67               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  7340                           
  7341                           ; BSR set to: 0
  7342  000FD4  0EFF               	movlw	255
  7343  000FD6  0100               	movlb	0	; () banked
  7344  000FD8  1766               	andwf	___ftdiv@f2& (0+255),f,b
  7345  000FDA  0EFF               	movlw	255
  7346  000FDC  0100               	movlb	0	; () banked
  7347  000FDE  1767               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  7348  000FE0  0E00               	movlw	0
  7349  000FE2  0100               	movlb	0	; () banked
  7350  000FE4  1768               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  7351                           
  7352                           ; BSR set to: 0
  7353  000FE6  0E18               	movlw	24
  7354  000FE8  0100               	movlb	0	; () banked
  7355  000FEA  6F6C               	movwf	___ftdiv@cntr& (0+255),b
  7356  000FEC                     l5015:
  7357                           
  7358                           ; BSR set to: 0
  7359  000FEC  0100               	movlb	0	; () banked
  7360  000FEE  90D8               	bcf	status,0,c
  7361  000FF0  376D               	rlcf	___ftdiv@f3& (0+255),f,b
  7362  000FF2  376E               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  7363  000FF4  376F               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  7364                           
  7365                           ; BSR set to: 0
  7366  000FF6  0100               	movlb	0	; () banked
  7367  000FF8  5166               	movf	___ftdiv@f2& (0+255),w,b
  7368  000FFA  0100               	movlb	0	; () banked
  7369  000FFC  5D63               	subwf	___ftdiv@f1& (0+255),w,b
  7370  000FFE  0100               	movlb	0	; () banked
  7371  001000  5167               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7372  001002  0100               	movlb	0	; () banked
  7373  001004  5964               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  7374  001006  0100               	movlb	0	; () banked
  7375  001008  5168               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7376  00100A  0100               	movlb	0	; () banked
  7377  00100C  5965               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  7378  00100E  A0D8               	btfss	status,0,c
  7379  001010  D00E               	goto	l1337
  7380                           
  7381                           ; BSR set to: 0
  7382  001012  0100               	movlb	0	; () banked
  7383  001014  5166               	movf	___ftdiv@f2& (0+255),w,b
  7384  001016  0100               	movlb	0	; () banked
  7385  001018  5F63               	subwf	___ftdiv@f1& (0+255),f,b
  7386  00101A  0100               	movlb	0	; () banked
  7387  00101C  5167               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7388  00101E  0100               	movlb	0	; () banked
  7389  001020  5B64               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  7390  001022  0100               	movlb	0	; () banked
  7391  001024  5168               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7392  001026  0100               	movlb	0	; () banked
  7393  001028  5B65               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  7394                           
  7395                           ; BSR set to: 0
  7396  00102A  0100               	movlb	0	; () banked
  7397  00102C  816D               	bsf	___ftdiv@f3& (0+255),0,b
  7398  00102E                     l1337:
  7399                           
  7400                           ; BSR set to: 0
  7401  00102E  0100               	movlb	0	; () banked
  7402  001030  90D8               	bcf	status,0,c
  7403  001032  3763               	rlcf	___ftdiv@f1& (0+255),f,b
  7404  001034  3764               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  7405  001036  3765               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  7406                           
  7407                           ; BSR set to: 0
  7408  001038  0100               	movlb	0	; () banked
  7409  00103A  2F6C               	decfsz	___ftdiv@cntr& (0+255),f,b
  7410  00103C  D7D7               	goto	l5015
  7411                           
  7412                           ; BSR set to: 0
  7413                           
  7414                           ; BSR set to: 0
  7415  00103E  C06D  F02B         	movff	___ftdiv@f3,___ftpack@arg
  7416  001042  C06E  F02C         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7417  001046  C06F  F02D         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7418  00104A  C070  F02E         	movff	___ftdiv@exp,___ftpack@exp
  7419  00104E  C071  F02F         	movff	___ftdiv@sign,___ftpack@sign
  7420  001052  ECFB  F011         	call	___ftpack	;wreg free
  7421  001056  C02B  F063         	movff	?___ftpack,?___ftdiv
  7422  00105A  C02C  F064         	movff	?___ftpack+1,?___ftdiv+1
  7423  00105E  C02D  F065         	movff	?___ftpack+2,?___ftdiv+2
  7424  001062  0012               	return	
  7425  001064                     __end_of___ftdiv:
  7426                           	opt stack 0
  7427                           tblptru	equ	0xFF8
  7428                           tblptrh	equ	0xFF7
  7429                           tblptrl	equ	0xFF6
  7430                           tablat	equ	0xFF5
  7431                           prodh	equ	0xFF4
  7432                           prodl	equ	0xFF3
  7433                           intcon	equ	0xFF2
  7434                           postinc0	equ	0xFEE
  7435                           wreg	equ	0xFE8
  7436                           postdec1	equ	0xFE5
  7437                           fsr1l	equ	0xFE1
  7438                           indf2	equ	0xFDF
  7439                           postinc2	equ	0xFDE
  7440                           postdec2	equ	0xFDD
  7441                           fsr2h	equ	0xFDA
  7442                           fsr2l	equ	0xFD9
  7443                           status	equ	0xFD8
  7444                           
  7445 ;; *************** function ___awtoft *****************
  7446 ;; Defined at:
  7447 ;;		line 32 in file "/Applications/microchip/xc8/v1.35/sources/common/awtoft.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  c               2    0[BANK0 ] int 
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;  sign            1   50[COMRAM] unsigned char 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  3    0[BANK0 ] float 
  7454 ;; Registers used:
  7455 ;;		wreg, status,2, status,0, cstack
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7461 ;;      Params:         0       3       0       0       0       0       0       0       0
  7462 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7464 ;;      Totals:         1       3       0       0       0       0       0       0       0
  7465 ;;Total ram usage:        4 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; Hardware stack levels required when called:   11
  7468 ;; This function calls:
  7469 ;;		___ftpack
  7470 ;; This function is called by:
  7471 ;;		_main
  7472 ;;		_LCDdouble
  7473 ;;		_exp
  7474 ;;		_log
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text35
  7479  002E6A                     __ptext35:
  7480                           	opt stack 0
  7481  002E6A                     ___awtoft:
  7482                           	opt stack 19
  7483                           
  7484                           ;incstack = 0
  7485  002E6A  0E00               	movlw	0
  7486  002E6C  6E33               	movwf	___awtoft@sign,c
  7487  002E6E  0100               	movlb	0	; () banked
  7488  002E70  AF61               	btfss	(___awtoft@c+1)& (0+255),7,b
  7489  002E72  D007               	goto	l5045
  7490                           
  7491                           ; BSR set to: 0
  7492  002E74  0100               	movlb	0	; () banked
  7493  002E76  6D60               	negf	___awtoft@c& (0+255),b
  7494  002E78  1F61               	comf	(___awtoft@c+1)& (0+255),f,b
  7495  002E7A  B0D8               	btfsc	status,0,c
  7496  002E7C  2B61               	incf	(___awtoft@c+1)& (0+255),f,b
  7497                           
  7498                           ; BSR set to: 0
  7499  002E7E  0E01               	movlw	1
  7500  002E80  6E33               	movwf	___awtoft@sign,c
  7501  002E82                     l5045:
  7502                           
  7503                           ; BSR set to: 0
  7504  002E82  C060  F02B         	movff	___awtoft@c,___ftpack@arg
  7505  002E86  C061  F02C         	movff	___awtoft@c+1,___ftpack@arg+1
  7506  002E8A  6A2D               	clrf	___ftpack@arg+2,c
  7507  002E8C  0E8E               	movlw	142
  7508  002E8E  6E2E               	movwf	___ftpack@exp,c
  7509  002E90  C033  F02F         	movff	___awtoft@sign,___ftpack@sign
  7510  002E94  ECFB  F011         	call	___ftpack	;wreg free
  7511  002E98  C02B  F060         	movff	?___ftpack,?___awtoft
  7512  002E9C  C02C  F061         	movff	?___ftpack+1,?___awtoft+1
  7513  002EA0  C02D  F062         	movff	?___ftpack+2,?___awtoft+2
  7514  002EA4  0012               	return	
  7515  002EA6                     __end_of___awtoft:
  7516                           	opt stack 0
  7517                           tblptru	equ	0xFF8
  7518                           tblptrh	equ	0xFF7
  7519                           tblptrl	equ	0xFF6
  7520                           tablat	equ	0xFF5
  7521                           prodh	equ	0xFF4
  7522                           prodl	equ	0xFF3
  7523                           intcon	equ	0xFF2
  7524                           postinc0	equ	0xFEE
  7525                           wreg	equ	0xFE8
  7526                           postdec1	equ	0xFE5
  7527                           fsr1l	equ	0xFE1
  7528                           indf2	equ	0xFDF
  7529                           postinc2	equ	0xFDE
  7530                           postdec2	equ	0xFDD
  7531                           fsr2h	equ	0xFDA
  7532                           fsr2l	equ	0xFD9
  7533                           status	equ	0xFD8
  7534                           
  7535 ;; *************** function ___lltoft *****************
  7536 ;; Defined at:
  7537 ;;		line 35 in file "/Applications/microchip/xc8/v1.35/sources/common/lltoft.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  c               4    0[BANK0 ] unsigned long 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  exp             1   50[COMRAM] unsigned char 
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  3    0[BANK0 ] float 
  7544 ;; Registers used:
  7545 ;;		wreg, status,2, status,0, cstack
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7551 ;;      Params:         0       4       0       0       0       0       0       0       0
  7552 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7553 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7554 ;;      Totals:         1       8       0       0       0       0       0       0       0
  7555 ;;Total ram usage:        9 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:   11
  7558 ;; This function calls:
  7559 ;;		___ftpack
  7560 ;; This function is called by:
  7561 ;;		_pow
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text36
  7566  002A54                     __ptext36:
  7567                           	opt stack 0
  7568  002A54                     ___lltoft:
  7569                           	opt stack 17
  7570                           
  7571                           ;incstack = 0
  7572  002A54  0E8E               	movlw	142
  7573  002A56  6E33               	movwf	___lltoft@exp,c
  7574  002A58  D007               	goto	l5231
  7575  002A5A                     l5229:
  7576  002A5A  0100               	movlb	0	; () banked
  7577  002A5C  90D8               	bcf	status,0,c
  7578  002A5E  3363               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7579  002A60  3362               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7580  002A62  3361               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7581  002A64  3360               	rrcf	___lltoft@c& (0+255),f,b
  7582  002A66  2A33               	incf	___lltoft@exp,f,c
  7583  002A68                     l5231:
  7584  002A68  0E00               	movlw	0
  7585  002A6A  0100               	movlb	0	; () banked
  7586  002A6C  1560               	andwf	___lltoft@c& (0+255),w,b
  7587  002A6E  0100               	movlb	0	; () banked
  7588  002A70  6F64               	movwf	??___lltoft& (0+255),b
  7589  002A72  0E00               	movlw	0
  7590  002A74  0100               	movlb	0	; () banked
  7591  002A76  1561               	andwf	(___lltoft@c+1)& (0+255),w,b
  7592  002A78  0100               	movlb	0	; () banked
  7593  002A7A  6F65               	movwf	(??___lltoft+1)& (0+255),b
  7594  002A7C  0E00               	movlw	0
  7595  002A7E  0100               	movlb	0	; () banked
  7596  002A80  1562               	andwf	(___lltoft@c+2)& (0+255),w,b
  7597  002A82  0100               	movlb	0	; () banked
  7598  002A84  6F66               	movwf	(??___lltoft+2)& (0+255),b
  7599  002A86  0EFF               	movlw	255
  7600  002A88  0100               	movlb	0	; () banked
  7601  002A8A  1563               	andwf	(___lltoft@c+3)& (0+255),w,b
  7602  002A8C  0100               	movlb	0	; () banked
  7603  002A8E  6F67               	movwf	(??___lltoft+3)& (0+255),b
  7604  002A90  0100               	movlb	0	; () banked
  7605  002A92  5164               	movf	??___lltoft& (0+255),w,b
  7606  002A94  0100               	movlb	0	; () banked
  7607  002A96  1165               	iorwf	(??___lltoft+1)& (0+255),w,b
  7608  002A98  0100               	movlb	0	; () banked
  7609  002A9A  1166               	iorwf	(??___lltoft+2)& (0+255),w,b
  7610  002A9C  0100               	movlb	0	; () banked
  7611  002A9E  1167               	iorwf	(??___lltoft+3)& (0+255),w,b
  7612  002AA0  A4D8               	btfss	status,2,c
  7613  002AA2  D7DB               	goto	l5229
  7614                           
  7615                           ; BSR set to: 0
  7616                           
  7617                           ; BSR set to: 0
  7618  002AA4  C060  F02B         	movff	___lltoft@c,___ftpack@arg
  7619  002AA8  C061  F02C         	movff	___lltoft@c+1,___ftpack@arg+1
  7620  002AAC  C062  F02D         	movff	___lltoft@c+2,___ftpack@arg+2
  7621  002AB0  C033  F02E         	movff	___lltoft@exp,___ftpack@exp
  7622  002AB4  0E00               	movlw	0
  7623  002AB6  6E2F               	movwf	___ftpack@sign,c
  7624  002AB8  ECFB  F011         	call	___ftpack	;wreg free
  7625  002ABC  C02B  F060         	movff	?___ftpack,?___lltoft
  7626  002AC0  C02C  F061         	movff	?___ftpack+1,?___lltoft+1
  7627  002AC4  C02D  F062         	movff	?___ftpack+2,?___lltoft+2
  7628  002AC8  0012               	return	
  7629  002ACA                     __end_of___lltoft:
  7630                           	opt stack 0
  7631                           tblptru	equ	0xFF8
  7632                           tblptrh	equ	0xFF7
  7633                           tblptrl	equ	0xFF6
  7634                           tablat	equ	0xFF5
  7635                           prodh	equ	0xFF4
  7636                           prodl	equ	0xFF3
  7637                           intcon	equ	0xFF2
  7638                           postinc0	equ	0xFEE
  7639                           wreg	equ	0xFE8
  7640                           postdec1	equ	0xFE5
  7641                           fsr1l	equ	0xFE1
  7642                           indf2	equ	0xFDF
  7643                           postinc2	equ	0xFDE
  7644                           postdec2	equ	0xFDD
  7645                           fsr2h	equ	0xFDA
  7646                           fsr2l	equ	0xFD9
  7647                           status	equ	0xFD8
  7648                           
  7649 ;; *************** function ___ftpack *****************
  7650 ;; Defined at:
  7651 ;;		line 62 in file "/Applications/microchip/xc8/v1.35/sources/common/float.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  arg             3   42[COMRAM] unsigned um
  7654 ;;  exp             1   45[COMRAM] unsigned char 
  7655 ;;  sign            1   46[COMRAM] unsigned char 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  3   42[COMRAM] float 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2, status,0
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7667 ;;      Params:         5       0       0       0       0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7669 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7670 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7671 ;;Total ram usage:        8 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:   10
  7674 ;; This function calls:
  7675 ;;		Nothing
  7676 ;; This function is called by:
  7677 ;;		___altoft
  7678 ;;		___awtoft
  7679 ;;		___ftadd
  7680 ;;		___ftdiv
  7681 ;;		___ftmul
  7682 ;;		___lltoft
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text37
  7687  0023F6                     __ptext37:
  7688                           	opt stack 0
  7689  0023F6                     ___ftpack:
  7690                           	opt stack 19
  7691                           
  7692                           ;incstack = 0
  7693  0023F6  502E               	movf	___ftpack@exp,w,c
  7694  0023F8  B4D8               	btfsc	status,2,c
  7695  0023FA  D005               	goto	l4349
  7696  0023FC  502B               	movf	___ftpack@arg,w,c
  7697  0023FE  102C               	iorwf	___ftpack@arg+1,w,c
  7698  002400  102D               	iorwf	___ftpack@arg+2,w,c
  7699  002402  A4D8               	btfss	status,2,c
  7700  002404  D00C               	goto	l4355
  7701  002406                     l4349:
  7702  002406  0E00               	movlw	0
  7703  002408  6E2B               	movwf	?___ftpack,c
  7704  00240A  0E00               	movlw	0
  7705  00240C  6E2C               	movwf	?___ftpack+1,c
  7706  00240E  0E00               	movlw	0
  7707  002410  6E2D               	movwf	?___ftpack+2,c
  7708  002412  0012               	return	
  7709  002414                     l4353:
  7710  002414  2A2E               	incf	___ftpack@exp,f,c
  7711  002416  90D8               	bcf	status,0,c
  7712  002418  322D               	rrcf	___ftpack@arg+2,f,c
  7713  00241A  322C               	rrcf	___ftpack@arg+1,f,c
  7714  00241C  322B               	rrcf	___ftpack@arg,f,c
  7715  00241E                     l4355:
  7716  00241E  0E00               	movlw	0
  7717  002420  142B               	andwf	___ftpack@arg,w,c
  7718  002422  6E30               	movwf	??___ftpack& (0+255),c
  7719  002424  0E00               	movlw	0
  7720  002426  142C               	andwf	___ftpack@arg+1,w,c
  7721  002428  6E31               	movwf	(??___ftpack+1)& (0+255),c
  7722  00242A  0EFE               	movlw	254
  7723  00242C  142D               	andwf	___ftpack@arg+2,w,c
  7724  00242E  6E32               	movwf	(??___ftpack+2)& (0+255),c
  7725  002430  5030               	movf	??___ftpack,w,c
  7726  002432  1031               	iorwf	??___ftpack+1,w,c
  7727  002434  1032               	iorwf	??___ftpack+2,w,c
  7728  002436  B4D8               	btfsc	status,2,c
  7729  002438  D00C               	goto	l4361
  7730  00243A  D7EC               	goto	l4353
  7731  00243C                     l4357:
  7732  00243C  2A2E               	incf	___ftpack@exp,f,c
  7733  00243E  0E01               	movlw	1
  7734  002440  262B               	addwf	___ftpack@arg,f,c
  7735  002442  0E00               	movlw	0
  7736  002444  222C               	addwfc	___ftpack@arg+1,f,c
  7737  002446  0E00               	movlw	0
  7738  002448  222D               	addwfc	___ftpack@arg+2,f,c
  7739  00244A  90D8               	bcf	status,0,c
  7740  00244C  322D               	rrcf	___ftpack@arg+2,f,c
  7741  00244E  322C               	rrcf	___ftpack@arg+1,f,c
  7742  002450  322B               	rrcf	___ftpack@arg,f,c
  7743  002452                     l4361:
  7744  002452  0E00               	movlw	0
  7745  002454  142B               	andwf	___ftpack@arg,w,c
  7746  002456  6E30               	movwf	??___ftpack& (0+255),c
  7747  002458  0E00               	movlw	0
  7748  00245A  142C               	andwf	___ftpack@arg+1,w,c
  7749  00245C  6E31               	movwf	(??___ftpack+1)& (0+255),c
  7750  00245E  0EFF               	movlw	255
  7751  002460  142D               	andwf	___ftpack@arg+2,w,c
  7752  002462  6E32               	movwf	(??___ftpack+2)& (0+255),c
  7753  002464  5030               	movf	??___ftpack,w,c
  7754  002466  1031               	iorwf	??___ftpack+1,w,c
  7755  002468  1032               	iorwf	??___ftpack+2,w,c
  7756  00246A  B4D8               	btfsc	status,2,c
  7757  00246C  D006               	goto	l4365
  7758  00246E  D7E6               	goto	l4357
  7759  002470                     l4363:
  7760  002470  062E               	decf	___ftpack@exp,f,c
  7761  002472  90D8               	bcf	status,0,c
  7762  002474  362B               	rlcf	___ftpack@arg,f,c
  7763  002476  362C               	rlcf	___ftpack@arg+1,f,c
  7764  002478  362D               	rlcf	___ftpack@arg+2,f,c
  7765  00247A                     l4365:
  7766  00247A  BE2C               	btfsc	___ftpack@arg+1,7,c
  7767  00247C  D003               	goto	l1279
  7768  00247E  0E02               	movlw	2
  7769  002480  602E               	cpfslt	___ftpack@exp,c
  7770  002482  D7F6               	goto	l4363
  7771  002484                     l1279:
  7772  002484  A02E               	btfss	___ftpack@exp,0,c
  7773  002486  9E2C               	bcf	___ftpack@arg+1,7,c
  7774  002488  90D8               	bcf	status,0,c
  7775  00248A  322E               	rrcf	___ftpack@exp,f,c
  7776  00248C  502E               	movf	___ftpack@exp,w,c
  7777  00248E  122D               	iorwf	___ftpack@arg+2,f,c
  7778  002490  502F               	movf	___ftpack@sign,w,c
  7779  002492  A4D8               	btfss	status,2,c
  7780  002494  8E2D               	bsf	___ftpack@arg+2,7,c
  7781  002496  C02B  F02B         	movff	___ftpack@arg,?___ftpack
  7782  00249A  C02C  F02C         	movff	___ftpack@arg+1,?___ftpack+1
  7783  00249E  C02D  F02D         	movff	___ftpack@arg+2,?___ftpack+2
  7784  0024A2  0012               	return	
  7785  0024A4                     __end_of___ftpack:
  7786                           	opt stack 0
  7787                           tblptru	equ	0xFF8
  7788                           tblptrh	equ	0xFF7
  7789                           tblptrl	equ	0xFF6
  7790                           tablat	equ	0xFF5
  7791                           prodh	equ	0xFF4
  7792                           prodl	equ	0xFF3
  7793                           intcon	equ	0xFF2
  7794                           postinc0	equ	0xFEE
  7795                           wreg	equ	0xFE8
  7796                           postdec1	equ	0xFE5
  7797                           fsr1l	equ	0xFE1
  7798                           indf2	equ	0xFDF
  7799                           postinc2	equ	0xFDE
  7800                           postdec2	equ	0xFDD
  7801                           fsr2h	equ	0xFDA
  7802                           fsr2l	equ	0xFD9
  7803                           status	equ	0xFD8
  7804                           
  7805 ;; *************** function _LCDdata *****************
  7806 ;; Defined at:
  7807 ;;		line 317 in file "../src/main.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  byte            1    wreg     unsigned char 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  byte            1   45[COMRAM] unsigned char 
  7812 ;; Return value:  Size  Location     Type
  7813 ;;		None               void
  7814 ;; Registers used:
  7815 ;;		wreg, status,2, status,0, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7821 ;;      Params:         0       0       0       0       0       0       0       0       0
  7822 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7823 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7824 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7825 ;;Total ram usage:        2 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:   11
  7828 ;; This function calls:
  7829 ;;		_LCDnibble
  7830 ;; This function is called by:
  7831 ;;		_main
  7832 ;;		_LCDstring
  7833 ;;		_LCDdouble
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text38
  7838  0031F6                     __ptext38:
  7839                           	opt stack 0
  7840  0031F6                     _LCDdata:
  7841                           	opt stack 18
  7842                           
  7843                           ;incstack = 0
  7844                           ;LCDdata@byte stored from wreg
  7845  0031F6  6E2E               	movwf	LCDdata@byte,c
  7846                           
  7847                           ;main.c: 319: LATDbits.LATD7 = 1;
  7848  0031F8  8E8C               	bsf	3980,7,c	;volatile
  7849                           
  7850                           ;main.c: 320: _delay((unsigned long)((5)*(48000000/4000.0)));
  7851  0031FA  0E4E               	movlw	78
  7852  0031FC  6E2D               	movwf	??_LCDdata& (0+255),c
  7853  0031FE  0EEB               	movlw	235
  7854  003200                     u6097:
  7855  003200  2EE8               	decfsz	wreg,f,c
  7856  003202  D7FE               	goto	u6097
  7857  003204  2E2D               	decfsz	??_LCDdata& (0+255),f,c
  7858  003206  D7FC               	goto	u6097
  7859  003208  F000               	nop	
  7860                           
  7861                           ;main.c: 321: LCDnibble(byte >> 4);
  7862  00320A  382E               	swapf	LCDdata@byte,w,c
  7863  00320C  0B0F               	andlw	15
  7864  00320E  ECBC  F018         	call	_LCDnibble
  7865                           
  7866                           ;main.c: 322: LCDnibble(byte & 0xF);
  7867  003212  502E               	movf	LCDdata@byte,w,c
  7868  003214  0B0F               	andlw	15
  7869  003216  ECBC  F018         	call	_LCDnibble
  7870  00321A  0012               	return	
  7871  00321C                     __end_of_LCDdata:
  7872                           	opt stack 0
  7873                           tblptru	equ	0xFF8
  7874                           tblptrh	equ	0xFF7
  7875                           tblptrl	equ	0xFF6
  7876                           tablat	equ	0xFF5
  7877                           prodh	equ	0xFF4
  7878                           prodl	equ	0xFF3
  7879                           intcon	equ	0xFF2
  7880                           postinc0	equ	0xFEE
  7881                           wreg	equ	0xFE8
  7882                           postdec1	equ	0xFE5
  7883                           fsr1l	equ	0xFE1
  7884                           indf2	equ	0xFDF
  7885                           postinc2	equ	0xFDE
  7886                           postdec2	equ	0xFDD
  7887                           fsr2h	equ	0xFDA
  7888                           fsr2l	equ	0xFD9
  7889                           status	equ	0xFD8
  7890                           
  7891 ;; *************** function _LCDnibble *****************
  7892 ;; Defined at:
  7893 ;;		line 292 in file "../src/main.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;  nibble          1    wreg     unsigned char 
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;  nibble          1   43[COMRAM] unsigned char 
  7898 ;; Return value:  Size  Location     Type
  7899 ;;		None               void
  7900 ;; Registers used:
  7901 ;;		wreg, status,2, status,0
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7907 ;;      Params:         0       0       0       0       0       0       0       0       0
  7908 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7909 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7910 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7911 ;;Total ram usage:        2 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:   10
  7914 ;; This function calls:
  7915 ;;		Nothing
  7916 ;; This function is called by:
  7917 ;;		_LCDinit
  7918 ;;		_LCDcmd
  7919 ;;		_LCDdata
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text39
  7924  003178                     __ptext39:
  7925                           	opt stack 0
  7926  003178                     _LCDnibble:
  7927                           	opt stack 18
  7928                           
  7929                           ;incstack = 0
  7930                           ;LCDnibble@nibble stored from wreg
  7931  003178  6E2C               	movwf	LCDnibble@nibble,c
  7932                           
  7933                           ;main.c: 295: LATD = (LATD & 0xF0) + nibble;
  7934  00317A  508C               	movf	3980,w,c	;volatile
  7935  00317C  0BF0               	andlw	240
  7936  00317E  242C               	addwf	LCDnibble@nibble,w,c
  7937  003180  6E8C               	movwf	3980,c	;volatile
  7938                           
  7939                           ;main.c: 298: LATDbits.LATD5 = 0;
  7940  003182  9A8C               	bcf	3980,5,c	;volatile
  7941                           
  7942                           ;main.c: 299: _delay((unsigned long)((1.07)*(48000000/4000.0)));
  7943  003184  0E11               	movlw	17
  7944  003186  6E2B               	movwf	??_LCDnibble& (0+255),c
  7945  003188  0EAC               	movlw	172
  7946  00318A                     u6107:
  7947  00318A  2EE8               	decfsz	wreg,f,c
  7948  00318C  D7FE               	goto	u6107
  7949  00318E  2E2B               	decfsz	??_LCDnibble& (0+255),f,c
  7950  003190  D7FC               	goto	u6107
  7951                           
  7952                           ;main.c: 300: LATDbits.LATD5 = 1;
  7953  003192  8A8C               	bsf	3980,5,c	;volatile
  7954                           
  7955                           ;main.c: 301: _delay((unsigned long)((2)*(48000000/4000.0)));
  7956  003194  0E20               	movlw	32
  7957  003196  6E2B               	movwf	??_LCDnibble& (0+255),c
  7958  003198  0E2A               	movlw	42
  7959  00319A                     u6117:
  7960  00319A  2EE8               	decfsz	wreg,f,c
  7961  00319C  D7FE               	goto	u6117
  7962  00319E  2E2B               	decfsz	??_LCDnibble& (0+255),f,c
  7963  0031A0  D7FC               	goto	u6117
  7964  0031A2  0012               	return	
  7965  0031A4                     __end_of_LCDnibble:
  7966                           	opt stack 0
  7967                           tblptru	equ	0xFF8
  7968                           tblptrh	equ	0xFF7
  7969                           tblptrl	equ	0xFF6
  7970                           tablat	equ	0xFF5
  7971                           prodh	equ	0xFF4
  7972                           prodl	equ	0xFF3
  7973                           intcon	equ	0xFF2
  7974                           postinc0	equ	0xFEE
  7975                           wreg	equ	0xFE8
  7976                           postdec1	equ	0xFE5
  7977                           fsr1l	equ	0xFE1
  7978                           indf2	equ	0xFDF
  7979                           postinc2	equ	0xFDE
  7980                           postdec2	equ	0xFDD
  7981                           fsr2h	equ	0xFDA
  7982                           fsr2l	equ	0xFD9
  7983                           status	equ	0xFD8
  7984                           
  7985 ;; *************** function _APP_DeviceMouseTasks *****************
  7986 ;; Defined at:
  7987 ;;		line 246 in file "../src/app_device_mouse.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  accx            2   43[COMRAM] int 
  7990 ;;  accy            2   45[COMRAM] int 
  7991 ;;  accz            2   47[COMRAM] int 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;  currentButto    1   49[COMRAM] unsigned char 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;		None               void
  7996 ;; Registers used:
  7997 ;;		wreg, status,2, status,0, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8003 ;;      Params:         6       0       0       0       0       0       0       0       0
  8004 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8006 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8007 ;;Total ram usage:        7 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:   11
  8010 ;; This function calls:
  8011 ;;		_BUTTON_IsPressed
  8012 ;; This function is called by:
  8013 ;;		_main
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           	psect	text40
  8018  002D48                     __ptext40:
  8019                           	opt stack 0
  8020  002D48                     _APP_DeviceMouseTasks:
  8021                           	opt stack 19
  8022                           
  8023                           ;app_device_mouse.c: 248: bool currentButtonState;
  8024                           ;app_device_mouse.c: 250: acx = accx;
  8025                           
  8026                           ;incstack = 0
  8027  002D48  C02C  F0E3         	movff	APP_DeviceMouseTasks@accx,_acx
  8028  002D4C  C02D  F0E4         	movff	APP_DeviceMouseTasks@accx+1,_acx+1
  8029                           
  8030                           ;app_device_mouse.c: 251: acy = accy;
  8031  002D50  C02E  F0E5         	movff	APP_DeviceMouseTasks@accy,_acy
  8032  002D54  C02F  F0E6         	movff	APP_DeviceMouseTasks@accy+1,_acy+1
  8033                           
  8034                           ;app_device_mouse.c: 252: acz = accz;
  8035  002D58  C030  F0E7         	movff	APP_DeviceMouseTasks@accz,_acz
  8036  002D5C  C031  F0E8         	movff	APP_DeviceMouseTasks@accz+1,_acz+1
  8037                           
  8038                           ;app_device_mouse.c: 254: currentButtonState = BUTTON_IsPressed(BUTTON_S2);
  8039  002D60  0E01               	movlw	1
  8040  002D62  EC71  F017         	call	_BUTTON_IsPressed
  8041  002D66  6E32               	movwf	APP_DeviceMouseTasks@currentButtonState,c
  8042                           
  8043                           ;app_device_mouse.c: 259: if(mouse.lastButtonState != currentButtonState)
  8044  002D68  5032               	movf	APP_DeviceMouseTasks@currentButtonState,w,c
  8045  002D6A  0100               	movlb	0	; () banked
  8046  002D6C  19C6               	xorwf	(_mouse+1)& (0+255),w,b
  8047  002D6E  B4D8               	btfsc	status,2,c
  8048  002D70  0012               	return	
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;app_device_mouse.c: 260: {
  8052                           ;app_device_mouse.c: 261: mouse.lastButtonState = currentButtonState;
  8053  002D72  C032  F0C6         	movff	APP_DeviceMouseTasks@currentButtonState,_mouse+1
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;app_device_mouse.c: 263: if(currentButtonState == 0)
  8057  002D76  5032               	movf	APP_DeviceMouseTasks@currentButtonState,w,c
  8058  002D78  A4D8               	btfss	status,2,c
  8059  002D7A  0012               	return	
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;app_device_mouse.c: 264: {
  8063                           ;app_device_mouse.c: 265: mouse.movementMode = !mouse.movementMode;
  8064  002D7C  0100               	movlb	0	; () banked
  8065  002D7E  51CA               	movf	(_mouse+5)& (0+255),w,b
  8066  002D80  A4D8               	btfss	status,2,c
  8067  002D82  D002               	goto	u5470
  8068  002D84  0E01               	movlw	1
  8069  002D86  D001               	goto	u5480
  8070  002D88                     u5470:
  8071  002D88  0E00               	movlw	0
  8072  002D8A                     u5480:
  8073  002D8A  0100               	movlb	0	; () banked
  8074  002D8C  6FCA               	movwf	(_mouse+5)& (0+255),b
  8075                           
  8076                           ;app_device_mouse.c: 267: mouse.inputReport[0].idleRateSofCount = 0;
  8077  002D8E  0E00               	movlw	0
  8078  002D90  0100               	movlb	0	; () banked
  8079  002D92  6FCE               	movwf	(_mouse+9)& (0+255),b
  8080                           
  8081                           ;app_device_mouse.c: 268: mouse.sentStop = 0;
  8082  002D94  0E00               	movlw	0
  8083  002D96  0100               	movlb	0	; () banked
  8084  002D98  6FC5               	movwf	_mouse& (0+255),b
  8085                           
  8086                           ; BSR set to: 0
  8087  002D9A  0012               	return	
  8088  002D9C                     __end_of_APP_DeviceMouseTasks:
  8089                           	opt stack 0
  8090                           tblptru	equ	0xFF8
  8091                           tblptrh	equ	0xFF7
  8092                           tblptrl	equ	0xFF6
  8093                           tablat	equ	0xFF5
  8094                           prodh	equ	0xFF4
  8095                           prodl	equ	0xFF3
  8096                           intcon	equ	0xFF2
  8097                           postinc0	equ	0xFEE
  8098                           wreg	equ	0xFE8
  8099                           postdec1	equ	0xFE5
  8100                           fsr1l	equ	0xFE1
  8101                           indf2	equ	0xFDF
  8102                           postinc2	equ	0xFDE
  8103                           postdec2	equ	0xFDD
  8104                           fsr2h	equ	0xFDA
  8105                           fsr2l	equ	0xFD9
  8106                           status	equ	0xFD8
  8107                           
  8108 ;; *************** function _BUTTON_IsPressed *****************
  8109 ;; Defined at:
  8110 ;;		line 95 in file "../../../../../../bsp/picdem_fs_usb/buttons.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  button          1    wreg     enum E4441
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  button          1   42[COMRAM] enum E4441
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      unsigned char 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0
  8125 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8127 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8128 ;;Total ram usage:        1 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:   10
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_APP_DeviceMouseTasks
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text41
  8139  002EE2                     __ptext41:
  8140                           	opt stack 0
  8141  002EE2                     _BUTTON_IsPressed:
  8142                           	opt stack 19
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;incstack = 0
  8146                           ;BUTTON_IsPressed@button stored from wreg
  8147  002EE2  6E2B               	movwf	BUTTON_IsPressed@button,c
  8148                           
  8149                           ;buttons.c: 97: switch(button)
  8150  002EE4  D00E               	goto	l5377
  8151  002EE6                     l553:
  8152                           
  8153                           ;buttons.c: 100: return ( (PORTBbits.RB4 == 0) ? 1 : 0);
  8154  002EE6  B881               	btfsc	3969,4,c	;volatile
  8155  002EE8  D002               	goto	u4990
  8156  002EEA  0E01               	movlw	1
  8157  002EEC  0012               	return	
  8158  002EEE                     u4990:
  8159  002EEE  0E00               	movlw	0
  8160  002EF0  0012               	return	
  8161  002EF2                     l555:
  8162                           
  8163                           ;buttons.c: 103: return ( (PORTBbits.RB5 == 0) ? 1 : 0);
  8164  002EF2  BA81               	btfsc	3969,5,c	;volatile
  8165  002EF4  D002               	goto	u5010
  8166  002EF6  0E01               	movlw	1
  8167  002EF8  0012               	return	
  8168  002EFA                     u5010:
  8169  002EFA  0E00               	movlw	0
  8170  002EFC  0012               	return	
  8171  002EFE                     l5371:
  8172                           
  8173                           ;buttons.c: 106: return 0;
  8174  002EFE  0E00               	movlw	0
  8175  002F00  0012               	return	
  8176  002F02                     l5377:
  8177  002F02  502B               	movf	BUTTON_IsPressed@button,w,c
  8178                           
  8179                           ; Switch size 1, requested type "space"
  8180                           ; Number of cases is 3, Range of values is 0 to 2
  8181                           ; switch strategies available:
  8182                           ; Name         Instructions Cycles
  8183                           ; simple_byte           10     6 (average)
  8184                           ;	Chosen strategy is simple_byte
  8185  002F04  0A00               	xorlw	0	; case 0
  8186  002F06  B4D8               	btfsc	status,2,c
  8187  002F08  D7FA               	goto	l5371
  8188  002F0A  0A01               	xorlw	1	; case 1
  8189  002F0C  B4D8               	btfsc	status,2,c
  8190  002F0E  D7EB               	goto	l553
  8191  002F10  0A03               	xorlw	3	; case 2
  8192  002F12  B4D8               	btfsc	status,2,c
  8193  002F14  D7EE               	goto	l555
  8194                           
  8195                           ;buttons.c: 109: return 0;
  8196  002F16  0E00               	movlw	0
  8197  002F18  0012               	return	
  8198  002F1A                     __end_of_BUTTON_IsPressed:
  8199                           	opt stack 0
  8200                           tblptru	equ	0xFF8
  8201                           tblptrh	equ	0xFF7
  8202                           tblptrl	equ	0xFF6
  8203                           tablat	equ	0xFF5
  8204                           prodh	equ	0xFF4
  8205                           prodl	equ	0xFF3
  8206                           intcon	equ	0xFF2
  8207                           postinc0	equ	0xFEE
  8208                           wreg	equ	0xFE8
  8209                           postdec1	equ	0xFE5
  8210                           fsr1l	equ	0xFE1
  8211                           indf2	equ	0xFDF
  8212                           postinc2	equ	0xFDE
  8213                           postdec2	equ	0xFDD
  8214                           fsr2h	equ	0xFDA
  8215                           fsr2l	equ	0xFD9
  8216                           status	equ	0xFD8
  8217                           
  8218 ;; *************** function _SYS_InterruptHigh *****************
  8219 ;; Defined at:
  8220 ;;		line 101 in file "../src/system_config/picdem_fs_usb/system.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;		None
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;		None
  8225 ;; Return value:  Size  Location     Type
  8226 ;;		None               void
  8227 ;; Registers used:
  8228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8234 ;;      Params:         0       0       0       0       0       0       0       0       0
  8235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8236 ;;      Temps:         14       0       0       0       0       0       0       0       0
  8237 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8238 ;;Total ram usage:       14 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:    9
  8241 ;; This function calls:
  8242 ;;		_USBDeviceTasks
  8243 ;; This function is called by:
  8244 ;;		Interrupt level 2
  8245 ;; This function uses a non-reentrant model
  8246 ;;
  8247                           
  8248                           	psect	intcode
  8249  000008                     __pintcode:
  8250                           	opt stack 0
  8251  000008                     _SYS_InterruptHigh:
  8252                           	opt stack 15
  8253                           
  8254                           ;incstack = 0
  8255  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8256  00000A  CFFA F01D          	movff	pclath,??_SYS_InterruptHigh
  8257  00000E  CFFB F01E          	movff	pclatu,??_SYS_InterruptHigh+1
  8258  000012  EDD7  F015         	call	int_func,f	;refresh shadow registers
  8259                           pclatu	equ	0xFFB
  8260                           pclath	equ	0xFFA
  8261                           tblptru	equ	0xFF8
  8262                           tblptrh	equ	0xFF7
  8263                           tblptrl	equ	0xFF6
  8264                           tablat	equ	0xFF5
  8265                           prodh	equ	0xFF4
  8266                           prodl	equ	0xFF3
  8267                           intcon	equ	0xFF2
  8268                           postinc0	equ	0xFEE
  8269                           wreg	equ	0xFE8
  8270                           postdec1	equ	0xFE5
  8271                           fsr1l	equ	0xFE1
  8272                           indf2	equ	0xFDF
  8273                           postinc2	equ	0xFDE
  8274                           postdec2	equ	0xFDD
  8275                           fsr2h	equ	0xFDA
  8276                           fsr2l	equ	0xFD9
  8277                           status	equ	0xFD8
  8278                           
  8279                           	psect	intcode_body
  8280  002BAE                     __pintcode_body:
  8281                           	opt stack 15
  8282  002BAE                     int_func:
  8283                           	opt stack 15
  8284  002BAE  0006               	pop		; remove dummy address from shadow register refresh
  8285  002BB0  CFE9 F01F          	movff	fsr0l,??_SYS_InterruptHigh+2
  8286  002BB4  CFEA F020          	movff	fsr0h,??_SYS_InterruptHigh+3
  8287  002BB8  CFE1 F021          	movff	fsr1l,??_SYS_InterruptHigh+4
  8288  002BBC  CFE2 F022          	movff	fsr1h,??_SYS_InterruptHigh+5
  8289  002BC0  CFD9 F023          	movff	fsr2l,??_SYS_InterruptHigh+6
  8290  002BC4  CFDA F024          	movff	fsr2h,??_SYS_InterruptHigh+7
  8291  002BC8  CFF3 F025          	movff	prodl,??_SYS_InterruptHigh+8
  8292  002BCC  CFF4 F026          	movff	prodh,??_SYS_InterruptHigh+9
  8293  002BD0  CFF6 F027          	movff	tblptrl,??_SYS_InterruptHigh+10
  8294  002BD4  CFF7 F028          	movff	tblptrh,??_SYS_InterruptHigh+11
  8295  002BD8  CFF8 F029          	movff	tblptru,??_SYS_InterruptHigh+12
  8296  002BDC  CFF5 F02A          	movff	tablat,??_SYS_InterruptHigh+13
  8297                           
  8298                           ;system.c: 103: USBDeviceTasks();
  8299  002BE0  EC18  F00A         	call	_USBDeviceTasks	;wreg free
  8300  002BE4  C02A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
  8301  002BE8  C029  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
  8302  002BEC  C028  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
  8303  002BF0  C027  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
  8304  002BF4  C026  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
  8305  002BF8  C025  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
  8306  002BFC  C024  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
  8307  002C00  C023  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
  8308  002C04  C022  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
  8309  002C08  C021  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
  8310  002C0C  C020  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
  8311  002C10  C01F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
  8312  002C14  C01E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
  8313  002C18  C01D  FFFA         	movff	??_SYS_InterruptHigh,pclath
  8314  002C1C  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8315  002C1E  0011               	retfie		f
  8316  002C20                     __end_of_SYS_InterruptHigh:
  8317                           	opt stack 0
  8318                           pclatu	equ	0xFFB
  8319                           pclath	equ	0xFFA
  8320                           tblptru	equ	0xFF8
  8321                           tblptrh	equ	0xFF7
  8322                           tblptrl	equ	0xFF6
  8323                           tablat	equ	0xFF5
  8324                           prodh	equ	0xFF4
  8325                           prodl	equ	0xFF3
  8326                           intcon	equ	0xFF2
  8327                           postinc0	equ	0xFEE
  8328                           fsr0h	equ	0xFEA
  8329                           fsr0l	equ	0xFE9
  8330                           wreg	equ	0xFE8
  8331                           postdec1	equ	0xFE5
  8332                           fsr1h	equ	0xFE2
  8333                           fsr1l	equ	0xFE1
  8334                           indf2	equ	0xFDF
  8335                           postinc2	equ	0xFDE
  8336                           postdec2	equ	0xFDD
  8337                           fsr2h	equ	0xFDA
  8338                           fsr2l	equ	0xFD9
  8339                           status	equ	0xFD8
  8340                           
  8341 ;; *************** function _USBDeviceTasks *****************
  8342 ;; Defined at:
  8343 ;;		line 495 in file "../../../../../../framework/usb/src/usb_device.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;		None
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;  i               1   27[COMRAM] unsigned char 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;		None               void
  8350 ;; Registers used:
  8351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8357 ;;      Params:         0       0       0       0       0       0       0       0       0
  8358 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8360 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8361 ;;Total ram usage:        1 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:    8
  8364 ;; This function calls:
  8365 ;;		_USBCtrlEPAllowStatusStage
  8366 ;;		_USBCtrlEPService
  8367 ;;		_USBIncrement1msInternalTimers
  8368 ;;		_USBStallHandler
  8369 ;;		_USBSuspend
  8370 ;;		_USBWakeFromSuspend
  8371 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8372 ;;		i2_USBDeviceInit
  8373 ;; This function is called by:
  8374 ;;		_SYS_InterruptHigh
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text43
  8379  001430                     __ptext43:
  8380                           	opt stack 0
  8381  001430                     _USBDeviceTasks:
  8382                           	opt stack 15
  8383                           
  8384                           ;usb_device.c: 497: uint8_t i;
  8385                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  8386                           
  8387                           ;incstack = 0
  8388  001430  0455               	decf	_USBDeviceState,w,c	;volatile
  8389  001432  B4D8               	btfsc	status,2,c
  8390                           
  8391                           ;usb_device.c: 609: {
  8392                           ;usb_device.c: 619: if(!UCONbits.SE0)
  8393  001434  BA6D               	btfsc	3949,5,c	;volatile
  8394  001436  D006               	goto	i2l5607
  8395                           
  8396                           ;usb_device.c: 620: {
  8397                           ;usb_device.c: 626: {UIR = 0;};
  8398  001438  0E00               	movlw	0
  8399  00143A  6E68               	movwf	3944,c	;volatile
  8400                           
  8401                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  8402  00143C  8069               	bsf	3945,0,c	;volatile
  8403                           
  8404                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  8405  00143E  8869               	bsf	3945,4,c	;volatile
  8406                           
  8407                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  8408  001440  0E02               	movlw	2
  8409  001442  6E55               	movwf	_USBDeviceState,c	;volatile
  8410  001444                     i2l5607:
  8411                           
  8412                           ;usb_device.c: 635: }
  8413                           ;usb_device.c: 636: }
  8414                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  8415  001444  B468               	btfsc	3944,2,c	;volatile
  8416  001446  A469               	btfss	3945,2,c	;volatile
  8417  001448  D003               	goto	i2l5615
  8418                           
  8419                           ;usb_device.c: 653: {
  8420                           ;usb_device.c: 654: (UIR &= 0xFB);
  8421  00144A  9468               	bcf	3944,2,c	;volatile
  8422                           
  8423                           ;usb_device.c: 658: USBWakeFromSuspend();
  8424  00144C  EC2E  F018         	call	_USBWakeFromSuspend	;wreg free
  8425  001450                     i2l5615:
  8426                           
  8427                           ;usb_device.c: 660: }
  8428                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  8429  001450  A26D               	btfss	3949,1,c	;volatile
  8430  001452  D002               	goto	i2l770
  8431                           
  8432                           ;usb_device.c: 666: {
  8433                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  8434  001454  9AA1               	bcf	4001,5,c	;volatile
  8435                           
  8436                           ;usb_device.c: 668: return;
  8437  001456  0012               	return	
  8438  001458                     i2l770:
  8439                           
  8440                           ;usb_device.c: 669: }
  8441                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  8442  001458  B068               	btfsc	3944,0,c	;volatile
  8443  00145A  A069               	btfss	3945,0,c	;volatile
  8444  00145C  D006               	goto	i2l5629
  8445                           
  8446                           ;usb_device.c: 682: {
  8447                           ;usb_device.c: 683: USBDeviceInit();
  8448  00145E  EC76  F009         	call	i2_USBDeviceInit	;wreg free
  8449                           
  8450                           ;usb_device.c: 687: {PIE2bits.USBIE = 1;};
  8451  001462  8AA0               	bsf	4000,5,c	;volatile
  8452                           
  8453                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  8454  001464  0E04               	movlw	4
  8455  001466  6E55               	movwf	_USBDeviceState,c	;volatile
  8456                           
  8457                           ;usb_device.c: 699: (UIR &= 0xFE);
  8458  001468  9068               	bcf	3944,0,c	;volatile
  8459  00146A                     i2l5629:
  8460                           
  8461                           ;usb_device.c: 700: }
  8462                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  8463  00146A  B868               	btfsc	3944,4,c	;volatile
  8464  00146C  A869               	btfss	3945,4,c	;volatile
  8465  00146E  D002               	goto	i2l5635
  8466                           
  8467                           ;usb_device.c: 706: {
  8468                           ;usb_device.c: 712: USBSuspend();
  8469  001470  EC78  F018         	call	_USBSuspend	;wreg free
  8470  001474                     i2l5635:
  8471                           
  8472                           ;usb_device.c: 714: }
  8473                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  8474  001474  AC68               	btfss	3944,6,c	;volatile
  8475  001476  D01A               	goto	i2l5653
  8476                           
  8477                           ;usb_device.c: 727: {
  8478                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  8479  001478  AC69               	btfss	3945,6,c	;volatile
  8480  00147A  D00E               	goto	i2l5641
  8481                           
  8482                           ;usb_device.c: 730: {
  8483                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  8484  00147C  0E00               	movlw	0
  8485  00147E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  8486  001480  0E73               	movlw	115
  8487  001482  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  8488  001484  0E00               	movlw	0
  8489  001486  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  8490  001488  0E00               	movlw	0
  8491  00148A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  8492  00148C  0E00               	movlw	0
  8493  00148E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  8494  001490  0E01               	movlw	1
  8495  001492  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  8496  001494  ECA9  F014         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8497  001498                     i2l5641:
  8498                           
  8499                           ;usb_device.c: 732: }
  8500                           ;usb_device.c: 733: (UIR &= 0xBF);
  8501  001498  9C68               	bcf	3944,6,c	;volatile
  8502                           
  8503                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  8504  00149A  EC0E  F019         	call	_USBIncrement1msInternalTimers	;wreg free
  8505                           
  8506                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  8507  00149E  5058               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  8508  0014A0  A4D8               	btfss	status,2,c
  8509                           
  8510                           ;usb_device.c: 754: {
  8511                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  8512  0014A2  0658               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  8513                           
  8514                           ;usb_device.c: 756: }
  8515                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  8516  0014A4  5058               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
  8517  0014A6  B4D8               	btfsc	status,2,c
  8518                           
  8519                           ;usb_device.c: 763: {
  8520                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  8521  0014A8  ECD4  F00F         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8522  0014AC                     i2l5653:
  8523                           
  8524                           ;usb_device.c: 765: }
  8525                           ;usb_device.c: 767: }
  8526                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  8527  0014AC  BA68               	btfsc	3944,5,c	;volatile
  8528  0014AE  AA69               	btfss	3945,5,c	;volatile
  8529  0014B0  D002               	goto	i2l5659
  8530                           
  8531                           ;usb_device.c: 770: {
  8532                           ;usb_device.c: 771: USBStallHandler();
  8533  0014B2  ECF4  F016         	call	_USBStallHandler	;wreg free
  8534  0014B6                     i2l5659:
  8535                           
  8536                           ;usb_device.c: 772: }
  8537                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8538  0014B6  B268               	btfsc	3944,1,c	;volatile
  8539  0014B8  A269               	btfss	3945,1,c	;volatile
  8540  0014BA  D00F               	goto	i2l5667
  8541                           
  8542                           ;usb_device.c: 775: {
  8543                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  8544  0014BC  0E7F               	movlw	127
  8545  0014BE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  8546  0014C0  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  8547  0014C2  0E00               	movlw	0
  8548  0014C4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  8549  0014C6  0E00               	movlw	0
  8550  0014C8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  8551  0014CA  0E00               	movlw	0
  8552  0014CC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  8553  0014CE  0E01               	movlw	1
  8554  0014D0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  8555  0014D2  ECA9  F014         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8556                           
  8557                           ;usb_device.c: 777: {UEIR = 0;};
  8558  0014D6  0E00               	movlw	0
  8559  0014D8  6E6A               	movwf	3946,c	;volatile
  8560  0014DA                     i2l5667:
  8561                           
  8562                           ;usb_device.c: 785: }
  8563                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  8564  0014DA  0E04               	movlw	4
  8565  0014DC  6055               	cpfslt	_USBDeviceState,c	;volatile
  8566  0014DE  D002               	goto	i2l780
  8567                           
  8568                           ;usb_device.c: 793: {
  8569                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  8570  0014E0  9AA1               	bcf	4001,5,c	;volatile
  8571                           
  8572                           ;usb_device.c: 795: return;
  8573  0014E2  0012               	return	
  8574  0014E4                     i2l780:
  8575                           
  8576                           ;usb_device.c: 796: }
  8577                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  8578  0014E4  A669               	btfss	3945,3,c	;volatile
  8579  0014E6  D038               	goto	i2l781
  8580                           
  8581                           ;usb_device.c: 802: {
  8582                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  8583  0014E8  0E00               	movlw	0
  8584  0014EA  6E1C               	movwf	USBDeviceTasks@i,c
  8585  0014EC                     i2l5673:
  8586  0014EC  0E03               	movlw	3
  8587  0014EE  641C               	cpfsgt	USBDeviceTasks@i,c
  8588  0014F0  D001               	goto	i2l782
  8589  0014F2  D032               	goto	i2l781
  8590  0014F4                     i2l782:
  8591                           
  8592                           ;usb_device.c: 804: {
  8593                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  8594  0014F4  A668               	btfss	3944,3,c	;volatile
  8595  0014F6  D030               	goto	i2l781
  8596                           
  8597                           ;usb_device.c: 806: {
  8598                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  8599  0014F8  CF6C F05E          	movff	3948,_USTATcopy	;volatile
  8600                           
  8601                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  8602  0014FC  305E               	rrcf	_USTATcopy,w,c	;volatile
  8603  0014FE  32E8               	rrcf	wreg,f,c
  8604  001500  32E8               	rrcf	wreg,f,c
  8605  001502  0B0F               	andlw	15
  8606  001504  6E5A               	movwf	_endpoint_number,c	;volatile
  8607                           
  8608                           ;usb_device.c: 811: (UIR &= 0xF7);
  8609  001506  9668               	bcf	3944,3,c	;volatile
  8610                           
  8611                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  8612  001508  B45E               	btfsc	_USTATcopy,2,c	;volatile
  8613  00150A  D007               	goto	i2l5687
  8614                           
  8615                           ;usb_device.c: 817: {
  8616                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8617  00150C  505A               	movf	_endpoint_number,w,c	;volatile
  8618  00150E  0D01               	mullw	1
  8619  001510  0E4A               	movlw	low _ep_data_out
  8620  001512  24F3               	addwf	prodl,w,c
  8621  001514  6ED9               	movwf	fsr2l,c
  8622  001516  0E00               	movlw	high _ep_data_out
  8623  001518  D006               	goto	L2
  8624  00151A                     i2l5687:
  8625                           
  8626                           ;usb_device.c: 820: else
  8627                           ;usb_device.c: 821: {
  8628                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  8629  00151A  505A               	movf	_endpoint_number,w,c	;volatile
  8630  00151C  0D01               	mullw	1
  8631  00151E  0E48               	movlw	low _ep_data_in
  8632  001520  24F3               	addwf	prodl,w,c
  8633  001522  6ED9               	movwf	fsr2l,c
  8634  001524  0E00               	movlw	high _ep_data_in
  8635  001526                     L2:
  8636  001526  20F4               	addwfc	prodh,w,c
  8637  001528  6EDA               	movwf	fsr2h,c
  8638  00152A  70DF               	btg	indf2,0,c
  8639                           
  8640                           ;usb_device.c: 823: }
  8641                           ;usb_device.c: 828: if(endpoint_number == 0)
  8642  00152C  505A               	movf	_endpoint_number,w,c	;volatile
  8643  00152E  A4D8               	btfss	status,2,c
  8644  001530  D003               	goto	i2l5693
  8645                           
  8646                           ;usb_device.c: 829: {
  8647                           ;usb_device.c: 830: USBCtrlEPService();
  8648  001532  EC1F  F014         	call	_USBCtrlEPService	;wreg free
  8649                           
  8650                           ;usb_device.c: 831: }
  8651  001536  D00E               	goto	i2l5695
  8652  001538                     i2l5693:
  8653                           
  8654                           ;usb_device.c: 832: else
  8655                           ;usb_device.c: 833: {
  8656                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  8657  001538  0E00               	movlw	0
  8658  00153A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  8659  00153C  0E72               	movlw	114
  8660  00153E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  8661  001540  0E5E               	movlw	low _USTATcopy
  8662  001542  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  8663  001544  0E00               	movlw	high _USTATcopy
  8664  001546  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  8665  001548  0E00               	movlw	0
  8666  00154A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  8667  00154C  0E00               	movlw	0
  8668  00154E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  8669  001550  ECA9  F014         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8670  001554                     i2l5695:
  8671  001554  2A1C               	incf	USBDeviceTasks@i,f,c
  8672  001556  D7CA               	goto	i2l5673
  8673  001558                     i2l781:
  8674                           
  8675                           ;usb_device.c: 840: }
  8676                           ;usb_device.c: 841: }
  8677                           ;usb_device.c: 842: }
  8678                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  8679  001558  9AA1               	bcf	4001,5,c	;volatile
  8680  00155A  0012               	return		;funcret
  8681  00155C                     __end_of_USBDeviceTasks:
  8682                           	opt stack 0
  8683                           pclatu	equ	0xFFB
  8684                           pclath	equ	0xFFA
  8685                           tblptru	equ	0xFF8
  8686                           tblptrh	equ	0xFF7
  8687                           tblptrl	equ	0xFF6
  8688                           tablat	equ	0xFF5
  8689                           prodh	equ	0xFF4
  8690                           prodl	equ	0xFF3
  8691                           intcon	equ	0xFF2
  8692                           postinc0	equ	0xFEE
  8693                           fsr0h	equ	0xFEA
  8694                           fsr0l	equ	0xFE9
  8695                           wreg	equ	0xFE8
  8696                           postdec1	equ	0xFE5
  8697                           fsr1h	equ	0xFE2
  8698                           fsr1l	equ	0xFE1
  8699                           indf2	equ	0xFDF
  8700                           postinc2	equ	0xFDE
  8701                           postdec2	equ	0xFDD
  8702                           fsr2h	equ	0xFDA
  8703                           fsr2l	equ	0xFD9
  8704                           status	equ	0xFD8
  8705                           
  8706 ;; *************** function i2_USBDeviceInit *****************
  8707 ;; Defined at:
  8708 ;;		line 295 in file "../../../../../../framework/usb/src/usb_device.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;		None
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;		None               void
  8715 ;; Registers used:
  8716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0
  8723 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8725 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8726 ;;Total ram usage:        1 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:    1
  8729 ;; This function calls:
  8730 ;;		i2_memset
  8731 ;; This function is called by:
  8732 ;;		_USBDeviceTasks
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           	psect	text44
  8737  0012EC                     __ptext44:
  8738                           	opt stack 0
  8739  0012EC                     i2_USBDeviceInit:
  8740                           	opt stack 21
  8741                           
  8742                           ;usb_device.c: 297: uint8_t i;
  8743                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8744                           
  8745                           ;incstack = 0
  8746  0012EC  9AA0               	bcf	4000,5,c	;volatile
  8747                           
  8748                           ;usb_device.c: 303: ;
  8749                           ;usb_device.c: 306: {UEIR = 0;};
  8750  0012EE  0E00               	movlw	0
  8751  0012F0  6E6A               	movwf	3946,c	;volatile
  8752                           
  8753                           ;usb_device.c: 309: {UIR = 0;};
  8754  0012F2  0E00               	movlw	0
  8755  0012F4  6E68               	movwf	3944,c	;volatile
  8756                           
  8757                           ;usb_device.c: 312: UEP0 = 0;
  8758  0012F6  0E00               	movlw	0
  8759  0012F8  6E70               	movwf	3952,c	;volatile
  8760                           
  8761                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(1));;
  8762  0012FA  0E71               	movlw	113
  8763  0012FC  6E01               	movwf	i2memset@p1,c
  8764  0012FE  0E0F               	movlw	15
  8765  001300  6E02               	movwf	i2memset@p1+1,c
  8766  001302  0E00               	movlw	0
  8767  001304  6E04               	movwf	i2memset@c+1,c
  8768  001306  0E00               	movlw	0
  8769  001308  6E03               	movwf	i2memset@c,c
  8770  00130A  0E00               	movlw	0
  8771  00130C  6E06               	movwf	i2memset@n+1,c
  8772  00130E  0E01               	movlw	1
  8773  001310  6E05               	movwf	i2memset@n,c
  8774  001312  ECD2  F018         	call	i2_memset	;wreg free
  8775                           
  8776                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8777  001316  0E16               	movlw	22
  8778  001318  6E6F               	movwf	3951,c	;volatile
  8779  00131A  0E9F               	movlw	159
  8780  00131C  6E6B               	movwf	3947,c	;volatile
  8781  00131E  0E7B               	movlw	123
  8782  001320  6E69               	movwf	3945,c	;volatile
  8783                           
  8784                           ;usb_device.c: 319: ;
  8785                           ;usb_device.c: 322: ;
  8786                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8787  001322  0E00               	movlw	0
  8788  001324  6E09               	movwf	i2USBDeviceInit@i,c
  8789  001326                     i2l5519:
  8790  001326  0E07               	movlw	7
  8791  001328  6409               	cpfsgt	i2USBDeviceInit@i,c
  8792  00132A  D001               	goto	i2l5523
  8793  00132C  D00E               	goto	i2l759
  8794  00132E                     i2l5523:
  8795                           
  8796                           ;usb_device.c: 326: {
  8797                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8798  00132E  5009               	movf	i2USBDeviceInit@i,w,c
  8799  001330  0D04               	mullw	4
  8800  001332  0E00               	movlw	0
  8801  001334  24F3               	addwf	prodl,w,c
  8802  001336  6ED9               	movwf	fsr2l,c
  8803  001338  0E04               	movlw	4
  8804  00133A  20F4               	addwfc	prodh,w,c
  8805  00133C  6EDA               	movwf	fsr2h,c
  8806  00133E  6ADE               	clrf	postinc2,c
  8807  001340  6ADE               	clrf	postinc2,c
  8808  001342  6ADE               	clrf	postinc2,c
  8809  001344  6ADD               	clrf	postdec2,c
  8810  001346  2A09               	incf	i2USBDeviceInit@i,f,c
  8811  001348  D7EE               	goto	i2l5519
  8812  00134A                     i2l759:
  8813                           
  8814                           ;usb_device.c: 328: }
  8815                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8816  00134A  8C6D               	bsf	3949,6,c	;volatile
  8817                           
  8818                           ;usb_device.c: 334: UADDR = 0x00;
  8819  00134C  0E00               	movlw	0
  8820  00134E  6E6E               	movwf	3950,c	;volatile
  8821                           
  8822                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8823  001350  986D               	bcf	3949,4,c	;volatile
  8824                           
  8825                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8826  001352  9C6D               	bcf	3949,6,c	;volatile
  8827  001354                     i2l5535:
  8828                           
  8829                           ;usb_device.c: 344: {
  8830                           ;usb_device.c: 345: (UIR &= 0xF7);
  8831  001354  9668               	bcf	3944,3,c	;volatile
  8832                           
  8833                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8834  001356  0E00               	movlw	0
  8835  001358  6E3F               	movwf	_inPipes+3,c	;volatile
  8836                           
  8837                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8838  00135A  0E00               	movlw	0
  8839  00135C  6E37               	movwf	_outPipes+3,c	;volatile
  8840                           
  8841                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8842  00135E  0E00               	movlw	0
  8843  001360  6E39               	movwf	_outPipes+5,c	;volatile
  8844  001362  0E00               	movlw	0
  8845  001364  6E38               	movwf	_outPipes+4,c	;volatile
  8846                           
  8847                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8848  001366  B668               	btfsc	3944,3,c	;volatile
  8849  001368  D7F5               	goto	i2l5535
  8850                           
  8851                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8852  00136A  0E01               	movlw	1
  8853  00136C  6E56               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8854                           
  8855                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8856  00136E  0E01               	movlw	1
  8857  001370  6E57               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8858                           
  8859                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8860  001372  0E00               	movlw	0
  8861  001374  6E53               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8862                           
  8863                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8864  001376  0E00               	movlw	0
  8865  001378  0100               	movlb	0	; () banked
  8866  00137A  6FF5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  8867                           
  8868                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8869  00137C  0E00               	movlw	0
  8870  00137E  6E52               	movwf	_USBBusIsSuspended,c	;volatile
  8871                           
  8872                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(1+1u); i++)
  8873  001380  0E00               	movlw	0
  8874  001382  6E09               	movwf	i2USBDeviceInit@i,c
  8875  001384                     i2l5547:
  8876                           
  8877                           ; BSR set to: 0
  8878  001384  0E01               	movlw	1
  8879  001386  6409               	cpfsgt	i2USBDeviceInit@i,c
  8880  001388  D001               	goto	i2l5551
  8881  00138A  D02E               	goto	i2l5557
  8882  00138C                     i2l5551:
  8883                           
  8884                           ;usb_device.c: 364: {
  8885                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8886  00138C  5009               	movf	i2USBDeviceInit@i,w,c
  8887  00138E  0D02               	mullw	2
  8888  001390  0E42               	movlw	low _pBDTEntryIn
  8889  001392  24F3               	addwf	prodl,w,c
  8890  001394  6ED9               	movwf	fsr2l,c
  8891  001396  0E00               	movlw	high _pBDTEntryIn
  8892  001398  20F4               	addwfc	prodh,w,c
  8893  00139A  6EDA               	movwf	fsr2h,c
  8894  00139C  0E00               	movlw	0
  8895  00139E  6EDE               	movwf	postinc2,c
  8896  0013A0  0E00               	movlw	0
  8897  0013A2  6EDD               	movwf	postdec2,c
  8898                           
  8899                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8900  0013A4  5009               	movf	i2USBDeviceInit@i,w,c
  8901  0013A6  0D02               	mullw	2
  8902  0013A8  0ED3               	movlw	low _pBDTEntryOut
  8903  0013AA  24F3               	addwf	prodl,w,c
  8904  0013AC  6ED9               	movwf	fsr2l,c
  8905  0013AE  0E00               	movlw	high _pBDTEntryOut
  8906  0013B0  20F4               	addwfc	prodh,w,c
  8907  0013B2  6EDA               	movwf	fsr2h,c
  8908  0013B4  0E00               	movlw	0
  8909  0013B6  6EDE               	movwf	postinc2,c
  8910  0013B8  0E00               	movlw	0
  8911  0013BA  6EDD               	movwf	postdec2,c
  8912                           
  8913                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8914  0013BC  5009               	movf	i2USBDeviceInit@i,w,c
  8915  0013BE  0D01               	mullw	1
  8916  0013C0  0E48               	movlw	low _ep_data_in
  8917  0013C2  24F3               	addwf	prodl,w,c
  8918  0013C4  6ED9               	movwf	fsr2l,c
  8919  0013C6  0E00               	movlw	high _ep_data_in
  8920  0013C8  20F4               	addwfc	prodh,w,c
  8921  0013CA  6EDA               	movwf	fsr2h,c
  8922  0013CC  0E00               	movlw	0
  8923  0013CE  6EDF               	movwf	indf2,c
  8924                           
  8925                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8926  0013D0  5009               	movf	i2USBDeviceInit@i,w,c
  8927  0013D2  0D01               	mullw	1
  8928  0013D4  0E4A               	movlw	low _ep_data_out
  8929  0013D6  24F3               	addwf	prodl,w,c
  8930  0013D8  6ED9               	movwf	fsr2l,c
  8931  0013DA  0E00               	movlw	high _ep_data_out
  8932  0013DC  20F4               	addwfc	prodh,w,c
  8933  0013DE  6EDA               	movwf	fsr2h,c
  8934  0013E0  0E00               	movlw	0
  8935  0013E2  6EDF               	movwf	indf2,c
  8936  0013E4  2A09               	incf	i2USBDeviceInit@i,f,c
  8937  0013E6  D7CE               	goto	i2l5547
  8938  0013E8                     i2l5557:
  8939                           
  8940                           ;usb_device.c: 369: }
  8941                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8942  0013E8  0E08               	movlw	8
  8943  0013EA  6E42               	movwf	_pBDTEntryIn,c
  8944  0013EC  0E04               	movlw	4
  8945  0013EE  6E43               	movwf	_pBDTEntryIn+1,c
  8946                           
  8947                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8948  0013F0  0E16               	movlw	22
  8949  0013F2  6E70               	movwf	3952,c	;volatile
  8950                           
  8951                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8952  0013F4  0E04               	movlw	4
  8953  0013F6  0104               	movlb	4	; () banked
  8954  0013F8  6F03               	movwf	3,b	;volatile
  8955  0013FA  0E20               	movlw	32
  8956  0013FC  6F02               	movwf	2,b	;volatile
  8957                           
  8958                           ; BSR set to: 4
  8959                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8960  0013FE  0E08               	movlw	8
  8961  001400  0104               	movlb	4	; () banked
  8962  001402  6F01               	movwf	1,b	;volatile
  8963                           
  8964                           ; BSR set to: 4
  8965                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8966  001404  0E04               	movlw	4
  8967  001406  0104               	movlb	4	; () banked
  8968  001408  6F00               	movwf	0,b	;volatile
  8969                           
  8970                           ; BSR set to: 4
  8971                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8972  00140A  0104               	movlb	4	; () banked
  8973  00140C  8F00               	bsf	0,7,b	;volatile
  8974                           
  8975                           ; BSR set to: 4
  8976                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8977  00140E  0E00               	movlw	0
  8978  001410  6E5C               	movwf	_USBActiveConfiguration,c	;volatile
  8979                           
  8980                           ; BSR set to: 4
  8981                           ;usb_device.c: 384: USB1msTickCount = 0;
  8982  001412  0E00               	movlw	0
  8983  001414  0100               	movlb	0	; () banked
  8984  001416  6FCF               	movwf	_USB1msTickCount& (0+255),b	;volatile
  8985  001418  0E00               	movlw	0
  8986  00141A  6FD0               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  8987  00141C  0E00               	movlw	0
  8988  00141E  6FD1               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  8989  001420  0E00               	movlw	0
  8990  001422  6FD2               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8994  001424  0E00               	movlw	0
  8995  001426  0100               	movlb	0	; () banked
  8996  001428  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  9000  00142A  0E00               	movlw	0
  9001  00142C  6E55               	movwf	_USBDeviceState,c	;volatile
  9002                           
  9003                           ; BSR set to: 0
  9004  00142E  0012               	return		;funcret
  9005  001430                     __end_ofi2_USBDeviceInit:
  9006                           	opt stack 0
  9007                           pclatu	equ	0xFFB
  9008                           pclath	equ	0xFFA
  9009                           tblptru	equ	0xFF8
  9010                           tblptrh	equ	0xFF7
  9011                           tblptrl	equ	0xFF6
  9012                           tablat	equ	0xFF5
  9013                           prodh	equ	0xFF4
  9014                           prodl	equ	0xFF3
  9015                           intcon	equ	0xFF2
  9016                           postinc0	equ	0xFEE
  9017                           fsr0h	equ	0xFEA
  9018                           fsr0l	equ	0xFE9
  9019                           wreg	equ	0xFE8
  9020                           postdec1	equ	0xFE5
  9021                           fsr1h	equ	0xFE2
  9022                           fsr1l	equ	0xFE1
  9023                           indf2	equ	0xFDF
  9024                           postinc2	equ	0xFDE
  9025                           postdec2	equ	0xFDD
  9026                           fsr2h	equ	0xFDA
  9027                           fsr2l	equ	0xFD9
  9028                           status	equ	0xFD8
  9029                           
  9030 ;; *************** function _USBWakeFromSuspend *****************
  9031 ;; Defined at:
  9032 ;;		line 2321 in file "../../../../../../framework/usb/src/usb_device.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;		None
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;		None
  9037 ;; Return value:  Size  Location     Type
  9038 ;;		None               void
  9039 ;; Registers used:
  9040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9046 ;;      Params:         0       0       0       0       0       0       0       0       0
  9047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9049 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9050 ;;Total ram usage:        0 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    4
  9053 ;; This function calls:
  9054 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9055 ;; This function is called by:
  9056 ;;		_USBDeviceTasks
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           	psect	text45
  9061  00305C                     __ptext45:
  9062                           	opt stack 0
  9063  00305C                     _USBWakeFromSuspend:
  9064                           	opt stack 18
  9065                           
  9066                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;incstack = 0
  9070  00305C  0E00               	movlw	0
  9071  00305E  6E52               	movwf	_USBBusIsSuspended,c	;volatile
  9072                           
  9073                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  9074  003060  0E00               	movlw	0
  9075  003062  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  9076  003064  0E74               	movlw	116
  9077  003066  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  9078  003068  0E00               	movlw	0
  9079  00306A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  9080  00306C  0E00               	movlw	0
  9081  00306E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  9082  003070  0E00               	movlw	0
  9083  003072  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  9084  003074  0E00               	movlw	0
  9085  003076  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  9086  003078  ECA9  F014         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9087                           
  9088                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  9089  00307C  926D               	bcf	3949,1,c	;volatile
  9090                           
  9091                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  9092  00307E  9469               	bcf	3945,2,c	;volatile
  9093                           
  9094                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  9095  003080  D001               	goto	i2l5457
  9096  003082                     i2l5455:
  9097                           
  9098                           ;usb_device.c: 2361: {
  9099                           ;usb_device.c: 2362: (UIR &= 0xFB);
  9100  003082  9468               	bcf	3944,2,c	;volatile
  9101  003084                     i2l5457:
  9102  003084  B468               	btfsc	3944,2,c	;volatile
  9103  003086  D7FD               	goto	i2l5455
  9104                           
  9105                           ;usb_device.c: 2363: }
  9106                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  9107  003088  0E00               	movlw	0
  9108  00308A  0100               	movlb	0	; () banked
  9109  00308C  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  9110                           
  9111                           ; BSR set to: 0
  9112  00308E  0012               	return		;funcret
  9113  003090                     __end_of_USBWakeFromSuspend:
  9114                           	opt stack 0
  9115                           pclatu	equ	0xFFB
  9116                           pclath	equ	0xFFA
  9117                           tblptru	equ	0xFF8
  9118                           tblptrh	equ	0xFF7
  9119                           tblptrl	equ	0xFF6
  9120                           tablat	equ	0xFF5
  9121                           prodh	equ	0xFF4
  9122                           prodl	equ	0xFF3
  9123                           intcon	equ	0xFF2
  9124                           postinc0	equ	0xFEE
  9125                           fsr0h	equ	0xFEA
  9126                           fsr0l	equ	0xFE9
  9127                           wreg	equ	0xFE8
  9128                           postdec1	equ	0xFE5
  9129                           fsr1h	equ	0xFE2
  9130                           fsr1l	equ	0xFE1
  9131                           indf2	equ	0xFDF
  9132                           postinc2	equ	0xFDE
  9133                           postdec2	equ	0xFDD
  9134                           fsr2h	equ	0xFDA
  9135                           fsr2l	equ	0xFD9
  9136                           status	equ	0xFD8
  9137                           
  9138 ;; *************** function _USBSuspend *****************
  9139 ;; Defined at:
  9140 ;;		line 2263 in file "../../../../../../framework/usb/src/usb_device.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;		None
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;		None
  9145 ;; Return value:  Size  Location     Type
  9146 ;;		None               void
  9147 ;; Registers used:
  9148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9154 ;;      Params:         0       0       0       0       0       0       0       0       0
  9155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9157 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9158 ;;Total ram usage:        0 bytes
  9159 ;; Hardware stack levels used:    1
  9160 ;; Hardware stack levels required when called:    4
  9161 ;; This function calls:
  9162 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9163 ;; This function is called by:
  9164 ;;		_USBDeviceTasks
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text46
  9169  0030F0                     __ptext46:
  9170                           	opt stack 0
  9171  0030F0                     _USBSuspend:
  9172                           	opt stack 18
  9173                           
  9174                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;incstack = 0
  9178  0030F0  8469               	bsf	3945,2,c	;volatile
  9179                           
  9180                           ;usb_device.c: 2289: (UIR &= 0xEF);
  9181  0030F2  9868               	bcf	3944,4,c	;volatile
  9182                           
  9183                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  9184  0030F4  826D               	bsf	3949,1,c	;volatile
  9185                           
  9186                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  9187  0030F6  0E01               	movlw	1
  9188  0030F8  6E52               	movwf	_USBBusIsSuspended,c	;volatile
  9189                           
  9190                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  9191  0030FA  0E00               	movlw	0
  9192  0030FC  0100               	movlb	0	; () banked
  9193  0030FE  6FF6               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  9197  003100  0E00               	movlw	0
  9198  003102  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  9199  003104  0E75               	movlw	117
  9200  003106  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  9201  003108  0E00               	movlw	0
  9202  00310A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  9203  00310C  0E00               	movlw	0
  9204  00310E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  9205  003110  0E00               	movlw	0
  9206  003112  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  9207  003114  0E00               	movlw	0
  9208  003116  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  9209  003118  ECA9  F014         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9210  00311C  0012               	return		;funcret
  9211  00311E                     __end_of_USBSuspend:
  9212                           	opt stack 0
  9213                           pclatu	equ	0xFFB
  9214                           pclath	equ	0xFFA
  9215                           tblptru	equ	0xFF8
  9216                           tblptrh	equ	0xFF7
  9217                           tblptrl	equ	0xFF6
  9218                           tablat	equ	0xFF5
  9219                           prodh	equ	0xFF4
  9220                           prodl	equ	0xFF3
  9221                           intcon	equ	0xFF2
  9222                           postinc0	equ	0xFEE
  9223                           fsr0h	equ	0xFEA
  9224                           fsr0l	equ	0xFE9
  9225                           wreg	equ	0xFE8
  9226                           postdec1	equ	0xFE5
  9227                           fsr1h	equ	0xFE2
  9228                           fsr1l	equ	0xFE1
  9229                           indf2	equ	0xFDF
  9230                           postinc2	equ	0xFDE
  9231                           postdec2	equ	0xFDD
  9232                           fsr2h	equ	0xFDA
  9233                           fsr2l	equ	0xFD9
  9234                           status	equ	0xFD8
  9235                           
  9236 ;; *************** function _USBStallHandler *****************
  9237 ;; Defined at:
  9238 ;;		line 2220 in file "../../../../../../framework/usb/src/usb_device.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;		None               void
  9245 ;; Registers used:
  9246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9252 ;;      Params:         0       0       0       0       0       0       0       0       0
  9253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9254 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9255 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9256 ;;Total ram usage:        1 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_USBDeviceTasks
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           	psect	text47
  9266  002DE8                     __ptext47:
  9267                           	opt stack 0
  9268  002DE8                     _USBStallHandler:
  9269                           	opt stack 22
  9270                           
  9271                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  9272                           
  9273                           ;incstack = 0
  9274  002DE8  A070               	btfss	3952,0,c	;volatile
  9275  002DEA  D01D               	goto	i2l920
  9276                           
  9277                           ;usb_device.c: 2233: {
  9278                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  9279  002DEC  C04C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9280  002DF0  C04D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9281  002DF4  0E80               	movlw	128
  9282  002DF6  18DE               	xorwf	postinc2,w,c
  9283  002DF8  A4D8               	btfss	status,2,c
  9284  002DFA  D014               	goto	i2l3251
  9285  002DFC  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
  9286  002E00  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9287  002E04  0E84               	movlw	132
  9288  002E06  18DE               	xorwf	postinc2,w,c
  9289  002E08  A4D8               	btfss	status,2,c
  9290  002E0A  D00C               	goto	i2l3251
  9291                           
  9292                           ;usb_device.c: 2236: {
  9293                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9294  002E0C  C04C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9295  002E10  C04D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9296  002E14  0E0C               	movlw	12
  9297  002E16  6EDF               	movwf	indf2,c
  9298                           
  9299                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9300  002E18  C04C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9301  002E1C  C04D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9302  002E20  0E00               	movlw	0
  9303  002E22  8EDB               	bsf	plusw2,7,c
  9304  002E24                     i2l3251:
  9305                           
  9306                           ;usb_device.c: 2240: }
  9307                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  9308  002E24  9070               	bcf	3952,0,c	;volatile
  9309  002E26                     i2l920:
  9310                           
  9311                           ;usb_device.c: 2242: }
  9312                           ;usb_device.c: 2244: (UIR &= 0xDF);
  9313  002E26  9A68               	bcf	3944,5,c	;volatile
  9314  002E28  0012               	return		;funcret
  9315  002E2A                     __end_of_USBStallHandler:
  9316                           	opt stack 0
  9317                           pclatu	equ	0xFFB
  9318                           pclath	equ	0xFFA
  9319                           tblptru	equ	0xFF8
  9320                           tblptrh	equ	0xFF7
  9321                           tblptrl	equ	0xFF6
  9322                           tablat	equ	0xFF5
  9323                           prodh	equ	0xFF4
  9324                           prodl	equ	0xFF3
  9325                           intcon	equ	0xFF2
  9326                           postinc0	equ	0xFEE
  9327                           fsr0h	equ	0xFEA
  9328                           fsr0l	equ	0xFE9
  9329                           wreg	equ	0xFE8
  9330                           postdec1	equ	0xFE5
  9331                           fsr1h	equ	0xFE2
  9332                           fsr1l	equ	0xFE1
  9333                           indf2	equ	0xFDF
  9334                           postinc2	equ	0xFDE
  9335                           postdec2	equ	0xFDD
  9336                           plusw2	equ	0xFDB
  9337                           fsr2h	equ	0xFDA
  9338                           fsr2l	equ	0xFD9
  9339                           status	equ	0xFD8
  9340                           
  9341 ;; *************** function _USBIncrement1msInternalTimers *****************
  9342 ;; Defined at:
  9343 ;;		line 3042 in file "../../../../../../framework/usb/src/usb_device.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;		None
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;		None
  9348 ;; Return value:  Size  Location     Type
  9349 ;;		None               void
  9350 ;; Registers used:
  9351 ;;		wreg, status,2, status,0
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9357 ;;      Params:         0       0       0       0       0       0       0       0       0
  9358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9361 ;;Total ram usage:        0 bytes
  9362 ;; Hardware stack levels used:    1
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		_USBDeviceTasks
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text48
  9371  00321C                     __ptext48:
  9372                           	opt stack 0
  9373  00321C                     _USBIncrement1msInternalTimers:
  9374                           	opt stack 22
  9375                           
  9376                           ;usb_device.c: 3050: USB1msTickCount++;
  9377                           
  9378                           ;incstack = 0
  9379  00321C  0E01               	movlw	1
  9380  00321E  0100               	movlb	0	; () banked
  9381  003220  27CF               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
  9382  003222  0E00               	movlw	0
  9383  003224  23D0               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
  9384  003226  23D1               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
  9385  003228  23D2               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  9389  00322A  5052               	movf	_USBBusIsSuspended,w,c	;volatile
  9390  00322C  A4D8               	btfss	status,2,c
  9391  00322E  0012               	return	
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;usb_device.c: 3052: {
  9395                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  9396  003230  0100               	movlb	0	; () banked
  9397  003232  2BF6               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
  9398                           
  9399                           ; BSR set to: 0
  9400                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  9401  003234  0100               	movlb	0	; () banked
  9402  003236  51F6               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
  9403  003238  A4D8               	btfss	status,2,c
  9404  00323A  0012               	return	
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;usb_device.c: 3056: {
  9408                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  9409  00323C  0100               	movlb	0	; () banked
  9410  00323E  69F6               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  9411                           
  9412                           ; BSR set to: 0
  9413  003240  0012               	return	
  9414  003242                     __end_of_USBIncrement1msInternalTimers:
  9415                           	opt stack 0
  9416                           pclatu	equ	0xFFB
  9417                           pclath	equ	0xFFA
  9418                           tblptru	equ	0xFF8
  9419                           tblptrh	equ	0xFF7
  9420                           tblptrl	equ	0xFF6
  9421                           tablat	equ	0xFF5
  9422                           prodh	equ	0xFF4
  9423                           prodl	equ	0xFF3
  9424                           intcon	equ	0xFF2
  9425                           postinc0	equ	0xFEE
  9426                           fsr0h	equ	0xFEA
  9427                           fsr0l	equ	0xFE9
  9428                           wreg	equ	0xFE8
  9429                           postdec1	equ	0xFE5
  9430                           fsr1h	equ	0xFE2
  9431                           fsr1l	equ	0xFE1
  9432                           indf2	equ	0xFDF
  9433                           postinc2	equ	0xFDE
  9434                           postdec2	equ	0xFDD
  9435                           plusw2	equ	0xFDB
  9436                           fsr2h	equ	0xFDA
  9437                           fsr2l	equ	0xFD9
  9438                           status	equ	0xFD8
  9439                           
  9440 ;; *************** function _USBCtrlEPService *****************
  9441 ;; Defined at:
  9442 ;;		line 2390 in file "../../../../../../framework/usb/src/usb_device.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;		None
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;		None
  9447 ;; Return value:  Size  Location     Type
  9448 ;;		None               void
  9449 ;; Registers used:
  9450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9456 ;;      Params:         0       0       0       0       0       0       0       0       0
  9457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9458 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9459 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9460 ;;Total ram usage:        1 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:    7
  9463 ;; This function calls:
  9464 ;;		_USBCtrlTrfInHandler
  9465 ;;		_USBCtrlTrfOutHandler
  9466 ;;		_USBCtrlTrfSetupHandler
  9467 ;;		_memcpy
  9468 ;; This function is called by:
  9469 ;;		_USBDeviceTasks
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text49
  9474  00283E                     __ptext49:
  9475                           	opt stack 0
  9476  00283E                     _USBCtrlEPService:
  9477                           	opt stack 15
  9478                           
  9479                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;incstack = 0
  9483  00283E  0E2D               	movlw	45
  9484  002840  6E58               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  9485                           
  9486                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  9487  002842  C05E  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  9488  002846  0EFD               	movlw	253
  9489  002848  161B               	andwf	??_USBCtrlEPService,f,c
  9490  00284A  A4D8               	btfss	status,2,c
  9491  00284C  D038               	goto	i2l5501
  9492                           
  9493                           ;usb_device.c: 2401: {
  9494                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9495  00284E  C05E  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
  9496  002852  90D8               	bcf	status,0,c
  9497  002854  321B               	rrcf	??_USBCtrlEPService,f,c
  9498  002856  0E3F               	movlw	63
  9499  002858  161B               	andwf	??_USBCtrlEPService,f,c
  9500  00285A  501B               	movf	??_USBCtrlEPService,w,c
  9501  00285C  0D04               	mullw	4
  9502  00285E  0E00               	movlw	0
  9503  002860  24F3               	addwf	prodl,w,c
  9504  002862  6E4C               	movwf	_pBDTEntryEP0OutCurrent,c
  9505  002864  0E04               	movlw	4
  9506  002866  20F4               	addwfc	prodh,w,c
  9507  002868  6E4D               	movwf	_pBDTEntryEP0OutCurrent+1,c
  9508                           
  9509                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9510  00286A  C04C  F04E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9511  00286E  C04D  F04F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9512                           
  9513                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9514  002872  0E04               	movlw	4
  9515  002874  1A4E               	xorwf	_pBDTEntryEP0OutNext,f,c
  9516                           
  9517                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9518  002876  C04C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9519  00287A  C04D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9520  00287E  30DF               	rrcf	indf2,w,c
  9521  002880  32E8               	rrcf	wreg,f,c
  9522  002882  0B0F               	andlw	15
  9523  002884  0A0D               	xorlw	13
  9524  002886  A4D8               	btfss	status,2,c
  9525  002888  D017               	goto	i2l5499
  9526                           
  9527                           ;usb_device.c: 2418: {
  9528                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  9529  00288A  0E20               	movlw	32
  9530  00288C  6E01               	movwf	memcpy@d1,c
  9531  00288E  0E04               	movlw	4
  9532  002890  6E02               	movwf	memcpy@d1+1,c
  9533  002892  EE20 F002          	lfsr	2,2
  9534  002896  504C               	movf	_pBDTEntryEP0OutCurrent,w,c
  9535  002898  26D9               	addwf	fsr2l,f,c
  9536  00289A  504D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  9537  00289C  22DA               	addwfc	fsr2h,f,c
  9538  00289E  CFDE F003          	movff	postinc2,memcpy@s1
  9539  0028A2  CFDD F004          	movff	postdec2,memcpy@s1+1
  9540  0028A6  0E00               	movlw	0
  9541  0028A8  6E06               	movwf	memcpy@n+1,c
  9542  0028AA  0E08               	movlw	8
  9543  0028AC  6E05               	movwf	memcpy@n,c
  9544  0028AE  EC15  F017         	call	_memcpy	;wreg free
  9545                           
  9546                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  9547  0028B2  EC67  F014         	call	_USBCtrlTrfSetupHandler	;wreg free
  9548                           
  9549                           ;usb_device.c: 2427: }
  9550  0028B6  0012               	return	
  9551  0028B8                     i2l5499:
  9552                           
  9553                           ;usb_device.c: 2428: else
  9554                           ;usb_device.c: 2429: {
  9555                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  9556  0028B8  EC76  F016         	call	_USBCtrlTrfOutHandler	;wreg free
  9557                           
  9558                           ;usb_device.c: 2432: }
  9559                           ;usb_device.c: 2433: }
  9560  0028BC  0012               	return	
  9561  0028BE                     i2l5501:
  9562                           
  9563                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  9564  0028BE  505E               	movf	_USTATcopy,w,c	;volatile
  9565  0028C0  0BFD               	andlw	253
  9566  0028C2  0A04               	xorlw	4
  9567  0028C4  A4D8               	btfss	status,2,c
  9568  0028C6  0012               	return	
  9569                           
  9570                           ;usb_device.c: 2435: {
  9571                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  9572  0028C8  EC92  F010         	call	_USBCtrlTrfInHandler	;wreg free
  9573  0028CC  0012               	return	
  9574  0028CE                     __end_of_USBCtrlEPService:
  9575                           	opt stack 0
  9576                           pclatu	equ	0xFFB
  9577                           pclath	equ	0xFFA
  9578                           tblptru	equ	0xFF8
  9579                           tblptrh	equ	0xFF7
  9580                           tblptrl	equ	0xFF6
  9581                           tablat	equ	0xFF5
  9582                           prodh	equ	0xFF4
  9583                           prodl	equ	0xFF3
  9584                           intcon	equ	0xFF2
  9585                           postinc0	equ	0xFEE
  9586                           fsr0h	equ	0xFEA
  9587                           fsr0l	equ	0xFE9
  9588                           wreg	equ	0xFE8
  9589                           postdec1	equ	0xFE5
  9590                           fsr1h	equ	0xFE2
  9591                           fsr1l	equ	0xFE1
  9592                           indf2	equ	0xFDF
  9593                           postinc2	equ	0xFDE
  9594                           postdec2	equ	0xFDD
  9595                           plusw2	equ	0xFDB
  9596                           fsr2h	equ	0xFDA
  9597                           fsr2l	equ	0xFD9
  9598                           status	equ	0xFD8
  9599                           
  9600 ;; *************** function _memcpy *****************
  9601 ;; Defined at:
  9602 ;;		line 11 in file "/Applications/microchip/xc8/v1.35/sources/common/memcpy.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  d1              2    0[COMRAM] PTR void 
  9605 ;;		 -> SetupPkt(8), 
  9606 ;;  s1              2    2[COMRAM] PTR const void 
  9607 ;;		 -> RAM(2047), CtrlTrfData(8), SetupPkt(8), mouseReport(3), 
  9608 ;;  n               2    4[COMRAM] unsigned int 
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;  s               2    8[COMRAM] PTR const unsigned char 
  9611 ;;		 -> RAM(2047), CtrlTrfData(8), SetupPkt(8), mouseReport(3), 
  9612 ;;  d               2    6[COMRAM] PTR unsigned char 
  9613 ;;		 -> SetupPkt(8), 
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  2    0[COMRAM] PTR void 
  9616 ;; Registers used:
  9617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9623 ;;      Params:         6       0       0       0       0       0       0       0       0
  9624 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9626 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9627 ;;Total ram usage:       10 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; This function calls:
  9630 ;;		Nothing
  9631 ;; This function is called by:
  9632 ;;		_USBCtrlEPService
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text50
  9637  002E2A                     __ptext50:
  9638                           	opt stack 0
  9639  002E2A                     _memcpy:
  9640                           	opt stack 21
  9641                           
  9642                           ;incstack = 0
  9643  002E2A  C003  F009         	movff	memcpy@s1,memcpy@s
  9644  002E2E  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  9645  002E32  C001  F007         	movff	memcpy@d1,memcpy@d
  9646  002E36  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  9647  002E3A  D00E               	goto	i2l5145
  9648  002E3C                     i2l5139:
  9649  002E3C  C009  FFD9         	movff	memcpy@s,fsr2l
  9650  002E40  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  9651  002E44  C007  FFE1         	movff	memcpy@d,fsr1l
  9652  002E48  C008  FFE2         	movff	memcpy@d+1,fsr1h
  9653  002E4C  CFDF FFE7          	movff	indf2,indf1
  9654  002E50  4A09               	infsnz	memcpy@s,f,c
  9655  002E52  2A0A               	incf	memcpy@s+1,f,c
  9656  002E54  4A07               	infsnz	memcpy@d,f,c
  9657  002E56  2A08               	incf	memcpy@d+1,f,c
  9658  002E58                     i2l5145:
  9659  002E58  0605               	decf	memcpy@n,f,c
  9660  002E5A  A0D8               	btfss	status,0,c
  9661  002E5C  0606               	decf	memcpy@n+1,f,c
  9662  002E5E  2805               	incf	memcpy@n,w,c
  9663  002E60  E1ED               	bnz	i2l5139
  9664  002E62  2806               	incf	memcpy@n+1,w,c
  9665  002E64  B4D8               	btfsc	status,2,c
  9666  002E66  0012               	return	
  9667  002E68  D7E9               	goto	i2l5139
  9668  002E6A                     __end_of_memcpy:
  9669                           	opt stack 0
  9670                           pclatu	equ	0xFFB
  9671                           pclath	equ	0xFFA
  9672                           tblptru	equ	0xFF8
  9673                           tblptrh	equ	0xFF7
  9674                           tblptrl	equ	0xFF6
  9675                           tablat	equ	0xFF5
  9676                           prodh	equ	0xFF4
  9677                           prodl	equ	0xFF3
  9678                           intcon	equ	0xFF2
  9679                           postinc0	equ	0xFEE
  9680                           fsr0h	equ	0xFEA
  9681                           fsr0l	equ	0xFE9
  9682                           wreg	equ	0xFE8
  9683                           indf1	equ	0xFE7
  9684                           postdec1	equ	0xFE5
  9685                           fsr1h	equ	0xFE2
  9686                           fsr1l	equ	0xFE1
  9687                           indf2	equ	0xFDF
  9688                           postinc2	equ	0xFDE
  9689                           postdec2	equ	0xFDD
  9690                           plusw2	equ	0xFDB
  9691                           fsr2h	equ	0xFDA
  9692                           fsr2l	equ	0xFD9
  9693                           status	equ	0xFD8
  9694                           
  9695 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9696 ;; Defined at:
  9697 ;;		line 2483 in file "../../../../../../framework/usb/src/usb_device.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;		None
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;		None
  9702 ;; Return value:  Size  Location     Type
  9703 ;;		None               void
  9704 ;; Registers used:
  9705 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9711 ;;      Params:         0       0       0       0       0       0       0       0       0
  9712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9715 ;;Total ram usage:        0 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:    6
  9718 ;; This function calls:
  9719 ;;		_USBCheckStdRequest
  9720 ;;		_USBCtrlEPServiceComplete
  9721 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9722 ;; This function is called by:
  9723 ;;		_USBCtrlEPService
  9724 ;; This function uses a non-reentrant model
  9725 ;;
  9726                           
  9727                           	psect	text51
  9728  0028CE                     __ptext51:
  9729                           	opt stack 0
  9730  0028CE                     _USBCtrlTrfSetupHandler:
  9731                           	opt stack 15
  9732                           
  9733                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9734                           
  9735                           ;incstack = 0
  9736  0028CE  0E00               	movlw	0
  9737  0028D0  6E5B               	movwf	_shortPacketStatus,c	;volatile
  9738                           
  9739                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9740  0028D2  0E00               	movlw	0
  9741  0028D4  6E54               	movwf	_USBDeferStatusStagePacket,c	;volatile
  9742                           
  9743                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9744  0028D6  0E00               	movlw	0
  9745  0028D8  6E53               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9746                           
  9747                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9748  0028DA  0E00               	movlw	0
  9749  0028DC  0100               	movlb	0	; () banked
  9750  0028DE  6FF5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  9751                           
  9752                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9753  0028E0  0E00               	movlw	0
  9754  0028E2  6E50               	movwf	_BothEP0OutUOWNsSet,c	;volatile
  9755                           
  9756                           ;usb_device.c: 2493: controlTransferState = 0;
  9757  0028E4  0E00               	movlw	0
  9758  0028E6  6E59               	movwf	_controlTransferState,c	;volatile
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9762  0028E8  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
  9763  0028EC  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9764  0028F0  0E7F               	movlw	127
  9765  0028F2  16DF               	andwf	indf2,f,c
  9766                           
  9767                           ; BSR set to: 0
  9768                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9769  0028F4  0E04               	movlw	4
  9770  0028F6  1A42               	xorwf	_pBDTEntryIn,f,c
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9774  0028F8  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
  9775  0028FC  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9776  002900  0E7F               	movlw	127
  9777  002902  16DF               	andwf	indf2,f,c
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9781  002904  0E04               	movlw	4
  9782  002906  1A42               	xorwf	_pBDTEntryIn,f,c
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9786  002908  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9787  00290C  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9788  002910  0E7F               	movlw	127
  9789  002912  16DF               	andwf	indf2,f,c
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9793  002914  0E00               	movlw	0
  9794  002916  6E3F               	movwf	_inPipes+3,c	;volatile
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9798  002918  0E00               	movlw	0
  9799  00291A  6E41               	movwf	_inPipes+5,c	;volatile
  9800  00291C  0E00               	movlw	0
  9801  00291E  6E40               	movwf	_inPipes+4,c	;volatile
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9805  002920  0E00               	movlw	0
  9806  002922  6E37               	movwf	_outPipes+3,c	;volatile
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9810  002924  0E00               	movlw	0
  9811  002926  6E39               	movwf	_outPipes+5,c	;volatile
  9812  002928  0E00               	movlw	0
  9813  00292A  6E38               	movwf	_outPipes+4,c	;volatile
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;usb_device.c: 2517: USBCheckStdRequest();
  9817  00292C  EC96  F00E         	call	_USBCheckStdRequest	;wreg free
  9818                           
  9819                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9820  002930  0E00               	movlw	0
  9821  002932  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
  9822  002934  0E03               	movlw	3
  9823  002936  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
  9824  002938  0E00               	movlw	0
  9825  00293A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
  9826  00293C  0E00               	movlw	0
  9827  00293E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
  9828  002940  0E00               	movlw	0
  9829  002942  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
  9830  002944  0E00               	movlw	0
  9831  002946  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
  9832  002948  ECA9  F014         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9833                           
  9834                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9835  00294C  ECCC  F00C         	call	_USBCtrlEPServiceComplete	;wreg free
  9836  002950  0012               	return		;funcret
  9837  002952                     __end_of_USBCtrlTrfSetupHandler:
  9838                           	opt stack 0
  9839                           pclatu	equ	0xFFB
  9840                           pclath	equ	0xFFA
  9841                           tblptru	equ	0xFF8
  9842                           tblptrh	equ	0xFF7
  9843                           tblptrl	equ	0xFF6
  9844                           tablat	equ	0xFF5
  9845                           prodh	equ	0xFF4
  9846                           prodl	equ	0xFF3
  9847                           intcon	equ	0xFF2
  9848                           postinc0	equ	0xFEE
  9849                           fsr0h	equ	0xFEA
  9850                           fsr0l	equ	0xFE9
  9851                           wreg	equ	0xFE8
  9852                           indf1	equ	0xFE7
  9853                           postdec1	equ	0xFE5
  9854                           fsr1h	equ	0xFE2
  9855                           fsr1l	equ	0xFE1
  9856                           indf2	equ	0xFDF
  9857                           postinc2	equ	0xFDE
  9858                           postdec2	equ	0xFDD
  9859                           plusw2	equ	0xFDB
  9860                           fsr2h	equ	0xFDA
  9861                           fsr2l	equ	0xFD9
  9862                           status	equ	0xFD8
  9863                           
  9864 ;; *************** function _USBCtrlEPServiceComplete *****************
  9865 ;; Defined at:
  9866 ;;		line 1634 in file "../../../../../../framework/usb/src/usb_device.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;		None
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;		None
  9871 ;; Return value:  Size  Location     Type
  9872 ;;		None               void
  9873 ;; Registers used:
  9874 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9880 ;;      Params:         0       0       0       0       0       0       0       0       0
  9881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9884 ;;Total ram usage:        0 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; Hardware stack levels required when called:    2
  9887 ;; This function calls:
  9888 ;;		_USBCtrlEPAllowDataStage
  9889 ;;		_USBCtrlEPAllowStatusStage
  9890 ;; This function is called by:
  9891 ;;		_USBCtrlTrfSetupHandler
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           	psect	text52
  9896  001998                     __ptext52:
  9897                           	opt stack 0
  9898  001998                     _USBCtrlEPServiceComplete:
  9899                           	opt stack 18
  9900                           
  9901                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9902                           
  9903                           ;incstack = 0
  9904  001998  986D               	bcf	3949,4,c	;volatile
  9905                           
  9906                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9907  00199A  BE3F               	btfsc	_inPipes+3,7,c	;volatile
  9908  00199C  D039               	goto	i2l844
  9909                           
  9910                           ;usb_device.c: 1647: {
  9911                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9912  00199E  AE37               	btfss	_outPipes+3,7,c	;volatile
  9913  0019A0  D00C               	goto	i2l4863
  9914                           
  9915                           ;usb_device.c: 1649: {
  9916                           ;usb_device.c: 1650: controlTransferState = 2;
  9917  0019A2  0E02               	movlw	2
  9918  0019A4  6E59               	movwf	_controlTransferState,c	;volatile
  9919                           
  9920                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9921  0019A6  0100               	movlb	0	; () banked
  9922  0019A8  51F5               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  9923  0019AA  B4D8               	btfsc	status,2,c
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;usb_device.c: 1662: {
  9927                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9928  0019AC  ECF8  F012         	call	_USBCtrlEPAllowDataStage	;wreg free
  9929                           
  9930                           ;usb_device.c: 1664: }
  9931                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9932  0019B0  0E00               	movlw	0
  9933  0019B2  6E57               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9934                           
  9935                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9936  0019B4  0E00               	movlw	0
  9937  0019B6  6E56               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9938                           
  9939                           ;usb_device.c: 1670: }
  9940  0019B8  0012               	return	
  9941  0019BA                     i2l4863:
  9942                           
  9943                           ;usb_device.c: 1671: else
  9944                           ;usb_device.c: 1672: {
  9945                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9946  0019BA  EE20 F001          	lfsr	2,1
  9947  0019BE  504E               	movf	_pBDTEntryEP0OutNext,w,c
  9948  0019C0  26D9               	addwf	fsr2l,f,c
  9949  0019C2  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
  9950  0019C4  22DA               	addwfc	fsr2h,f,c
  9951  0019C6  0E08               	movlw	8
  9952  0019C8  6EDF               	movwf	indf2,c
  9953                           
  9954                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9955  0019CA  EE20 F002          	lfsr	2,2
  9956  0019CE  504E               	movf	_pBDTEntryEP0OutNext,w,c
  9957  0019D0  26D9               	addwf	fsr2l,f,c
  9958  0019D2  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
  9959  0019D4  22DA               	addwfc	fsr2h,f,c
  9960  0019D6  0E20               	movlw	32
  9961  0019D8  6EDE               	movwf	postinc2,c
  9962  0019DA  0E04               	movlw	4
  9963  0019DC  6EDD               	movwf	postdec2,c
  9964                           
  9965                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9966  0019DE  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9967  0019E2  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9968  0019E6  0E0C               	movlw	12
  9969  0019E8  6EDF               	movwf	indf2,c
  9970                           
  9971                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9972  0019EA  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9973  0019EE  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9974  0019F2  0E00               	movlw	0
  9975  0019F4  8EDB               	bsf	plusw2,7,c
  9976                           
  9977                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9978  0019F6  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
  9979  0019FA  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9980  0019FE  0E04               	movlw	4
  9981  001A00  6EDF               	movwf	indf2,c
  9982                           
  9983                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9984  001A02  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
  9985  001A06  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9986  001A0A  0E00               	movlw	0
  9987  001A0C  8EDB               	bsf	plusw2,7,c
  9988                           
  9989                           ;usb_device.c: 1683: }
  9990                           ;usb_device.c: 1684: }
  9991  001A0E  0012               	return	
  9992  001A10                     i2l844:
  9993                           
  9994                           ;usb_device.c: 1685: else
  9995                           ;usb_device.c: 1686: {
  9996                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9997  001A10  0104               	movlb	4	; () banked
  9998  001A12  AF20               	btfss	32,7,b	;volatile
  9999  001A14  D010               	goto	i2l4883
 10000                           
 10001                           ; BSR set to: 4
 10002                           ;usb_device.c: 1688: {
 10003                           ;usb_device.c: 1689: controlTransferState = 1;
 10004  001A16  0E01               	movlw	1
 10005  001A18  6E59               	movwf	_controlTransferState,c	;volatile
 10006                           
 10007                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
 10008  001A1A  5053               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 10009  001A1C  B4D8               	btfsc	status,2,c
 10010                           
 10011                           ; BSR set to: 4
 10012                           ;usb_device.c: 1704: {
 10013                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
 10014  001A1E  ECF8  F012         	call	_USBCtrlEPAllowDataStage	;wreg free
 10015                           
 10016                           ;usb_device.c: 1706: }
 10017                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
 10018  001A22  0E00               	movlw	0
 10019  001A24  6E57               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 10020                           
 10021                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
 10022  001A26  0E00               	movlw	0
 10023  001A28  6E56               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 10024                           
 10025                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
 10026  001A2A  5054               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 10027  001A2C  A4D8               	btfss	status,2,c
 10028  001A2E  0012               	return	
 10029                           
 10030                           ;usb_device.c: 1731: {
 10031                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
 10032  001A30  ECD4  F00F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 10033                           
 10034                           ;usb_device.c: 1733: }
 10035                           ;usb_device.c: 1734: }
 10036  001A34  0012               	return	
 10037  001A36                     i2l4883:
 10038                           
 10039                           ;usb_device.c: 1735: else
 10040                           ;usb_device.c: 1736: {
 10041                           ;usb_device.c: 1747: controlTransferState = 2;
 10042  001A36  0E02               	movlw	2
 10043  001A38  6E59               	movwf	_controlTransferState,c	;volatile
 10044                           
 10045                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
 10046  001A3A  EE20 F001          	lfsr	2,1
 10047  001A3E  504E               	movf	_pBDTEntryEP0OutNext,w,c
 10048  001A40  26D9               	addwf	fsr2l,f,c
 10049  001A42  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 10050  001A44  22DA               	addwfc	fsr2h,f,c
 10051  001A46  0E08               	movlw	8
 10052  001A48  6EDF               	movwf	indf2,c
 10053                           
 10054                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10055  001A4A  EE20 F002          	lfsr	2,2
 10056  001A4E  504E               	movf	_pBDTEntryEP0OutNext,w,c
 10057  001A50  26D9               	addwf	fsr2l,f,c
 10058  001A52  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 10059  001A54  22DA               	addwfc	fsr2h,f,c
 10060  001A56  0E20               	movlw	32
 10061  001A58  6EDE               	movwf	postinc2,c
 10062  001A5A  0E04               	movlw	4
 10063  001A5C  6EDD               	movwf	postdec2,c
 10064                           
 10065                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 10066  001A5E  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10067  001A62  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10068  001A66  0E04               	movlw	4
 10069  001A68  6EDF               	movwf	indf2,c
 10070                           
 10071                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10072  001A6A  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10073  001A6E  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10074  001A72  0E00               	movlw	0
 10075  001A74  8EDB               	bsf	plusw2,7,c
 10076                           
 10077                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
 10078  001A76  0E00               	movlw	0
 10079  001A78  6E57               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 10080                           
 10081                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
 10082  001A7A  0E00               	movlw	0
 10083  001A7C  6E56               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 10084                           
 10085                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
 10086  001A7E  5054               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 10087  001A80  A4D8               	btfss	status,2,c
 10088  001A82  0012               	return	
 10089                           
 10090                           ;usb_device.c: 1759: {
 10091                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
 10092  001A84  ECD4  F00F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 10093  001A88  0012               	return	
 10094  001A8A                     __end_of_USBCtrlEPServiceComplete:
 10095                           	opt stack 0
 10096                           pclatu	equ	0xFFB
 10097                           pclath	equ	0xFFA
 10098                           tblptru	equ	0xFF8
 10099                           tblptrh	equ	0xFF7
 10100                           tblptrl	equ	0xFF6
 10101                           tablat	equ	0xFF5
 10102                           prodh	equ	0xFF4
 10103                           prodl	equ	0xFF3
 10104                           intcon	equ	0xFF2
 10105                           postinc0	equ	0xFEE
 10106                           fsr0h	equ	0xFEA
 10107                           fsr0l	equ	0xFE9
 10108                           wreg	equ	0xFE8
 10109                           indf1	equ	0xFE7
 10110                           postdec1	equ	0xFE5
 10111                           fsr1h	equ	0xFE2
 10112                           fsr1l	equ	0xFE1
 10113                           indf2	equ	0xFDF
 10114                           postinc2	equ	0xFDE
 10115                           postdec2	equ	0xFDD
 10116                           plusw2	equ	0xFDB
 10117                           fsr2h	equ	0xFDA
 10118                           fsr2l	equ	0xFD9
 10119                           status	equ	0xFD8
 10120                           
 10121 ;; *************** function _USBCtrlEPAllowDataStage *****************
 10122 ;; Defined at:
 10123 ;;		line 1506 in file "../../../../../../framework/usb/src/usb_device.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;		None
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;		None
 10128 ;; Return value:  Size  Location     Type
 10129 ;;		None               void
 10130 ;; Registers used:
 10131 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10137 ;;      Params:         0       0       0       0       0       0       0       0       0
 10138 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10139 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10140 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10141 ;;Total ram usage:        0 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; Hardware stack levels required when called:    1
 10144 ;; This function calls:
 10145 ;;		_USBCtrlTrfTxService
 10146 ;; This function is called by:
 10147 ;;		_USBCtrlEPServiceComplete
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151                           	psect	text53
 10152  0025F0                     __ptext53:
 10153                           	opt stack 0
 10154  0025F0                     _USBCtrlEPAllowDataStage:
 10155                           	opt stack 18
 10156                           
 10157                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
 10158                           
 10159                           ;incstack = 0
 10160  0025F0  0E00               	movlw	0
 10161  0025F2  6E53               	movwf	_USBDeferINDataStagePackets,c	;volatile
 10162                           
 10163                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
 10164  0025F4  0E00               	movlw	0
 10165  0025F6  0100               	movlb	0	; () banked
 10166  0025F8  6FF5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;usb_device.c: 1511: if(controlTransferState == 2)
 10170  0025FA  0E02               	movlw	2
 10171  0025FC  1859               	xorwf	_controlTransferState,w,c	;volatile
 10172  0025FE  A4D8               	btfss	status,2,c
 10173  002600  D01F               	goto	i2l4433
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;usb_device.c: 1512: {
 10177                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
 10178  002602  EE20 F001          	lfsr	2,1
 10179  002606  504E               	movf	_pBDTEntryEP0OutNext,w,c
 10180  002608  26D9               	addwf	fsr2l,f,c
 10181  00260A  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 10182  00260C  22DA               	addwfc	fsr2h,f,c
 10183  00260E  0E08               	movlw	8
 10184  002610  6EDF               	movwf	indf2,c
 10185                           
 10186                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 10187  002612  EE20 F002          	lfsr	2,2
 10188  002616  504E               	movf	_pBDTEntryEP0OutNext,w,c
 10189  002618  26D9               	addwf	fsr2l,f,c
 10190  00261A  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 10191  00261C  22DA               	addwfc	fsr2h,f,c
 10192  00261E  0E28               	movlw	40
 10193  002620  6EDE               	movwf	postinc2,c
 10194  002622  0E04               	movlw	4
 10195  002624  6EDD               	movwf	postdec2,c
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10199  002626  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10200  00262A  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10201  00262E  0E48               	movlw	72
 10202  002630  6EDF               	movwf	indf2,c
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10206  002632  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10207  002636  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10208  00263A  0E00               	movlw	0
 10209  00263C  8EDB               	bsf	plusw2,7,c
 10210                           
 10211                           ;usb_device.c: 1518: }
 10212  00263E  0012               	return	
 10213  002640                     i2l4433:
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;usb_device.c: 1519: else
 10217                           ;usb_device.c: 1520: {
 10218                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 10219  002640  5040               	movf	_inPipes+4,w,c	;volatile
 10220  002642  0104               	movlb	4	; () banked
 10221  002644  5D26               	subwf	38,w,b	;volatile
 10222  002646  5041               	movf	_inPipes+5,w,c	;volatile
 10223  002648  0104               	movlb	4	; () banked
 10224  00264A  5927               	subwfb	39,w,b	;volatile
 10225  00264C  B0D8               	btfsc	status,0,c
 10226  00264E  D004               	goto	i2l4437
 10227                           
 10228                           ; BSR set to: 4
 10229                           ;usb_device.c: 1524: {
 10230                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
 10231  002650  C426 F040          	movff	1062,_inPipes+4	;volatile
 10232  002654  C427 F041          	movff	1063,_inPipes+5	;volatile
 10233  002658                     i2l4437:
 10234                           
 10235                           ; BSR set to: 4
 10236                           ;usb_device.c: 1526: }
 10237                           ;usb_device.c: 1527: USBCtrlTrfTxService();
 10238  002658  EC6D  F00F         	call	_USBCtrlTrfTxService	;wreg free
 10239                           
 10240                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 10241  00265C  EE20 F002          	lfsr	2,2
 10242  002660  5042               	movf	_pBDTEntryIn,w,c
 10243  002662  26D9               	addwf	fsr2l,f,c
 10244  002664  5043               	movf	_pBDTEntryIn+1,w,c
 10245  002666  22DA               	addwfc	fsr2h,f,c
 10246  002668  0E28               	movlw	40
 10247  00266A  6EDE               	movwf	postinc2,c
 10248  00266C  0E04               	movlw	4
 10249  00266E  6EDD               	movwf	postdec2,c
 10250                           
 10251                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10252  002670  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 10253  002674  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10254  002678  0E48               	movlw	72
 10255  00267A  6EDF               	movwf	indf2,c
 10256                           
 10257                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10258  00267C  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 10259  002680  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10260  002684  0E00               	movlw	0
 10261  002686  8EDB               	bsf	plusw2,7,c
 10262  002688  0012               	return	
 10263  00268A                     __end_of_USBCtrlEPAllowDataStage:
 10264                           	opt stack 0
 10265                           pclatu	equ	0xFFB
 10266                           pclath	equ	0xFFA
 10267                           tblptru	equ	0xFF8
 10268                           tblptrh	equ	0xFF7
 10269                           tblptrl	equ	0xFF6
 10270                           tablat	equ	0xFF5
 10271                           prodh	equ	0xFF4
 10272                           prodl	equ	0xFF3
 10273                           intcon	equ	0xFF2
 10274                           postinc0	equ	0xFEE
 10275                           fsr0h	equ	0xFEA
 10276                           fsr0l	equ	0xFE9
 10277                           wreg	equ	0xFE8
 10278                           indf1	equ	0xFE7
 10279                           postdec1	equ	0xFE5
 10280                           fsr1h	equ	0xFE2
 10281                           fsr1l	equ	0xFE1
 10282                           indf2	equ	0xFDF
 10283                           postinc2	equ	0xFDE
 10284                           postdec2	equ	0xFDD
 10285                           plusw2	equ	0xFDB
 10286                           fsr2h	equ	0xFDA
 10287                           fsr2l	equ	0xFD9
 10288                           status	equ	0xFD8
 10289                           
 10290 ;; *************** function _USBCheckStdRequest *****************
 10291 ;; Defined at:
 10292 ;;		line 2703 in file "../../../../../../framework/usb/src/usb_device.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;		None
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;		None               void
 10299 ;; Registers used:
 10300 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10306 ;;      Params:         0       0       0       0       0       0       0       0       0
 10307 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10308 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10309 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10310 ;;Total ram usage:        0 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:    5
 10313 ;; This function calls:
 10314 ;;		_USBStdFeatureReqHandler
 10315 ;;		_USBStdGetDscHandler
 10316 ;;		_USBStdGetStatusHandler
 10317 ;;		_USBStdSetCfgHandler
 10318 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10319 ;; This function is called by:
 10320 ;;		_USBCtrlTrfSetupHandler
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324                           	psect	text54
 10325  001D2C                     __ptext54:
 10326                           	opt stack 0
 10327  001D2C                     _USBCheckStdRequest:
 10328                           	opt stack 15
 10329                           
 10330                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
 10331                           
 10332                           ;incstack = 0
 10333  001D2C  0104               	movlb	4	; () banked
 10334  001D2E  3920               	swapf	32,w,b	;volatile
 10335  001D30  32E8               	rrcf	wreg,f,c
 10336  001D32  0B03               	andlw	3
 10337  001D34  0900               	iorlw	0
 10338  001D36  A4D8               	btfss	status,2,c
 10339  001D38  0012               	return	
 10340  001D3A  D043               	goto	i2l4981
 10341  001D3C                     i2l969:
 10342                           
 10343                           ; BSR set to: 4
 10344                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 10345  001D3C  8E3F               	bsf	_inPipes+3,7,c	;volatile
 10346                           
 10347                           ; BSR set to: 4
 10348                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
 10349  001D3E  0E08               	movlw	8
 10350  001D40  6E55               	movwf	_USBDeviceState,c	;volatile
 10351                           
 10352                           ;usb_device.c: 2713: break;
 10353  001D42  0012               	return	
 10354  001D44                     i2l4951:
 10355                           
 10356                           ; BSR set to: 4
 10357                           ;usb_device.c: 2715: USBStdGetDscHandler();
 10358  001D44  ECAE  F00A         	call	_USBStdGetDscHandler	;wreg free
 10359                           
 10360                           ;usb_device.c: 2716: break;
 10361  001D48  0012               	return	
 10362  001D4A                     i2l4953:
 10363                           
 10364                           ;usb_device.c: 2718: USBStdSetCfgHandler();
 10365  001D4A  EC28  F00E         	call	_USBStdSetCfgHandler	;wreg free
 10366                           
 10367                           ;usb_device.c: 2719: break;
 10368  001D4E  0012               	return	
 10369  001D50                     i2l4955:
 10370                           
 10371                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 10372  001D50  0E5C               	movlw	low _USBActiveConfiguration
 10373  001D52  6E3C               	movwf	_inPipes,c	;volatile
 10374  001D54  0E00               	movlw	high _USBActiveConfiguration
 10375  001D56  6E3D               	movwf	_inPipes+1,c	;volatile
 10376                           
 10377                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10378  001D58  803F               	bsf	_inPipes+3,0,c	;volatile
 10379                           
 10380                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 10381  001D5A  0E01               	movlw	1
 10382  001D5C  6E40               	movwf	_inPipes+4,c	;volatile
 10383                           
 10384                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 10385  001D5E  8E3F               	bsf	_inPipes+3,7,c	;volatile
 10386                           
 10387                           ;usb_device.c: 2725: break;
 10388  001D60  0012               	return	
 10389  001D62                     i2l4963:
 10390                           
 10391                           ;usb_device.c: 2727: USBStdGetStatusHandler();
 10392  001D62  EC52  F012         	call	_USBStdGetStatusHandler	;wreg free
 10393                           
 10394                           ;usb_device.c: 2728: break;
 10395  001D66  0012               	return	
 10396  001D68                     i2l4965:
 10397                           
 10398                           ;usb_device.c: 2730: case 3:
 10399                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
 10400  001D68  EC0D  F000         	call	_USBStdFeatureReqHandler	;wreg free
 10401                           
 10402                           ;usb_device.c: 2732: break;
 10403  001D6C  0012               	return	
 10404  001D6E                     i2l4967:
 10405                           
 10406                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 10407  001D6E  0104               	movlb	4	; () banked
 10408  001D70  5124               	movf	36,w,b	;volatile
 10409  001D72  0D01               	mullw	1
 10410  001D74  0E5D               	movlw	low _USBAlternateInterface
 10411  001D76  24F3               	addwf	prodl,w,c
 10412  001D78  6E3C               	movwf	_inPipes,c	;volatile
 10413  001D7A  0E00               	movlw	high _USBAlternateInterface
 10414  001D7C  20F4               	addwfc	prodh,w,c
 10415  001D7E  6E3D               	movwf	_inPipes+1,c	;volatile
 10416                           
 10417                           ; BSR set to: 4
 10418                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10419  001D80  803F               	bsf	_inPipes+3,0,c	;volatile
 10420                           
 10421                           ; BSR set to: 4
 10422                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
 10423  001D82  0E01               	movlw	1
 10424  001D84  6E40               	movwf	_inPipes+4,c	;volatile
 10425                           
 10426                           ; BSR set to: 4
 10427                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
 10428  001D86  8E3F               	bsf	_inPipes+3,7,c	;volatile
 10429                           
 10430                           ;usb_device.c: 2738: break;
 10431  001D88  0012               	return	
 10432  001D8A                     i2l978:
 10433                           
 10434                           ; BSR set to: 4
 10435                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
 10436  001D8A  8E3F               	bsf	_inPipes+3,7,c	;volatile
 10437                           
 10438                           ; BSR set to: 4
 10439                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10440  001D8C  0104               	movlb	4	; () banked
 10441  001D8E  5124               	movf	36,w,b	;volatile
 10442  001D90  0D01               	mullw	1
 10443  001D92  0E5D               	movlw	low _USBAlternateInterface
 10444  001D94  24F3               	addwf	prodl,w,c
 10445  001D96  6ED9               	movwf	fsr2l,c
 10446  001D98  0E00               	movlw	high _USBAlternateInterface
 10447  001D9A  20F4               	addwfc	prodh,w,c
 10448  001D9C  6EDA               	movwf	fsr2h,c
 10449  001D9E  C422 FFDF          	movff	1058,indf2	;volatile
 10450                           
 10451                           ;usb_device.c: 2742: break;
 10452  001DA2  0012               	return	
 10453  001DA4                     i2l4977:
 10454                           
 10455                           ; BSR set to: 4
 10456                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10457  001DA4  0E00               	movlw	0
 10458  001DA6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 10459  001DA8  0E02               	movlw	2
 10460  001DAA  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 10461  001DAC  0E00               	movlw	0
 10462  001DAE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 10463  001DB0  0E00               	movlw	0
 10464  001DB2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 10465  001DB4  0E00               	movlw	0
 10466  001DB6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 10467  001DB8  0E00               	movlw	0
 10468  001DBA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 10469  001DBC  ECA9  F014         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10470                           
 10471                           ;usb_device.c: 2749: }
 10472                           
 10473                           ;usb_device.c: 2748: break;
 10474                           
 10475                           ;usb_device.c: 2747: default:
 10476                           
 10477                           ;usb_device.c: 2746: case 12:
 10478                           
 10479                           ;usb_device.c: 2745: break;
 10480  001DC0  0012               	return	
 10481  001DC2                     i2l4981:
 10482  001DC2  0104               	movlb	4	; () banked
 10483  001DC4  5121               	movf	33,w,b	;volatile
 10484                           
 10485                           ; Switch size 1, requested type "space"
 10486                           ; Number of cases is 11, Range of values is 0 to 12
 10487                           ; switch strategies available:
 10488                           ; Name         Instructions Cycles
 10489                           ; simple_byte           34    18 (average)
 10490                           ;	Chosen strategy is simple_byte
 10491  001DC6  0A00               	xorlw	0	; case 0
 10492  001DC8  B4D8               	btfsc	status,2,c
 10493  001DCA  D7CB               	goto	i2l4963
 10494  001DCC  0A01               	xorlw	1	; case 1
 10495  001DCE  B4D8               	btfsc	status,2,c
 10496  001DD0  D7CB               	goto	i2l4965
 10497  001DD2  0A02               	xorlw	2	; case 3
 10498  001DD4  B4D8               	btfsc	status,2,c
 10499  001DD6  D7C8               	goto	i2l4965
 10500  001DD8  0A06               	xorlw	6	; case 5
 10501  001DDA  B4D8               	btfsc	status,2,c
 10502  001DDC  D7AF               	goto	i2l969
 10503  001DDE  0A03               	xorlw	3	; case 6
 10504  001DE0  B4D8               	btfsc	status,2,c
 10505  001DE2  D7B0               	goto	i2l4951
 10506  001DE4  0A01               	xorlw	1	; case 7
 10507  001DE6  B4D8               	btfsc	status,2,c
 10508  001DE8  D7DD               	goto	i2l4977
 10509  001DEA  0A0F               	xorlw	15	; case 8
 10510  001DEC  B4D8               	btfsc	status,2,c
 10511  001DEE  D7B0               	goto	i2l4955
 10512  001DF0  0A01               	xorlw	1	; case 9
 10513  001DF2  B4D8               	btfsc	status,2,c
 10514  001DF4  D7AA               	goto	i2l4953
 10515  001DF6  0A03               	xorlw	3	; case 10
 10516  001DF8  B4D8               	btfsc	status,2,c
 10517  001DFA  D7B9               	goto	i2l4967
 10518  001DFC  0A01               	xorlw	1	; case 11
 10519  001DFE  B4D8               	btfsc	status,2,c
 10520  001E00  D7C4               	goto	i2l978
 10521  001E02  0A07               	xorlw	7	; case 12
 10522  001E04  0012               	return	
 10523  001E06                     __end_of_USBCheckStdRequest:
 10524                           	opt stack 0
 10525                           pclatu	equ	0xFFB
 10526                           pclath	equ	0xFFA
 10527                           tblptru	equ	0xFF8
 10528                           tblptrh	equ	0xFF7
 10529                           tblptrl	equ	0xFF6
 10530                           tablat	equ	0xFF5
 10531                           prodh	equ	0xFF4
 10532                           prodl	equ	0xFF3
 10533                           intcon	equ	0xFF2
 10534                           postinc0	equ	0xFEE
 10535                           fsr0h	equ	0xFEA
 10536                           fsr0l	equ	0xFE9
 10537                           wreg	equ	0xFE8
 10538                           indf1	equ	0xFE7
 10539                           postdec1	equ	0xFE5
 10540                           fsr1h	equ	0xFE2
 10541                           fsr1l	equ	0xFE1
 10542                           indf2	equ	0xFDF
 10543                           postinc2	equ	0xFDE
 10544                           postdec2	equ	0xFDD
 10545                           plusw2	equ	0xFDB
 10546                           fsr2h	equ	0xFDA
 10547                           fsr2l	equ	0xFD9
 10548                           status	equ	0xFD8
 10549                           
 10550 ;; *************** function _USBStdSetCfgHandler *****************
 10551 ;; Defined at:
 10552 ;;		line 1986 in file "../../../../../../framework/usb/src/usb_device.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;		None
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;  i               1   20[COMRAM] unsigned char 
 10557 ;; Return value:  Size  Location     Type
 10558 ;;		None               void
 10559 ;; Registers used:
 10560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10566 ;;      Params:         0       0       0       0       0       0       0       0       0
 10567 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10568 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10569 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10570 ;;Total ram usage:        1 bytes
 10571 ;; Hardware stack levels used:    1
 10572 ;; Hardware stack levels required when called:    4
 10573 ;; This function calls:
 10574 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10575 ;;		i2_memset
 10576 ;; This function is called by:
 10577 ;;		_USBCheckStdRequest
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text55
 10582  001C50                     __ptext55:
 10583                           	opt stack 0
 10584  001C50                     _USBStdSetCfgHandler:
 10585                           	opt stack 15
 10586                           
 10587                           ;usb_device.c: 1988: uint8_t i;
 10588                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10589                           
 10590                           ;incstack = 0
 10591  001C50  8E3F               	bsf	_inPipes+3,7,c	;volatile
 10592                           
 10593                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(1));;
 10594  001C52  0E71               	movlw	113
 10595  001C54  6E01               	movwf	i2memset@p1,c
 10596  001C56  0E0F               	movlw	15
 10597  001C58  6E02               	movwf	i2memset@p1+1,c
 10598  001C5A  0E00               	movlw	0
 10599  001C5C  6E04               	movwf	i2memset@c+1,c
 10600  001C5E  0E00               	movlw	0
 10601  001C60  6E03               	movwf	i2memset@c,c
 10602  001C62  0E00               	movlw	0
 10603  001C64  6E06               	movwf	i2memset@n+1,c
 10604  001C66  0E01               	movlw	1
 10605  001C68  6E05               	movwf	i2memset@n,c
 10606  001C6A  ECD2  F018         	call	i2_memset	;wreg free
 10607                           
 10608                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10609  001C6E  0E00               	movlw	0
 10610  001C70  6E01               	movwf	i2memset@p1,c
 10611  001C72  0E04               	movlw	4
 10612  001C74  6E02               	movwf	i2memset@p1+1,c
 10613  001C76  0E00               	movlw	0
 10614  001C78  6E04               	movwf	i2memset@c+1,c
 10615  001C7A  0E00               	movlw	0
 10616  001C7C  6E03               	movwf	i2memset@c,c
 10617  001C7E  0E00               	movlw	0
 10618  001C80  6E06               	movwf	i2memset@n+1,c
 10619  001C82  0E20               	movlw	32
 10620  001C84  6E05               	movwf	i2memset@n,c
 10621  001C86  ECD2  F018         	call	i2_memset	;wreg free
 10622                           
 10623                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10624  001C8A  8C6D               	bsf	3949,6,c	;volatile
 10625                           
 10626                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(1+1u); i++)
 10627  001C8C  0E00               	movlw	0
 10628  001C8E  6E15               	movwf	USBStdSetCfgHandler@i,c
 10629  001C90                     i2l4453:
 10630  001C90  0E01               	movlw	1
 10631  001C92  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 10632  001C94  D001               	goto	i2l4457
 10633  001C96  D016               	goto	i2l4463
 10634  001C98                     i2l4457:
 10635                           
 10636                           ;usb_device.c: 2006: {
 10637                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10638  001C98  5015               	movf	USBStdSetCfgHandler@i,w,c
 10639  001C9A  0D01               	mullw	1
 10640  001C9C  0E48               	movlw	low _ep_data_in
 10641  001C9E  24F3               	addwf	prodl,w,c
 10642  001CA0  6ED9               	movwf	fsr2l,c
 10643  001CA2  0E00               	movlw	high _ep_data_in
 10644  001CA4  20F4               	addwfc	prodh,w,c
 10645  001CA6  6EDA               	movwf	fsr2h,c
 10646  001CA8  0E00               	movlw	0
 10647  001CAA  6EDF               	movwf	indf2,c
 10648                           
 10649                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10650  001CAC  5015               	movf	USBStdSetCfgHandler@i,w,c
 10651  001CAE  0D01               	mullw	1
 10652  001CB0  0E4A               	movlw	low _ep_data_out
 10653  001CB2  24F3               	addwf	prodl,w,c
 10654  001CB4  6ED9               	movwf	fsr2l,c
 10655  001CB6  0E00               	movlw	high _ep_data_out
 10656  001CB8  20F4               	addwfc	prodh,w,c
 10657  001CBA  6EDA               	movwf	fsr2h,c
 10658  001CBC  0E00               	movlw	0
 10659  001CBE  6EDF               	movwf	indf2,c
 10660  001CC0  2A15               	incf	USBStdSetCfgHandler@i,f,c
 10661  001CC2  D7E6               	goto	i2l4453
 10662  001CC4                     i2l4463:
 10663                           
 10664                           ;usb_device.c: 2009: }
 10665                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,1);
 10666  001CC4  0E5D               	movlw	low _USBAlternateInterface
 10667  001CC6  6E01               	movwf	i2memset@p1,c
 10668  001CC8  0E00               	movlw	high _USBAlternateInterface
 10669  001CCA  6E02               	movwf	i2memset@p1+1,c
 10670  001CCC  0E00               	movlw	0
 10671  001CCE  6E04               	movwf	i2memset@c+1,c
 10672  001CD0  0E00               	movlw	0
 10673  001CD2  6E03               	movwf	i2memset@c,c
 10674  001CD4  0E00               	movlw	0
 10675  001CD6  6E06               	movwf	i2memset@n+1,c
 10676  001CD8  0E01               	movlw	1
 10677  001CDA  6E05               	movwf	i2memset@n,c
 10678  001CDC  ECD2  F018         	call	i2_memset	;wreg free
 10679                           
 10680                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10681  001CE0  9C6D               	bcf	3949,6,c	;volatile
 10682                           
 10683                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10684  001CE2  0E08               	movlw	8
 10685  001CE4  6E42               	movwf	_pBDTEntryIn,c
 10686  001CE6  0E04               	movlw	4
 10687  001CE8  6E43               	movwf	_pBDTEntryIn+1,c
 10688                           
 10689                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10690  001CEA  0E00               	movlw	0
 10691  001CEC  6E4C               	movwf	_pBDTEntryEP0OutCurrent,c
 10692  001CEE  0E04               	movlw	4
 10693  001CF0  6E4D               	movwf	_pBDTEntryEP0OutCurrent+1,c
 10694                           
 10695                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10696  001CF2  C04C  F04E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10697  001CF6  C04D  F04F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10698                           
 10699                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10700  001CFA  C422 F05C          	movff	1058,_USBActiveConfiguration	;volatile
 10701                           
 10702                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10703  001CFE  505C               	movf	_USBActiveConfiguration,w,c	;volatile
 10704  001D00  A4D8               	btfss	status,2,c
 10705  001D02  D003               	goto	i2l4479
 10706                           
 10707                           ;usb_device.c: 2028: {
 10708                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10709  001D04  0E10               	movlw	16
 10710  001D06  6E55               	movwf	_USBDeviceState,c	;volatile
 10711                           
 10712                           ;usb_device.c: 2031: }
 10713  001D08  0012               	return	
 10714  001D0A                     i2l4479:
 10715                           
 10716                           ;usb_device.c: 2032: else
 10717                           ;usb_device.c: 2033: {
 10718                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10719  001D0A  0E00               	movlw	0
 10720  001D0C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 10721  001D0E  0E01               	movlw	1
 10722  001D10  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 10723  001D12  0E5C               	movlw	low _USBActiveConfiguration
 10724  001D14  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 10725  001D16  0E00               	movlw	high _USBActiveConfiguration
 10726  001D18  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 10727  001D1A  0E00               	movlw	0
 10728  001D1C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 10729  001D1E  0E01               	movlw	1
 10730  001D20  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 10731  001D22  ECA9  F014         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10732                           
 10733                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10734  001D26  0E20               	movlw	32
 10735  001D28  6E55               	movwf	_USBDeviceState,c	;volatile
 10736  001D2A  0012               	return	
 10737  001D2C                     __end_of_USBStdSetCfgHandler:
 10738                           	opt stack 0
 10739                           pclatu	equ	0xFFB
 10740                           pclath	equ	0xFFA
 10741                           tblptru	equ	0xFF8
 10742                           tblptrh	equ	0xFF7
 10743                           tblptrl	equ	0xFF6
 10744                           tablat	equ	0xFF5
 10745                           prodh	equ	0xFF4
 10746                           prodl	equ	0xFF3
 10747                           intcon	equ	0xFF2
 10748                           postinc0	equ	0xFEE
 10749                           fsr0h	equ	0xFEA
 10750                           fsr0l	equ	0xFE9
 10751                           wreg	equ	0xFE8
 10752                           indf1	equ	0xFE7
 10753                           postdec1	equ	0xFE5
 10754                           fsr1h	equ	0xFE2
 10755                           fsr1l	equ	0xFE1
 10756                           indf2	equ	0xFDF
 10757                           postinc2	equ	0xFDE
 10758                           postdec2	equ	0xFDD
 10759                           plusw2	equ	0xFDB
 10760                           fsr2h	equ	0xFDA
 10761                           fsr2l	equ	0xFD9
 10762                           status	equ	0xFD8
 10763                           
 10764 ;; *************** function i2_memset *****************
 10765 ;; Defined at:
 10766 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/memset.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;  p1              2    0[COMRAM] PTR void 
 10769 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 10770 ;;  c               2    2[COMRAM] int 
 10771 ;;  n               2    4[COMRAM] unsigned int 
 10772 ;; Auto vars:     Size  Location     Type
 10773 ;;  memset          2    6[COMRAM] PTR unsigned char 
 10774 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 10775 ;; Return value:  Size  Location     Type
 10776 ;;                  2    0[COMRAM] PTR void 
 10777 ;; Registers used:
 10778 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10784 ;;      Params:         6       0       0       0       0       0       0       0       0
 10785 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10786 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10787 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10788 ;;Total ram usage:        8 bytes
 10789 ;; Hardware stack levels used:    1
 10790 ;; This function calls:
 10791 ;;		Nothing
 10792 ;; This function is called by:
 10793 ;;		_USBStdSetCfgHandler
 10794 ;;		i2_USBDeviceInit
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           	psect	text56
 10799  0031A4                     __ptext56:
 10800                           	opt stack 0
 10801  0031A4                     i2_memset:
 10802                           	opt stack 21
 10803                           
 10804                           ;incstack = 0
 10805  0031A4  C001  F007         	movff	i2memset@p1,i2memset@p
 10806  0031A8  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 10807  0031AC  D008               	goto	i2l4387
 10808  0031AE                     i2l4383:
 10809  0031AE  C007  FFD9         	movff	i2memset@p,fsr2l
 10810  0031B2  C008  FFDA         	movff	i2memset@p+1,fsr2h
 10811  0031B6  C003  FFDF         	movff	i2memset@c,indf2
 10812  0031BA  4A07               	infsnz	i2memset@p,f,c
 10813  0031BC  2A08               	incf	i2memset@p+1,f,c
 10814  0031BE                     i2l4387:
 10815  0031BE  0605               	decf	i2memset@n,f,c
 10816  0031C0  A0D8               	btfss	status,0,c
 10817  0031C2  0606               	decf	i2memset@n+1,f,c
 10818  0031C4  2805               	incf	i2memset@n,w,c
 10819  0031C6  E1F3               	bnz	i2l4383
 10820  0031C8  2806               	incf	i2memset@n+1,w,c
 10821  0031CA  B4D8               	btfsc	status,2,c
 10822  0031CC  0012               	return	
 10823  0031CE  D7EF               	goto	i2l4383
 10824  0031D0                     __end_ofi2_memset:
 10825                           	opt stack 0
 10826                           pclatu	equ	0xFFB
 10827                           pclath	equ	0xFFA
 10828                           tblptru	equ	0xFF8
 10829                           tblptrh	equ	0xFF7
 10830                           tblptrl	equ	0xFF6
 10831                           tablat	equ	0xFF5
 10832                           prodh	equ	0xFF4
 10833                           prodl	equ	0xFF3
 10834                           intcon	equ	0xFF2
 10835                           postinc0	equ	0xFEE
 10836                           fsr0h	equ	0xFEA
 10837                           fsr0l	equ	0xFE9
 10838                           wreg	equ	0xFE8
 10839                           indf1	equ	0xFE7
 10840                           postdec1	equ	0xFE5
 10841                           fsr1h	equ	0xFE2
 10842                           fsr1l	equ	0xFE1
 10843                           indf2	equ	0xFDF
 10844                           postinc2	equ	0xFDE
 10845                           postdec2	equ	0xFDD
 10846                           plusw2	equ	0xFDB
 10847                           fsr2h	equ	0xFDA
 10848                           fsr2l	equ	0xFD9
 10849                           status	equ	0xFD8
 10850                           
 10851 ;; *************** function _USBStdGetStatusHandler *****************
 10852 ;; Defined at:
 10853 ;;		line 2147 in file "../../../../../../framework/usb/src/usb_device.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;		None
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;  p               2    1[COMRAM] PTR struct __BDT
 10858 ;;		 -> BDT(32), NULL(0), 
 10859 ;; Return value:  Size  Location     Type
 10860 ;;		None               void
 10861 ;; Registers used:
 10862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10868 ;;      Params:         0       0       0       0       0       0       0       0       0
 10869 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10870 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10871 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10872 ;;Total ram usage:        3 bytes
 10873 ;; Hardware stack levels used:    1
 10874 ;; This function calls:
 10875 ;;		Nothing
 10876 ;; This function is called by:
 10877 ;;		_USBCheckStdRequest
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text57
 10882  0024A4                     __ptext57:
 10883                           	opt stack 0
 10884  0024A4                     _USBStdGetStatusHandler:
 10885                           	opt stack 19
 10886                           
 10887                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10888                           
 10889                           ;incstack = 0
 10890  0024A4  0E00               	movlw	0
 10891  0024A6  0104               	movlb	4	; () banked
 10892  0024A8  6F28               	movwf	40,b	;volatile
 10893                           
 10894                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10895  0024AA  0E00               	movlw	0
 10896  0024AC  0104               	movlb	4	; () banked
 10897  0024AE  6F29               	movwf	41,b	;volatile
 10898                           
 10899                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10900  0024B0  D03A               	goto	i2l4535
 10901  0024B2                     i2l907:
 10902                           
 10903                           ; BSR set to: 4
 10904                           ;usb_device.c: 2160: if(1 == 1)
 10905  0024B2  8E3F               	bsf	_inPipes+3,7,c	;volatile
 10906                           
 10907                           ; BSR set to: 4
 10908                           ;usb_device.c: 2161: {
 10909                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10910  0024B4  0104               	movlb	4	; () banked
 10911  0024B6  8128               	bsf	40,0,b	;volatile
 10912                           
 10913                           ; BSR set to: 4
 10914                           ;usb_device.c: 2163: }
 10915                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10916                           
 10917                           ; BSR set to: 4
 10918  0024B8  0451               	decf	_RemoteWakeup,w,c	;volatile
 10919  0024BA  A4D8               	btfss	status,2,c
 10920  0024BC  D040               	goto	i2l910
 10921                           
 10922                           ; BSR set to: 4
 10923                           ;usb_device.c: 2166: {
 10924                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10925  0024BE  0104               	movlb	4	; () banked
 10926  0024C0  8328               	bsf	40,1,b	;volatile
 10927                           
 10928                           ; BSR set to: 4
 10929                           ;usb_device.c: 2168: }
 10930                           ;usb_device.c: 2169: break;
 10931  0024C2  D03D               	goto	i2l910
 10932  0024C4                     i2l911:
 10933                           
 10934                           ; BSR set to: 4
 10935                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10936  0024C4  8E3F               	bsf	_inPipes+3,7,c	;volatile
 10937                           
 10938                           ;usb_device.c: 2172: break;
 10939  0024C6  D03B               	goto	i2l910
 10940  0024C8                     i2l912:
 10941                           
 10942                           ; BSR set to: 4
 10943                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10944  0024C8  8E3F               	bsf	_inPipes+3,7,c	;volatile
 10945                           
 10946                           ;usb_device.c: 2178: {
 10947                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10948                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10949  0024CA  0104               	movlb	4	; () banked
 10950  0024CC  BF24               	btfsc	36,7,b	;volatile
 10951  0024CE  D00B               	goto	i2l4525
 10952                           
 10953                           ; BSR set to: 4
 10954                           ;usb_device.c: 2182: {
 10955                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10956  0024D0  0104               	movlb	4	; () banked
 10957  0024D2  5124               	movf	36,w,b	;volatile
 10958  0024D4  0B0F               	andlw	15
 10959  0024D6  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 10960  0024D8  5001               	movf	??_USBStdGetStatusHandler,w,c
 10961  0024DA  0D02               	mullw	2
 10962  0024DC  0ED3               	movlw	low _pBDTEntryOut
 10963  0024DE  24F3               	addwf	prodl,w,c
 10964  0024E0  6ED9               	movwf	fsr2l,c
 10965  0024E2  0E00               	movlw	high _pBDTEntryOut
 10966  0024E4  D00A               	goto	L3
 10967  0024E6                     i2l4525:
 10968                           
 10969                           ; BSR set to: 4
 10970                           ;usb_device.c: 2185: else
 10971                           ;usb_device.c: 2186: {
 10972                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10973  0024E6  0104               	movlb	4	; () banked
 10974  0024E8  5124               	movf	36,w,b	;volatile
 10975  0024EA  0B0F               	andlw	15
 10976  0024EC  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 10977  0024EE  5001               	movf	??_USBStdGetStatusHandler,w,c
 10978  0024F0  0D02               	mullw	2
 10979  0024F2  0E42               	movlw	low _pBDTEntryIn
 10980  0024F4  24F3               	addwf	prodl,w,c
 10981  0024F6  6ED9               	movwf	fsr2l,c
 10982  0024F8  0E00               	movlw	high _pBDTEntryIn
 10983  0024FA                     L3:
 10984  0024FA  20F4               	addwfc	prodh,w,c
 10985  0024FC  6EDA               	movwf	fsr2h,c
 10986  0024FE  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 10987  002502  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 10988                           
 10989                           ; BSR set to: 4
 10990                           ;usb_device.c: 2188: }
 10991                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10992                           
 10993                           ; BSR set to: 4
 10994  002506  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10995  00250A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10996  00250E  AEDF               	btfss	indf2,7,c
 10997  002510  D016               	goto	i2l910
 10998                           
 10999                           ; BSR set to: 4
 11000  002512  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 11001  002516  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 11002  00251A  A4DF               	btfss	indf2,2,c
 11003  00251C  D010               	goto	i2l910
 11004                           
 11005                           ; BSR set to: 4
 11006                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 11007  00251E  0E01               	movlw	1
 11008  002520  0104               	movlb	4	; () banked
 11009  002522  6F28               	movwf	40,b	;volatile
 11010                           
 11011                           ; BSR set to: 4
 11012                           ;usb_device.c: 2193: }
 11013                           ;usb_device.c: 2194: }
 11014                           
 11015                           ; BSR set to: 4
 11016                           ;usb_device.c: 2192: break;
 11017  002524  D00C               	goto	i2l910
 11018  002526                     i2l4535:
 11019                           
 11020                           ; BSR set to: 4
 11021  002526  0104               	movlb	4	; () banked
 11022  002528  5120               	movf	32,w,b	;volatile
 11023  00252A  0B1F               	andlw	31
 11024                           
 11025                           ; Switch size 1, requested type "space"
 11026                           ; Number of cases is 3, Range of values is 0 to 2
 11027                           ; switch strategies available:
 11028                           ; Name         Instructions Cycles
 11029                           ; simple_byte           10     6 (average)
 11030                           ;	Chosen strategy is simple_byte
 11031  00252C  0A00               	xorlw	0	; case 0
 11032  00252E  B4D8               	btfsc	status,2,c
 11033  002530  D7C0               	goto	i2l907
 11034  002532  0A01               	xorlw	1	; case 1
 11035  002534  B4D8               	btfsc	status,2,c
 11036  002536  D7C6               	goto	i2l911
 11037  002538  0A03               	xorlw	3	; case 2
 11038  00253A  B4D8               	btfsc	status,2,c
 11039  00253C  D7C5               	goto	i2l912
 11040  00253E                     i2l910:
 11041                           
 11042                           ; BSR set to: 4
 11043                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 11044  00253E  AE3F               	btfss	_inPipes+3,7,c	;volatile
 11045  002540  0012               	return	
 11046                           
 11047                           ; BSR set to: 4
 11048                           ;usb_device.c: 2197: {
 11049                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 11050  002542  0E28               	movlw	40
 11051  002544  6E3C               	movwf	_inPipes,c	;volatile
 11052  002546  0E04               	movlw	4
 11053  002548  6E3D               	movwf	_inPipes+1,c	;volatile
 11054                           
 11055                           ; BSR set to: 4
 11056                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11057  00254A  803F               	bsf	_inPipes+3,0,c	;volatile
 11058                           
 11059                           ; BSR set to: 4
 11060                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 11061  00254C  0E02               	movlw	2
 11062  00254E  6E40               	movwf	_inPipes+4,c	;volatile
 11063  002550  0012               	return	
 11064  002552                     __end_of_USBStdGetStatusHandler:
 11065                           	opt stack 0
 11066                           pclatu	equ	0xFFB
 11067                           pclath	equ	0xFFA
 11068                           tblptru	equ	0xFF8
 11069                           tblptrh	equ	0xFF7
 11070                           tblptrl	equ	0xFF6
 11071                           tablat	equ	0xFF5
 11072                           prodh	equ	0xFF4
 11073                           prodl	equ	0xFF3
 11074                           intcon	equ	0xFF2
 11075                           postinc0	equ	0xFEE
 11076                           fsr0h	equ	0xFEA
 11077                           fsr0l	equ	0xFE9
 11078                           wreg	equ	0xFE8
 11079                           indf1	equ	0xFE7
 11080                           postdec1	equ	0xFE5
 11081                           fsr1h	equ	0xFE2
 11082                           fsr1l	equ	0xFE1
 11083                           indf2	equ	0xFDF
 11084                           postinc2	equ	0xFDE
 11085                           postdec2	equ	0xFDD
 11086                           plusw2	equ	0xFDB
 11087                           fsr2h	equ	0xFDA
 11088                           fsr2l	equ	0xFD9
 11089                           status	equ	0xFD8
 11090                           
 11091 ;; *************** function _USBStdGetDscHandler *****************
 11092 ;; Defined at:
 11093 ;;		line 2061 in file "../../../../../../framework/usb/src/usb_device.c"
 11094 ;; Parameters:    Size  Location     Type
 11095 ;;		None
 11096 ;; Auto vars:     Size  Location     Type
 11097 ;;		None
 11098 ;; Return value:  Size  Location     Type
 11099 ;;		None               void
 11100 ;; Registers used:
 11101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11102 ;; Tracked objects:
 11103 ;;		On entry : 0/0
 11104 ;;		On exit  : 0/0
 11105 ;;		Unchanged: 0/0
 11106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11107 ;;      Params:         0       0       0       0       0       0       0       0       0
 11108 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11109 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11110 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11111 ;;Total ram usage:        2 bytes
 11112 ;; Hardware stack levels used:    1
 11113 ;; This function calls:
 11114 ;;		Nothing
 11115 ;; This function is called by:
 11116 ;;		_USBCheckStdRequest
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text58
 11121  00155C                     __ptext58:
 11122                           	opt stack 0
 11123  00155C                     _USBStdGetDscHandler:
 11124                           	opt stack 19
 11125                           
 11126                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 11127                           
 11128                           ; BSR set to: 4
 11129                           ;incstack = 0
 11130  00155C  0E80               	movlw	128
 11131  00155E  0104               	movlb	4	; () banked
 11132  001560  1920               	xorwf	32,w,b	;volatile
 11133  001562  A4D8               	btfss	status,2,c
 11134  001564  0012               	return	
 11135                           
 11136                           ; BSR set to: 4
 11137                           ;usb_device.c: 2064: {
 11138                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 11139  001566  0EC0               	movlw	192
 11140  001568  6E3F               	movwf	_inPipes+3,c	;volatile
 11141                           
 11142                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 11143  00156A  D07C               	goto	i2l4513
 11144  00156C                     i2l4487:
 11145                           
 11146                           ; BSR set to: 4
 11147                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 11148  00156C  0EE8               	movlw	low _device_dsc
 11149  00156E  6E3C               	movwf	_inPipes,c	;volatile
 11150  001570  0E7F               	movlw	high _device_dsc
 11151  001572  6E3D               	movwf	_inPipes+1,c	;volatile
 11152                           
 11153                           ; BSR set to: 4
 11154                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 11155  001574  0E00               	movlw	0
 11156  001576  6E41               	movwf	_inPipes+5,c	;volatile
 11157  001578  0E12               	movlw	18
 11158  00157A  6E40               	movwf	_inPipes+4,c	;volatile
 11159                           
 11160                           ;usb_device.c: 2076: break;
 11161  00157C  0012               	return	
 11162  00157E                     i2l4491:
 11163                           
 11164                           ; BSR set to: 4
 11165                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 11166  00157E  0104               	movlb	4	; () banked
 11167  001580  5122               	movf	34,w,b	;volatile
 11168  001582  A4D8               	btfss	status,2,c
 11169  001584  D03E               	goto	i2l4499
 11170                           
 11171                           ; BSR set to: 4
 11172                           ;usb_device.c: 2082: {
 11173                           ;usb_device.c: 2084: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11174  001586  0104               	movlb	4	; () banked
 11175  001588  5122               	movf	34,w,b	;volatile
 11176  00158A  0D02               	mullw	2
 11177  00158C  0EF7               	movlw	low _USB_CD_Ptr
 11178  00158E  24F3               	addwf	prodl,w,c
 11179  001590  6EF6               	movwf	tblptrl,c
 11180  001592  0E7E               	movlw	high _USB_CD_Ptr
 11181  001594  20F4               	addwfc	prodh,w,c
 11182  001596  6EF7               	movwf	tblptrh,c
 11183  001598                     	if	0	;There are less than 3 active tblptr bytes
 11184  001598                     	endif
 11185  001598  0009               	tblrd		*+
 11186  00159A  CFF5 F03C          	movff	tablat,_inPipes	;volatile
 11187  00159E  000A               	tblrd		*-
 11188  0015A0  CFF5 F03D          	movff	tablat,_inPipes+1	;volatile
 11189                           
 11190                           ; BSR set to: 4
 11191                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11192  0015A4  0E02               	movlw	2
 11193  0015A6  243C               	addwf	_inPipes,w,c	;volatile
 11194  0015A8  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 11195  0015AA  0E00               	movlw	0
 11196  0015AC  203D               	addwfc	_inPipes+1,w,c	;volatile
 11197  0015AE  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 11198  0015B0  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 11199  0015B4  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 11200  0015B8  6AF8               	clrf	tblptru,c
 11201  0015BA  0E07               	movlw	(high __ramtop+-1)
 11202  0015BC  64F7               	cpfsgt	tblptrh,c
 11203  0015BE  D003               	bra	i2u364_47
 11204  0015C0  0008               	tblrd		*
 11205  0015C2  50F5               	movf	tablat,w,c
 11206  0015C4  D005               	bra	i2u364_40
 11207  0015C6                     i2u364_47:
 11208  0015C6  CFF6 FFE9          	movff	tblptrl,fsr0l
 11209  0015CA  CFF7 FFEA          	movff	tblptrh,fsr0h
 11210  0015CE  50EF               	movf	indf0,w,c
 11211  0015D0                     i2u364_40:
 11212  0015D0  6E40               	movwf	_inPipes+4,c	;volatile
 11213                           
 11214                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11215  0015D2  0E03               	movlw	3
 11216  0015D4  243C               	addwf	_inPipes,w,c	;volatile
 11217  0015D6  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 11218  0015D8  0E00               	movlw	0
 11219  0015DA  203D               	addwfc	_inPipes+1,w,c	;volatile
 11220  0015DC  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 11221  0015DE  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 11222  0015E2  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 11223  0015E6  6AF8               	clrf	tblptru,c
 11224  0015E8  0E07               	movlw	(high __ramtop+-1)
 11225  0015EA  64F7               	cpfsgt	tblptrh,c
 11226  0015EC  D003               	bra	i2u365_47
 11227  0015EE  0008               	tblrd		*
 11228  0015F0  50F5               	movf	tablat,w,c
 11229  0015F2  D005               	bra	i2u365_40
 11230  0015F4                     i2u365_47:
 11231  0015F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 11232  0015F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 11233  0015FC  50EF               	movf	indf0,w,c
 11234  0015FE                     i2u365_40:
 11235  0015FE  6E41               	movwf	_inPipes+5,c	;volatile
 11236                           
 11237                           ;usb_device.c: 2094: }
 11238  001600  0012               	return	
 11239  001602                     i2l4499:
 11240                           
 11241                           ;usb_device.c: 2095: else
 11242                           ;usb_device.c: 2096: {
 11243                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 11244  001602  0E00               	movlw	0
 11245  001604  6E3F               	movwf	_inPipes+3,c	;volatile
 11246                           
 11247                           ;usb_device.c: 2098: }
 11248                           ;usb_device.c: 2099: break;
 11249  001606  0012               	return	
 11250  001608                     i2l4501:
 11251                           
 11252                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 11253  001608  0E03               	movlw	3
 11254  00160A  0104               	movlb	4	; () banked
 11255  00160C  6122               	cpfslt	34,b	;volatile
 11256  00160E  D024               	goto	i2l4507
 11257                           
 11258                           ; BSR set to: 4
 11259                           ;usb_device.c: 2105: {
 11260                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11261  001610  0104               	movlb	4	; () banked
 11262  001612  5122               	movf	34,w,b	;volatile
 11263  001614  0D02               	mullw	2
 11264  001616  0EE9               	movlw	low _USB_SD_Ptr
 11265  001618  24F3               	addwf	prodl,w,c
 11266  00161A  6EF6               	movwf	tblptrl,c
 11267  00161C  0E7E               	movlw	high _USB_SD_Ptr
 11268  00161E  20F4               	addwfc	prodh,w,c
 11269  001620  6EF7               	movwf	tblptrh,c
 11270  001622                     	if	0	;There are less than 3 active tblptr bytes
 11271  001622                     	endif
 11272  001622  0009               	tblrd		*+
 11273  001624  CFF5 F03C          	movff	tablat,_inPipes	;volatile
 11274  001628  000A               	tblrd		*-
 11275  00162A  CFF5 F03D          	movff	tablat,_inPipes+1	;volatile
 11276                           
 11277                           ; BSR set to: 4
 11278                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11279  00162E  C03C  FFF6         	movff	_inPipes,tblptrl	;volatile
 11280  001632  C03D  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 11281  001636  6AF8               	clrf	tblptru,c
 11282  001638  0E07               	movlw	(high __ramtop+-1)
 11283  00163A  64F7               	cpfsgt	tblptrh,c
 11284  00163C  D003               	bra	i2u367_47
 11285  00163E  0008               	tblrd		*
 11286  001640  50F5               	movf	tablat,w,c
 11287  001642  D005               	bra	i2u367_40
 11288  001644                     i2u367_47:
 11289  001644  CFF6 FFE9          	movff	tblptrl,fsr0l
 11290  001648  CFF7 FFEA          	movff	tblptrh,fsr0h
 11291  00164C  50EF               	movf	indf0,w,c
 11292  00164E                     i2u367_40:
 11293  00164E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 11294  001650  5001               	movf	??_USBStdGetDscHandler,w,c
 11295  001652  6E40               	movwf	_inPipes+4,c	;volatile
 11296  001654  6A41               	clrf	_inPipes+5,c	;volatile
 11297                           
 11298                           ;usb_device.c: 2110: }
 11299  001656  0012               	return	
 11300  001658                     i2l4507:
 11301                           
 11302                           ;usb_device.c: 2120: else
 11303                           ;usb_device.c: 2121: {
 11304                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 11305  001658  0E00               	movlw	0
 11306  00165A  6E3F               	movwf	_inPipes+3,c	;volatile
 11307                           
 11308                           ;usb_device.c: 2123: }
 11309                           ;usb_device.c: 2124: break;
 11310  00165C  0012               	return	
 11311  00165E                     i2l4509:
 11312                           
 11313                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 11314  00165E  0E00               	movlw	0
 11315  001660  6E3F               	movwf	_inPipes+3,c	;volatile
 11316                           
 11317                           ;usb_device.c: 2128: }
 11318                           
 11319                           ;usb_device.c: 2127: break;
 11320  001662  0012               	return	
 11321  001664                     i2l4513:
 11322  001664  0104               	movlb	4	; () banked
 11323  001666  5123               	movf	35,w,b	;volatile
 11324                           
 11325                           ; Switch size 1, requested type "space"
 11326                           ; Number of cases is 3, Range of values is 1 to 3
 11327                           ; switch strategies available:
 11328                           ; Name         Instructions Cycles
 11329                           ; simple_byte           10     6 (average)
 11330                           ;	Chosen strategy is simple_byte
 11331  001668  0A01               	xorlw	1	; case 1
 11332  00166A  B4D8               	btfsc	status,2,c
 11333  00166C  D77F               	goto	i2l4487
 11334  00166E  0A03               	xorlw	3	; case 2
 11335  001670  B4D8               	btfsc	status,2,c
 11336  001672  D785               	goto	i2l4491
 11337  001674  0A01               	xorlw	1	; case 3
 11338  001676  B4D8               	btfsc	status,2,c
 11339  001678  D7C7               	goto	i2l4501
 11340  00167A  D7F1               	goto	i2l4509
 11341  00167C                     __end_of_USBStdGetDscHandler:
 11342                           	opt stack 0
 11343                           pclatu	equ	0xFFB
 11344                           pclath	equ	0xFFA
 11345                           tblptru	equ	0xFF8
 11346                           tblptrh	equ	0xFF7
 11347                           tblptrl	equ	0xFF6
 11348                           tablat	equ	0xFF5
 11349                           prodh	equ	0xFF4
 11350                           prodl	equ	0xFF3
 11351                           intcon	equ	0xFF2
 11352                           indf0	equ	0xFEF
 11353                           postinc0	equ	0xFEE
 11354                           fsr0h	equ	0xFEA
 11355                           fsr0l	equ	0xFE9
 11356                           wreg	equ	0xFE8
 11357                           indf1	equ	0xFE7
 11358                           postdec1	equ	0xFE5
 11359                           fsr1h	equ	0xFE2
 11360                           fsr1l	equ	0xFE1
 11361                           indf2	equ	0xFDF
 11362                           postinc2	equ	0xFDE
 11363                           postdec2	equ	0xFDD
 11364                           plusw2	equ	0xFDB
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function _USBStdFeatureReqHandler *****************
 11370 ;; Defined at:
 11371 ;;		line 2771 in file "../../../../../../framework/usb/src/usb_device.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;  p               2   24[COMRAM] PTR struct __BDT
 11376 ;;		 -> BDT(32), NULL(0), 
 11377 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 11378 ;;		 -> UEP0(1), 
 11379 ;;  current_ep_d    1   23[COMRAM] struct .
 11380 ;; Return value:  Size  Location     Type
 11381 ;;		None               void
 11382 ;; Registers used:
 11383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11389 ;;      Params:         0       0       0       0       0       0       0       0       0
 11390 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11391 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11392 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11393 ;;Total ram usage:        6 bytes
 11394 ;; Hardware stack levels used:    1
 11395 ;; Hardware stack levels required when called:    4
 11396 ;; This function calls:
 11397 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11398 ;; This function is called by:
 11399 ;;		_USBCheckStdRequest
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           
 11403                           	psect	text59
 11404  00001A                     __ptext59:
 11405                           	opt stack 0
 11406  00001A                     _USBStdFeatureReqHandler:
 11407                           	opt stack 15
 11408                           
 11409                           ;usb_device.c: 2773: BDT_ENTRY *p;
 11410                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 11411                           ;usb_device.c: 2778: unsigned char* pUEP;
 11412                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 11413                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 11414                           
 11415                           ;incstack = 0
 11416  00001A  0104               	movlb	4	; () banked
 11417  00001C  0522               	decf	34,w,b	;volatile
 11418  00001E  A4D8               	btfss	status,2,c
 11419  000020  D010               	goto	i2l984
 11420                           
 11421                           ; BSR set to: 4
 11422  000022  0104               	movlb	4	; () banked
 11423  000024  5120               	movf	32,w,b	;volatile
 11424  000026  0B1F               	andlw	31
 11425  000028  0900               	iorlw	0
 11426  00002A  A4D8               	btfss	status,2,c
 11427  00002C  D00A               	goto	i2l984
 11428                           
 11429                           ; BSR set to: 4
 11430                           ;usb_device.c: 2818: {
 11431                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 11432  00002E  8E3F               	bsf	_inPipes+3,7,c	;volatile
 11433                           
 11434                           ; BSR set to: 4
 11435                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 11436  000030  0E03               	movlw	3
 11437  000032  0104               	movlb	4	; () banked
 11438  000034  1921               	xorwf	33,w,b	;volatile
 11439  000036  A4D8               	btfss	status,2,c
 11440  000038  D002               	goto	i2l4553
 11441                           
 11442                           ; BSR set to: 4
 11443                           ;usb_device.c: 2821: RemoteWakeup = 1;
 11444  00003A  0E01               	movlw	1
 11445  00003C  D001               	goto	L4
 11446  00003E                     i2l4553:
 11447                           
 11448                           ; BSR set to: 4
 11449                           ;usb_device.c: 2822: else
 11450                           ;usb_device.c: 2823: RemoteWakeup = 0;
 11451  00003E  0E00               	movlw	0
 11452  000040                     L4:
 11453  000040  6E51               	movwf	_RemoteWakeup,c	;volatile
 11454  000042                     i2l984:
 11455                           
 11456                           ; BSR set to: 4
 11457                           ;usb_device.c: 2824: }
 11458                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 11459                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 11460                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 11461                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 11462  000042  0104               	movlb	4	; () banked
 11463  000044  5122               	movf	34,w,b	;volatile
 11464  000046  A4D8               	btfss	status,2,c
 11465  000048  0012               	return	
 11466                           
 11467                           ; BSR set to: 4
 11468  00004A  0104               	movlb	4	; () banked
 11469  00004C  5120               	movf	32,w,b	;volatile
 11470  00004E  0B1F               	andlw	31
 11471  000050  0A02               	xorlw	2
 11472  000052  A4D8               	btfss	status,2,c
 11473  000054  0012               	return	
 11474                           
 11475                           ; BSR set to: 4
 11476  000056  0104               	movlb	4	; () banked
 11477  000058  5124               	movf	36,w,b	;volatile
 11478  00005A  0B0F               	andlw	15
 11479  00005C  0900               	iorlw	0
 11480  00005E  B4D8               	btfsc	status,2,c
 11481  000060  0012               	return	
 11482                           
 11483                           ; BSR set to: 4
 11484  000062  0104               	movlb	4	; () banked
 11485  000064  5124               	movf	36,w,b	;volatile
 11486  000066  0B0F               	andlw	15
 11487  000068  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11488  00006A  0E02               	movlw	2
 11489  00006C  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 11490  00006E  0012               	return	
 11491                           
 11492                           ; BSR set to: 4
 11493  000070  0E20               	movlw	32
 11494  000072  1855               	xorwf	_USBDeviceState,w,c	;volatile
 11495  000074  A4D8               	btfss	status,2,c
 11496  000076  0012               	return	
 11497                           
 11498                           ; BSR set to: 4
 11499                           ;usb_device.c: 2831: {
 11500                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 11501  000078  8E3F               	bsf	_inPipes+3,7,c	;volatile
 11502                           
 11503                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 11504  00007A  0104               	movlb	4	; () banked
 11505  00007C  BF24               	btfsc	36,7,b	;volatile
 11506  00007E  D01B               	goto	i2l4567
 11507                           
 11508                           ; BSR set to: 4
 11509                           ;usb_device.c: 2838: {
 11510                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11511  000080  0104               	movlb	4	; () banked
 11512  000082  5124               	movf	36,w,b	;volatile
 11513  000084  0B0F               	andlw	15
 11514  000086  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11515  000088  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11516  00008A  0D02               	mullw	2
 11517  00008C  0ED3               	movlw	low _pBDTEntryOut
 11518  00008E  24F3               	addwf	prodl,w,c
 11519  000090  6ED9               	movwf	fsr2l,c
 11520  000092  0E00               	movlw	high _pBDTEntryOut
 11521  000094  20F4               	addwfc	prodh,w,c
 11522  000096  6EDA               	movwf	fsr2h,c
 11523  000098  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 11524  00009C  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11525                           
 11526                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 11527  0000A0  0104               	movlb	4	; () banked
 11528  0000A2  5124               	movf	36,w,b	;volatile
 11529  0000A4  0B0F               	andlw	15
 11530  0000A6  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11531  0000A8  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11532  0000AA  0D01               	mullw	1
 11533  0000AC  0E4A               	movlw	low _ep_data_out
 11534  0000AE  24F3               	addwf	prodl,w,c
 11535  0000B0  6ED9               	movwf	fsr2l,c
 11536  0000B2  0E00               	movlw	high _ep_data_out
 11537  0000B4  D01A               	goto	L5
 11538  0000B6                     i2l4567:
 11539                           
 11540                           ; BSR set to: 4
 11541                           ;usb_device.c: 2842: else
 11542                           ;usb_device.c: 2843: {
 11543                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11544  0000B6  0104               	movlb	4	; () banked
 11545  0000B8  5124               	movf	36,w,b	;volatile
 11546  0000BA  0B0F               	andlw	15
 11547  0000BC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11548  0000BE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11549  0000C0  0D02               	mullw	2
 11550  0000C2  0E42               	movlw	low _pBDTEntryIn
 11551  0000C4  24F3               	addwf	prodl,w,c
 11552  0000C6  6ED9               	movwf	fsr2l,c
 11553  0000C8  0E00               	movlw	high _pBDTEntryIn
 11554  0000CA  20F4               	addwfc	prodh,w,c
 11555  0000CC  6EDA               	movwf	fsr2h,c
 11556  0000CE  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 11557  0000D2  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11558                           
 11559                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11560  0000D6  0104               	movlb	4	; () banked
 11561  0000D8  5124               	movf	36,w,b	;volatile
 11562  0000DA  0B0F               	andlw	15
 11563  0000DC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11564  0000DE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11565  0000E0  0D01               	mullw	1
 11566  0000E2  0E48               	movlw	low _ep_data_in
 11567  0000E4  24F3               	addwf	prodl,w,c
 11568  0000E6  6ED9               	movwf	fsr2l,c
 11569  0000E8  0E00               	movlw	high _ep_data_in
 11570  0000EA                     L5:
 11571  0000EA  20F4               	addwfc	prodh,w,c
 11572  0000EC  6EDA               	movwf	fsr2h,c
 11573  0000EE  50DF               	movf	indf2,w,c
 11574  0000F0  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 11575                           
 11576                           ; BSR set to: 4
 11577                           ;usb_device.c: 2846: }
 11578                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11579                           
 11580                           ; BSR set to: 4
 11581  0000F2  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 11582  0000F4  D002               	goto	i2l4573
 11583                           
 11584                           ; BSR set to: 4
 11585                           ;usb_device.c: 2853: {
 11586                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11587  0000F6  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 11588                           
 11589                           ;usb_device.c: 2855: }
 11590  0000F8  D001               	goto	i2l4575
 11591  0000FA                     i2l4573:
 11592                           
 11593                           ; BSR set to: 4
 11594                           ;usb_device.c: 2856: else
 11595                           ;usb_device.c: 2857: {
 11596                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11597  0000FA  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 11598  0000FC                     i2l4575:
 11599                           
 11600                           ; BSR set to: 4
 11601                           ;usb_device.c: 2859: }
 11602                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11603  0000FC  0104               	movlb	4	; () banked
 11604  0000FE  BF24               	btfsc	36,7,b	;volatile
 11605  000100  D00B               	goto	i2l4579
 11606                           
 11607                           ; BSR set to: 4
 11608                           ;usb_device.c: 2865: {
 11609                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11610  000102  0104               	movlb	4	; () banked
 11611  000104  5124               	movf	36,w,b	;volatile
 11612  000106  0B0F               	andlw	15
 11613  000108  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11614  00010A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11615  00010C  0D02               	mullw	2
 11616  00010E  0ED3               	movlw	low _pBDTEntryOut
 11617  000110  24F3               	addwf	prodl,w,c
 11618  000112  6ED9               	movwf	fsr2l,c
 11619  000114  0E00               	movlw	high _pBDTEntryOut
 11620  000116  D00A               	goto	L6
 11621  000118                     i2l4579:
 11622                           
 11623                           ; BSR set to: 4
 11624                           ;usb_device.c: 2868: else
 11625                           ;usb_device.c: 2869: {
 11626                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11627  000118  0104               	movlb	4	; () banked
 11628  00011A  5124               	movf	36,w,b	;volatile
 11629  00011C  0B0F               	andlw	15
 11630  00011E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11631  000120  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11632  000122  0D02               	mullw	2
 11633  000124  0E42               	movlw	low _pBDTEntryIn
 11634  000126  24F3               	addwf	prodl,w,c
 11635  000128  6ED9               	movwf	fsr2l,c
 11636  00012A  0E00               	movlw	high _pBDTEntryIn
 11637  00012C                     L6:
 11638  00012C  20F4               	addwfc	prodh,w,c
 11639  00012E  6EDA               	movwf	fsr2h,c
 11640  000130  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11641  000134  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11642                           
 11643                           ; BSR set to: 4
 11644                           ;usb_device.c: 2871: }
 11645                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11646                           
 11647                           ; BSR set to: 4
 11648  000138  0E03               	movlw	3
 11649  00013A  0104               	movlb	4	; () banked
 11650  00013C  1921               	xorwf	33,w,b	;volatile
 11651  00013E  A4D8               	btfss	status,2,c
 11652  000140  D02E               	goto	i2l4595
 11653                           
 11654                           ; BSR set to: 4
 11655                           ;usb_device.c: 2875: {
 11656                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11657  000142  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11658  000146  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11659  00014A  AEDF               	btfss	indf2,7,c
 11660  00014C  D01B               	goto	i2l4591
 11661                           
 11662                           ; BSR set to: 4
 11663                           ;usb_device.c: 2877: {
 11664                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11665  00014E  0104               	movlb	4	; () banked
 11666  000150  BF24               	btfsc	36,7,b	;volatile
 11667  000152  D00B               	goto	i2l4589
 11668                           
 11669                           ; BSR set to: 4
 11670                           ;usb_device.c: 2881: {
 11671                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11672  000154  0104               	movlb	4	; () banked
 11673  000156  5124               	movf	36,w,b	;volatile
 11674  000158  0B0F               	andlw	15
 11675  00015A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11676  00015C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11677  00015E  0D01               	mullw	1
 11678  000160  0E4A               	movlw	low _ep_data_out
 11679  000162  24F3               	addwf	prodl,w,c
 11680  000164  6ED9               	movwf	fsr2l,c
 11681  000166  0E00               	movlw	high _ep_data_out
 11682  000168  D00A               	goto	L7
 11683  00016A                     i2l4589:
 11684                           
 11685                           ; BSR set to: 4
 11686                           ;usb_device.c: 2884: else
 11687                           ;usb_device.c: 2885: {
 11688                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11689  00016A  0104               	movlb	4	; () banked
 11690  00016C  5124               	movf	36,w,b	;volatile
 11691  00016E  0B0F               	andlw	15
 11692  000170  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11693  000172  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11694  000174  0D01               	mullw	1
 11695  000176  0E48               	movlw	low _ep_data_in
 11696  000178  24F3               	addwf	prodl,w,c
 11697  00017A  6ED9               	movwf	fsr2l,c
 11698  00017C  0E00               	movlw	high _ep_data_in
 11699  00017E                     L7:
 11700  00017E  20F4               	addwfc	prodh,w,c
 11701  000180  6EDA               	movwf	fsr2h,c
 11702  000182  82DF               	bsf	indf2,1,c
 11703  000184                     i2l4591:
 11704                           
 11705                           ; BSR set to: 4
 11706                           ;usb_device.c: 2887: }
 11707                           ;usb_device.c: 2888: }
 11708                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11709  000184  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11710  000188  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11711  00018C  0E00               	movlw	0
 11712  00018E  84DB               	bsf	plusw2,2,c
 11713                           
 11714                           ; BSR set to: 4
 11715                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11716  000190  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11717  000194  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11718  000198  0E00               	movlw	0
 11719  00019A  8EDB               	bsf	plusw2,7,c
 11720                           
 11721                           ;usb_device.c: 2893: }
 11722  00019C  0012               	return	
 11723  00019E                     i2l4595:
 11724                           
 11725                           ; BSR set to: 4
 11726                           ;usb_device.c: 2894: else
 11727                           ;usb_device.c: 2895: {
 11728                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11729  00019E  0E04               	movlw	4
 11730  0001A0  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 11731                           
 11732                           ; BSR set to: 4
 11733                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11734  0001A2  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11735  0001A6  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11736  0001AA  AEDF               	btfss	indf2,7,c
 11737  0001AC  D01B               	goto	i2l4605
 11738                           
 11739                           ; BSR set to: 4
 11740                           ;usb_device.c: 2902: {
 11741                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11742  0001AE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11743  0001B2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11744  0001B6  0E7F               	movlw	127
 11745  0001B8  16DF               	andwf	indf2,f,c
 11746                           
 11747                           ; BSR set to: 4
 11748                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11749  0001BA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11750  0001BE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11751  0001C2  0E00               	movlw	0
 11752  0001C4  8CDB               	bsf	plusw2,6,c
 11753                           
 11754                           ; BSR set to: 4
 11755                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11756  0001C6  0E00               	movlw	0
 11757  0001C8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11758  0001CA  0E05               	movlw	5
 11759  0001CC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11760  0001CE  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11761  0001D2  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11762  0001D6  0E00               	movlw	0
 11763  0001D8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11764  0001DA  0E02               	movlw	2
 11765  0001DC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11766  0001DE  ECA9  F014         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11767                           
 11768                           ;usb_device.c: 2908: }
 11769  0001E2  D006               	goto	i2l4607
 11770  0001E4                     i2l4605:
 11771                           
 11772                           ;usb_device.c: 2909: else
 11773                           ;usb_device.c: 2910: {
 11774                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11775  0001E4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11776  0001E8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11777  0001EC  0E00               	movlw	0
 11778  0001EE  8CDB               	bsf	plusw2,6,c
 11779  0001F0                     i2l4607:
 11780                           
 11781                           ;usb_device.c: 2913: }
 11782                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11783  0001F0  0E04               	movlw	4
 11784  0001F2  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 11785                           
 11786                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11787  0001F4  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 11788  0001F6  D006               	goto	i2l1003
 11789  0001F8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11790  0001FC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11791  000200  AEDF               	btfss	indf2,7,c
 11792  000202  D030               	goto	i2l4621
 11793  000204                     i2l1003:
 11794                           
 11795                           ;usb_device.c: 2924: {
 11796                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11797  000204  0104               	movlb	4	; () banked
 11798  000206  BF24               	btfsc	36,7,b	;volatile
 11799  000208  D00B               	goto	i2l4615
 11800                           
 11801                           ; BSR set to: 4
 11802                           ;usb_device.c: 2926: {
 11803                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11804  00020A  0104               	movlb	4	; () banked
 11805  00020C  5124               	movf	36,w,b	;volatile
 11806  00020E  0B0F               	andlw	15
 11807  000210  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11808  000212  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11809  000214  0D01               	mullw	1
 11810  000216  0E4A               	movlw	low _ep_data_out
 11811  000218  24F3               	addwf	prodl,w,c
 11812  00021A  6ED9               	movwf	fsr2l,c
 11813  00021C  0E00               	movlw	high _ep_data_out
 11814  00021E  D00A               	goto	L8
 11815  000220                     i2l4615:
 11816                           
 11817                           ; BSR set to: 4
 11818                           ;usb_device.c: 2929: else
 11819                           ;usb_device.c: 2930: {
 11820                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11821  000220  0104               	movlb	4	; () banked
 11822  000222  5124               	movf	36,w,b	;volatile
 11823  000224  0B0F               	andlw	15
 11824  000226  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11825  000228  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11826  00022A  0D01               	mullw	1
 11827  00022C  0E48               	movlw	low _ep_data_in
 11828  00022E  24F3               	addwf	prodl,w,c
 11829  000230  6ED9               	movwf	fsr2l,c
 11830  000232  0E00               	movlw	high _ep_data_in
 11831  000234                     L8:
 11832  000234  20F4               	addwfc	prodh,w,c
 11833  000236  6EDA               	movwf	fsr2h,c
 11834  000238  92DF               	bcf	indf2,1,c
 11835                           
 11836                           ; BSR set to: 4
 11837                           ;usb_device.c: 2932: }
 11838                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11839                           
 11840                           ; BSR set to: 4
 11841  00023A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11842  00023E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11843  000242  0E3B               	movlw	59
 11844  000244  16DF               	andwf	indf2,f,c
 11845                           
 11846                           ; BSR set to: 4
 11847                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11848  000246  0E00               	movlw	0
 11849  000248  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11850  00024A  0E05               	movlw	5
 11851  00024C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11852  00024E  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11853  000252  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11854  000256  0E00               	movlw	0
 11855  000258  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11856  00025A  0E02               	movlw	2
 11857  00025C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11858  00025E  ECA9  F014         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11859                           
 11860                           ;usb_device.c: 2938: }
 11861  000262  D006               	goto	i2l4623
 11862  000264                     i2l4621:
 11863                           
 11864                           ;usb_device.c: 2939: else
 11865                           ;usb_device.c: 2940: {
 11866                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11867  000264  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11868  000268  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11869  00026C  0E3B               	movlw	59
 11870  00026E  16DF               	andwf	indf2,f,c
 11871  000270                     i2l4623:
 11872                           
 11873                           ;usb_device.c: 2943: }
 11874                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11875  000270  0104               	movlb	4	; () banked
 11876  000272  5124               	movf	36,w,b	;volatile
 11877  000274  0B0F               	andlw	15
 11878  000276  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 11879  000278  5015               	movf	??_USBStdFeatureReqHandler,w,c
 11880  00027A  0D01               	mullw	1
 11881  00027C  0E70               	movlw	112
 11882  00027E  24F3               	addwf	prodl,w,c
 11883  000280  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 11884  000282  0E0F               	movlw	15
 11885  000284  20F4               	addwfc	prodh,w,c
 11886  000286  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 11887                           
 11888                           ; BSR set to: 4
 11889                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11890  000288  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11891  00028C  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11892  000290  0EFE               	movlw	254
 11893  000292  16DF               	andwf	indf2,f,c
 11894                           
 11895                           ; BSR set to: 4
 11896  000294  0012               	return	
 11897  000296                     __end_of_USBStdFeatureReqHandler:
 11898                           	opt stack 0
 11899                           pclatu	equ	0xFFB
 11900                           pclath	equ	0xFFA
 11901                           tblptru	equ	0xFF8
 11902                           tblptrh	equ	0xFF7
 11903                           tblptrl	equ	0xFF6
 11904                           tablat	equ	0xFF5
 11905                           prodh	equ	0xFF4
 11906                           prodl	equ	0xFF3
 11907                           intcon	equ	0xFF2
 11908                           indf0	equ	0xFEF
 11909                           postinc0	equ	0xFEE
 11910                           fsr0h	equ	0xFEA
 11911                           fsr0l	equ	0xFE9
 11912                           wreg	equ	0xFE8
 11913                           indf1	equ	0xFE7
 11914                           postdec1	equ	0xFE5
 11915                           fsr1h	equ	0xFE2
 11916                           fsr1l	equ	0xFE1
 11917                           indf2	equ	0xFDF
 11918                           postinc2	equ	0xFDE
 11919                           postdec2	equ	0xFDD
 11920                           plusw2	equ	0xFDB
 11921                           fsr2h	equ	0xFDA
 11922                           fsr2l	equ	0xFD9
 11923                           status	equ	0xFD8
 11924                           
 11925 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11926 ;; Defined at:
 11927 ;;		line 196 in file "../src/main.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;  event           2   12[COMRAM] enum E4710
 11930 ;;  pdata           2   14[COMRAM] PTR void 
 11931 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
 11932 ;;  size            2   16[COMRAM] unsigned int 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;		None
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  1    wreg      unsigned char 
 11937 ;; Registers used:
 11938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11944 ;;      Params:         6       0       0       0       0       0       0       0       0
 11945 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11946 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11947 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11948 ;;Total ram usage:        8 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; Hardware stack levels required when called:    3
 11951 ;; This function calls:
 11952 ;;		_APP_DeviceMouseInitialize
 11953 ;;		_APP_DeviceMouseSOFHandler
 11954 ;;		_APP_LEDUpdateUSBStatus
 11955 ;;		_USBCheckHIDRequest
 11956 ;;		i2_SYSTEM_Initialize
 11957 ;; This function is called by:
 11958 ;;		_USBDeviceTasks
 11959 ;;		_USBStdSetCfgHandler
 11960 ;;		_USBSuspend
 11961 ;;		_USBWakeFromSuspend
 11962 ;;		_USBCtrlTrfSetupHandler
 11963 ;;		_USBCheckStdRequest
 11964 ;;		_USBStdFeatureReqHandler
 11965 ;; This function uses a non-reentrant model
 11966 ;;
 11967                           
 11968                           	psect	text60
 11969  002952                     __ptext60:
 11970                           	opt stack 0
 11971  002952                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11972                           	opt stack 19
 11973                           
 11974                           ;main.c: 198: switch( (int) event )
 11975                           
 11976                           ; BSR set to: 4
 11977                           ;incstack = 0
 11978  002952  D017               	goto	i2l4291
 11979  002954                     i2l4277:
 11980                           
 11981                           ;main.c: 206: APP_LEDUpdateUSBStatus();
 11982  002954  ECEA  F014         	call	_APP_LEDUpdateUSBStatus	;wreg free
 11983                           
 11984                           ;main.c: 207: APP_DeviceMouseSOFHandler();
 11985  002958  EC03  F00F         	call	_APP_DeviceMouseSOFHandler	;wreg free
 11986                           
 11987                           ;main.c: 208: break;
 11988  00295C  0012               	return	
 11989  00295E                     i2l4281:
 11990                           
 11991                           ;main.c: 212: APP_LEDUpdateUSBStatus();
 11992  00295E  ECEA  F014         	call	_APP_LEDUpdateUSBStatus	;wreg free
 11993                           
 11994                           ;main.c: 220: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 11995  002962  0E01               	movlw	1
 11996  002964  EC33  F019         	call	i2_SYSTEM_Initialize
 11997                           
 11998                           ;main.c: 221: break;
 11999  002968  0012               	return	
 12000  00296A                     i2l4283:
 12001                           
 12002                           ;main.c: 225: APP_LEDUpdateUSBStatus();
 12003  00296A  ECEA  F014         	call	_APP_LEDUpdateUSBStatus	;wreg free
 12004                           
 12005                           ;main.c: 231: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 12006  00296E  0E02               	movlw	2
 12007  002970  EC33  F019         	call	i2_SYSTEM_Initialize
 12008                           
 12009                           ;main.c: 232: break;
 12010  002974  0012               	return	
 12011  002976                     i2l4285:
 12012                           
 12013                           ;main.c: 237: APP_DeviceMouseInitialize();
 12014  002976  EC8F  F018         	call	_APP_DeviceMouseInitialize	;wreg free
 12015                           
 12016                           ;main.c: 241: break;
 12017                           
 12018                           ;main.c: 240: case EVENT_SET_DESCRIPTOR:
 12019                           
 12020                           ;main.c: 238: break;
 12021  00297A  0012               	return	
 12022  00297C                     i2l4287:
 12023                           
 12024                           ;main.c: 246: USBCheckHIDRequest();
 12025  00297C  EC45  F00D         	call	_USBCheckHIDRequest	;wreg free
 12026                           
 12027                           ;main.c: 257: }
 12028                           
 12029                           ;main.c: 256: break;
 12030                           
 12031                           ;main.c: 255: default:
 12032                           
 12033                           ;main.c: 253: break;
 12034                           
 12035                           ;main.c: 252: case EVENT_TRANSFER_TERMINATED:
 12036                           
 12037                           ;main.c: 250: break;
 12038                           
 12039                           ;main.c: 249: case EVENT_BUS_ERROR:
 12040                           
 12041                           ;main.c: 247: break;
 12042  002980  0012               	return	
 12043  002982                     i2l4291:
 12044  002982  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 12045  002986  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 12046                           
 12047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12048                           ; Switch size 1, requested type "space"
 12049                           ; Number of cases is 2, Range of values is 0 to 127
 12050                           ; switch strategies available:
 12051                           ; Name         Instructions Cycles
 12052                           ; simple_byte            7     4 (average)
 12053                           ;	Chosen strategy is simple_byte
 12054  00298A  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 12055  00298C  0A00               	xorlw	0	; case 0
 12056  00298E  B4D8               	btfsc	status,2,c
 12057  002990  D004               	goto	i2l6149
 12058  002992  0A7F               	xorlw	127	; case 127
 12059  002994  A4D8               	btfss	status,2,c
 12060  002996  0012               	return	
 12061  002998  D01A               	goto	i2l6151
 12062  00299A                     i2l6149:
 12063                           
 12064                           ; Switch size 1, requested type "space"
 12065                           ; Number of cases is 8, Range of values is 1 to 117
 12066                           ; switch strategies available:
 12067                           ; Name         Instructions Cycles
 12068                           ; simple_byte           25    13 (average)
 12069                           ;	Chosen strategy is simple_byte
 12070  00299A  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 12071  00299C  0A01               	xorlw	1	; case 1
 12072  00299E  B4D8               	btfsc	status,2,c
 12073  0029A0  D7EA               	goto	i2l4285
 12074  0029A2  0A03               	xorlw	3	; case 2
 12075  0029A4  B4D8               	btfsc	status,2,c
 12076  0029A6  0012               	return	
 12077  0029A8  0A01               	xorlw	1	; case 3
 12078  0029AA  B4D8               	btfsc	status,2,c
 12079  0029AC  D7E7               	goto	i2l4287
 12080  0029AE  0A06               	xorlw	6	; case 5
 12081  0029B0  B4D8               	btfsc	status,2,c
 12082  0029B2  0012               	return	
 12083  0029B4  0A77               	xorlw	119	; case 114
 12084  0029B6  B4D8               	btfsc	status,2,c
 12085  0029B8  0012               	return	
 12086  0029BA  0A01               	xorlw	1	; case 115
 12087  0029BC  B4D8               	btfsc	status,2,c
 12088  0029BE  D7CA               	goto	i2l4277
 12089  0029C0  0A07               	xorlw	7	; case 116
 12090  0029C2  B4D8               	btfsc	status,2,c
 12091  0029C4  D7D2               	goto	i2l4283
 12092  0029C6  0A01               	xorlw	1	; case 117
 12093  0029C8  A4D8               	btfss	status,2,c
 12094  0029CA  0012               	return	
 12095  0029CC  D7C8               	goto	i2l4281
 12096  0029CE                     i2l6151:
 12097                           
 12098                           ; Switch size 1, requested type "space"
 12099                           ; Number of cases is 1, Range of values is 255 to 255
 12100                           ; switch strategies available:
 12101                           ; Name         Instructions Cycles
 12102                           ; simple_byte            4     3 (average)
 12103                           ;	Chosen strategy is simple_byte
 12104  0029CE  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 12105  0029D0  0AFF               	xorlw	255	; case 255
 12106  0029D2  0012               	return	
 12107  0029D4                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 12108                           	opt stack 0
 12109                           pclatu	equ	0xFFB
 12110                           pclath	equ	0xFFA
 12111                           tblptru	equ	0xFF8
 12112                           tblptrh	equ	0xFF7
 12113                           tblptrl	equ	0xFF6
 12114                           tablat	equ	0xFF5
 12115                           prodh	equ	0xFF4
 12116                           prodl	equ	0xFF3
 12117                           intcon	equ	0xFF2
 12118                           indf0	equ	0xFEF
 12119                           postinc0	equ	0xFEE
 12120                           fsr0h	equ	0xFEA
 12121                           fsr0l	equ	0xFE9
 12122                           wreg	equ	0xFE8
 12123                           indf1	equ	0xFE7
 12124                           postdec1	equ	0xFE5
 12125                           fsr1h	equ	0xFE2
 12126                           fsr1l	equ	0xFE1
 12127                           indf2	equ	0xFDF
 12128                           postinc2	equ	0xFDE
 12129                           postdec2	equ	0xFDD
 12130                           plusw2	equ	0xFDB
 12131                           fsr2h	equ	0xFDA
 12132                           fsr2l	equ	0xFD9
 12133                           status	equ	0xFD8
 12134                           
 12135 ;; *************** function i2_SYSTEM_Initialize *****************
 12136 ;; Defined at:
 12137 ;;		line 81 in file "../src/system_config/picdem_fs_usb/system.c"
 12138 ;; Parameters:    Size  Location     Type
 12139 ;;  state           1    wreg     enum E4693
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;  state           1    1[COMRAM] enum E4693
 12142 ;; Return value:  Size  Location     Type
 12143 ;;		None               void
 12144 ;; Registers used:
 12145 ;;		wreg, status,2, status,0, cstack
 12146 ;; Tracked objects:
 12147 ;;		On entry : 0/0
 12148 ;;		On exit  : 0/0
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12151 ;;      Params:         0       0       0       0       0       0       0       0       0
 12152 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12153 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12154 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12155 ;;Total ram usage:        1 bytes
 12156 ;; Hardware stack levels used:    1
 12157 ;; Hardware stack levels required when called:    1
 12158 ;; This function calls:
 12159 ;;		i2_BUTTON_Enable
 12160 ;;		i2_LED_Enable
 12161 ;; This function is called by:
 12162 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           	psect	text61
 12167  003266                     __ptext61:
 12168                           	opt stack 0
 12169  003266                     i2_SYSTEM_Initialize:
 12170                           	opt stack 20
 12171                           
 12172                           ;incstack = 0
 12173                           ;i2SYSTEM_Initialize@state stored from wreg
 12174  003266  6E02               	movwf	i2SYSTEM_Initialize@state,c
 12175                           
 12176                           ;system.c: 83: switch(state)
 12177  003268  D007               	goto	i2l4273
 12178  00326A                     i2l4269:
 12179                           
 12180                           ;system.c: 86: LED_Enable(LED_D1);
 12181  00326A  0E01               	movlw	1
 12182  00326C  ECA8  F017         	call	i2_LED_Enable
 12183                           
 12184                           ;system.c: 87: BUTTON_Enable(BUTTON_S2);
 12185  003270  0E01               	movlw	1
 12186  003272  EC56  F019         	call	i2_BUTTON_Enable
 12187                           
 12188                           ;system.c: 95: }
 12189                           
 12190                           ;system.c: 94: break;
 12191                           
 12192                           ;system.c: 93: case SYSTEM_STATE_USB_RESUME:
 12193                           
 12194                           ;system.c: 91: break;
 12195                           
 12196                           ;system.c: 90: case SYSTEM_STATE_USB_SUSPEND:
 12197                           
 12198                           ;system.c: 88: break;
 12199  003276  0012               	return	
 12200  003278                     i2l4273:
 12201  003278  5002               	movf	i2SYSTEM_Initialize@state,w,c
 12202                           
 12203                           ; Switch size 1, requested type "space"
 12204                           ; Number of cases is 3, Range of values is 0 to 2
 12205                           ; switch strategies available:
 12206                           ; Name         Instructions Cycles
 12207                           ; simple_byte           10     6 (average)
 12208                           ;	Chosen strategy is simple_byte
 12209  00327A  0A00               	xorlw	0	; case 0
 12210  00327C  B4D8               	btfsc	status,2,c
 12211  00327E  D7F5               	goto	i2l4269
 12212  003280  0A01               	xorlw	1	; case 1
 12213  003282  B4D8               	btfsc	status,2,c
 12214  003284  0012               	return	
 12215  003286  0A03               	xorlw	3	; case 2
 12216  003288  0012               	return	
 12217  00328A                     __end_ofi2_SYSTEM_Initialize:
 12218                           	opt stack 0
 12219                           pclatu	equ	0xFFB
 12220                           pclath	equ	0xFFA
 12221                           tblptru	equ	0xFF8
 12222                           tblptrh	equ	0xFF7
 12223                           tblptrl	equ	0xFF6
 12224                           tablat	equ	0xFF5
 12225                           prodh	equ	0xFF4
 12226                           prodl	equ	0xFF3
 12227                           intcon	equ	0xFF2
 12228                           indf0	equ	0xFEF
 12229                           postinc0	equ	0xFEE
 12230                           fsr0h	equ	0xFEA
 12231                           fsr0l	equ	0xFE9
 12232                           wreg	equ	0xFE8
 12233                           indf1	equ	0xFE7
 12234                           postdec1	equ	0xFE5
 12235                           fsr1h	equ	0xFE2
 12236                           fsr1l	equ	0xFE1
 12237                           indf2	equ	0xFDF
 12238                           postinc2	equ	0xFDE
 12239                           postdec2	equ	0xFDD
 12240                           plusw2	equ	0xFDB
 12241                           fsr2h	equ	0xFDA
 12242                           fsr2l	equ	0xFD9
 12243                           status	equ	0xFD8
 12244                           
 12245 ;; *************** function i2_LED_Enable *****************
 12246 ;; Defined at:
 12247 ;;		line 257 in file "../../../../../../bsp/picdem_fs_usb/leds.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;  led             1    wreg     enum E2
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;  led             1    0[COMRAM] enum E2
 12252 ;; Return value:  Size  Location     Type
 12253 ;;		None               void
 12254 ;; Registers used:
 12255 ;;		wreg, status,2, status,0
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12261 ;;      Params:         0       0       0       0       0       0       0       0       0
 12262 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12264 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12265 ;;Total ram usage:        1 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; This function calls:
 12268 ;;		Nothing
 12269 ;; This function is called by:
 12270 ;;		i2_SYSTEM_Initialize
 12271 ;; This function uses a non-reentrant model
 12272 ;;
 12273                           
 12274                           	psect	text62
 12275  002F50                     __ptext62:
 12276                           	opt stack 0
 12277  002F50                     i2_LED_Enable:
 12278                           	opt stack 20
 12279                           
 12280                           ;incstack = 0
 12281                           ;i2LED_Enable@led stored from wreg
 12282  002F50  6E01               	movwf	i2LED_Enable@led,c
 12283                           
 12284                           ;leds.c: 259: switch(led)
 12285  002F52  D008               	goto	i2l4117
 12286  002F54                     i2l613:
 12287                           
 12288                           ;leds.c: 262: TRISDbits.TRISD0 = 0;
 12289  002F54  9095               	bcf	3989,0,c	;volatile
 12290                           
 12291                           ;leds.c: 263: break;
 12292  002F56  0012               	return	
 12293  002F58                     i2l615:
 12294                           
 12295                           ;leds.c: 266: TRISDbits.TRISD1 = 0;
 12296  002F58  9295               	bcf	3989,1,c	;volatile
 12297                           
 12298                           ;leds.c: 267: break;
 12299  002F5A  0012               	return	
 12300  002F5C                     i2l616:
 12301                           
 12302                           ;leds.c: 270: TRISDbits.TRISD2 = 0;
 12303  002F5C  9495               	bcf	3989,2,c	;volatile
 12304                           
 12305                           ;leds.c: 271: break;
 12306  002F5E  0012               	return	
 12307  002F60                     i2l617:
 12308                           
 12309                           ;leds.c: 274: TRISDbits.TRISD3 = 0;
 12310  002F60  9695               	bcf	3989,3,c	;volatile
 12311                           
 12312                           ;leds.c: 279: }
 12313                           
 12314                           ;leds.c: 278: break;
 12315                           
 12316                           ;leds.c: 277: case LED_NONE:
 12317                           
 12318                           ;leds.c: 275: break;
 12319  002F62  0012               	return	
 12320  002F64                     i2l4117:
 12321  002F64  5001               	movf	i2LED_Enable@led,w,c
 12322                           
 12323                           ; Switch size 1, requested type "space"
 12324                           ; Number of cases is 5, Range of values is 0 to 4
 12325                           ; switch strategies available:
 12326                           ; Name         Instructions Cycles
 12327                           ; simple_byte           16     9 (average)
 12328                           ;	Chosen strategy is simple_byte
 12329  002F66  0A00               	xorlw	0	; case 0
 12330  002F68  B4D8               	btfsc	status,2,c
 12331  002F6A  0012               	return	
 12332  002F6C  0A01               	xorlw	1	; case 1
 12333  002F6E  B4D8               	btfsc	status,2,c
 12334  002F70  D7F1               	goto	i2l613
 12335  002F72  0A03               	xorlw	3	; case 2
 12336  002F74  B4D8               	btfsc	status,2,c
 12337  002F76  D7F0               	goto	i2l615
 12338  002F78  0A01               	xorlw	1	; case 3
 12339  002F7A  B4D8               	btfsc	status,2,c
 12340  002F7C  D7EF               	goto	i2l616
 12341  002F7E  0A07               	xorlw	7	; case 4
 12342  002F80  A4D8               	btfss	status,2,c
 12343  002F82  0012               	return	
 12344  002F84  D7ED               	goto	i2l617
 12345  002F86                     __end_ofi2_LED_Enable:
 12346                           	opt stack 0
 12347                           pclatu	equ	0xFFB
 12348                           pclath	equ	0xFFA
 12349                           tblptru	equ	0xFF8
 12350                           tblptrh	equ	0xFF7
 12351                           tblptrl	equ	0xFF6
 12352                           tablat	equ	0xFF5
 12353                           prodh	equ	0xFF4
 12354                           prodl	equ	0xFF3
 12355                           intcon	equ	0xFF2
 12356                           indf0	equ	0xFEF
 12357                           postinc0	equ	0xFEE
 12358                           fsr0h	equ	0xFEA
 12359                           fsr0l	equ	0xFE9
 12360                           wreg	equ	0xFE8
 12361                           indf1	equ	0xFE7
 12362                           postdec1	equ	0xFE5
 12363                           fsr1h	equ	0xFE2
 12364                           fsr1l	equ	0xFE1
 12365                           indf2	equ	0xFDF
 12366                           postinc2	equ	0xFDE
 12367                           postdec2	equ	0xFDD
 12368                           plusw2	equ	0xFDB
 12369                           fsr2h	equ	0xFDA
 12370                           fsr2l	equ	0xFD9
 12371                           status	equ	0xFD8
 12372                           
 12373 ;; *************** function i2_BUTTON_Enable *****************
 12374 ;; Defined at:
 12375 ;;		line 128 in file "../../../../../../bsp/picdem_fs_usb/buttons.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;  button          1    wreg     enum E4441
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;  button          1    0[COMRAM] enum E4441
 12380 ;; Return value:  Size  Location     Type
 12381 ;;		None               void
 12382 ;; Registers used:
 12383 ;;		wreg, status,2, status,0
 12384 ;; Tracked objects:
 12385 ;;		On entry : 0/0
 12386 ;;		On exit  : 0/0
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12389 ;;      Params:         0       0       0       0       0       0       0       0       0
 12390 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12391 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12392 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12393 ;;Total ram usage:        1 bytes
 12394 ;; Hardware stack levels used:    1
 12395 ;; This function calls:
 12396 ;;		Nothing
 12397 ;; This function is called by:
 12398 ;;		i2_SYSTEM_Initialize
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text63
 12403  0032AC                     __ptext63:
 12404                           	opt stack 0
 12405  0032AC                     i2_BUTTON_Enable:
 12406                           	opt stack 20
 12407                           
 12408                           ;incstack = 0
 12409                           ;i2BUTTON_Enable@button stored from wreg
 12410  0032AC  6E01               	movwf	i2BUTTON_Enable@button,c
 12411                           
 12412                           ;buttons.c: 130: switch(button)
 12413  0032AE  D004               	goto	i2l4111
 12414  0032B0                     i2l561:
 12415                           
 12416                           ;buttons.c: 133: TRISBbits.TRISB4 = 1;
 12417  0032B0  8893               	bsf	3987,4,c	;volatile
 12418                           
 12419                           ;buttons.c: 134: break;
 12420  0032B2  0012               	return	
 12421  0032B4                     i2l563:
 12422                           
 12423                           ;buttons.c: 137: TRISBbits.TRISB5 = 1;
 12424  0032B4  8A93               	bsf	3987,5,c	;volatile
 12425                           
 12426                           ;buttons.c: 142: }
 12427                           
 12428                           ;buttons.c: 141: break;
 12429                           
 12430                           ;buttons.c: 140: case BUTTON_NONE:
 12431                           
 12432                           ;buttons.c: 138: break;
 12433  0032B6  0012               	return	
 12434  0032B8                     i2l4111:
 12435  0032B8  5001               	movf	i2BUTTON_Enable@button,w,c
 12436                           
 12437                           ; Switch size 1, requested type "space"
 12438                           ; Number of cases is 3, Range of values is 0 to 2
 12439                           ; switch strategies available:
 12440                           ; Name         Instructions Cycles
 12441                           ; simple_byte           10     6 (average)
 12442                           ;	Chosen strategy is simple_byte
 12443  0032BA  0A00               	xorlw	0	; case 0
 12444  0032BC  B4D8               	btfsc	status,2,c
 12445  0032BE  0012               	return	
 12446  0032C0  0A01               	xorlw	1	; case 1
 12447  0032C2  B4D8               	btfsc	status,2,c
 12448  0032C4  D7F5               	goto	i2l561
 12449  0032C6  0A03               	xorlw	3	; case 2
 12450  0032C8  A4D8               	btfss	status,2,c
 12451  0032CA  0012               	return	
 12452  0032CC  D7F3               	goto	i2l563
 12453  0032CE                     __end_ofi2_BUTTON_Enable:
 12454                           	opt stack 0
 12455                           pclatu	equ	0xFFB
 12456                           pclath	equ	0xFFA
 12457                           tblptru	equ	0xFF8
 12458                           tblptrh	equ	0xFF7
 12459                           tblptrl	equ	0xFF6
 12460                           tablat	equ	0xFF5
 12461                           prodh	equ	0xFF4
 12462                           prodl	equ	0xFF3
 12463                           intcon	equ	0xFF2
 12464                           indf0	equ	0xFEF
 12465                           postinc0	equ	0xFEE
 12466                           fsr0h	equ	0xFEA
 12467                           fsr0l	equ	0xFE9
 12468                           wreg	equ	0xFE8
 12469                           indf1	equ	0xFE7
 12470                           postdec1	equ	0xFE5
 12471                           fsr1h	equ	0xFE2
 12472                           fsr1l	equ	0xFE1
 12473                           indf2	equ	0xFDF
 12474                           postinc2	equ	0xFDE
 12475                           postdec2	equ	0xFDD
 12476                           plusw2	equ	0xFDB
 12477                           fsr2h	equ	0xFDA
 12478                           fsr2l	equ	0xFD9
 12479                           status	equ	0xFD8
 12480                           
 12481 ;; *************** function _USBCheckHIDRequest *****************
 12482 ;; Defined at:
 12483 ;;		line 153 in file "../../../../../../framework/usb/src/usb_device_hid.c"
 12484 ;; Parameters:    Size  Location     Type
 12485 ;;		None
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;		None
 12488 ;; Return value:  Size  Location     Type
 12489 ;;		None               void
 12490 ;; Registers used:
 12491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12497 ;;      Params:         0       0       0       0       0       0       0       0       0
 12498 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12500 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12501 ;;Total ram usage:        0 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; Hardware stack levels required when called:    1
 12504 ;; This function calls:
 12505 ;;		_APP_DeviceMouseIdleRateCallback
 12506 ;; This function is called by:
 12507 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12508 ;; This function uses a non-reentrant model
 12509 ;;
 12510                           
 12511                           	psect	text64
 12512  001A8A                     __ptext64:
 12513                           	opt stack 0
 12514  001A8A                     _USBCheckHIDRequest:
 12515                           	opt stack 20
 12516                           
 12517                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 12518                           
 12519                           ;incstack = 0
 12520  001A8A  0104               	movlb	4	; () banked
 12521  001A8C  5120               	movf	32,w,b	;volatile
 12522  001A8E  0B1F               	andlw	31
 12523  001A90  06E8               	decf	wreg,f,c
 12524  001A92  A4D8               	btfss	status,2,c
 12525  001A94  0012               	return	
 12526                           
 12527                           ; BSR set to: 4
 12528                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 12529                           
 12530                           ; BSR set to: 4
 12531                           
 12532                           ; BSR set to: 4
 12533  001A96  0104               	movlb	4	; () banked
 12534  001A98  5124               	movf	36,w,b	;volatile
 12535  001A9A  A4D8               	btfss	status,2,c
 12536  001A9C  0012               	return	
 12537                           
 12538                           ; BSR set to: 4
 12539                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 12540                           
 12541                           ; BSR set to: 4
 12542                           
 12543                           ; BSR set to: 4
 12544  001A9E  0E06               	movlw	6
 12545  001AA0  0104               	movlb	4	; () banked
 12546  001AA2  1921               	xorwf	33,w,b	;volatile
 12547  001AA4  B4D8               	btfsc	status,2,c
 12548  001AA6  D018               	goto	i2l4235
 12549  001AA8  D020               	goto	i2l4237
 12550  001AAA                     i2l4219:
 12551                           
 12552                           ; BSR set to: 4
 12553                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 12554  001AAA  045C               	decf	_USBActiveConfiguration,w,c	;volatile
 12555  001AAC  A4D8               	btfss	status,2,c
 12556  001AAE  D01D               	goto	i2l4237
 12557                           
 12558                           ; BSR set to: 4
 12559                           ;usb_device_hid.c: 169: {
 12560                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 12561  001AB0  0E9F               	movlw	low (_configDescriptor1+18)
 12562  001AB2  6E3C               	movwf	_inPipes,c	;volatile
 12563  001AB4  0E7F               	movlw	high (_configDescriptor1+18)
 12564  001AB6  6E3D               	movwf	_inPipes+1,c	;volatile
 12565                           
 12566                           ; BSR set to: 4
 12567  001AB8  0E00               	movlw	0
 12568  001ABA  6E41               	movwf	_inPipes+5,c	;volatile
 12569  001ABC  0E09               	movlw	9
 12570  001ABE  D00A               	goto	L9
 12571  001AC0                     i2l4225:
 12572                           
 12573                           ; BSR set to: 4
 12574  001AC0  0EC0               	movlw	192
 12575  001AC2  6E3F               	movwf	_inPipes+3,c	;volatile
 12576                           
 12577                           ; BSR set to: 4
 12578                           ;usb_device_hid.c: 174: }
 12579                           ;usb_device_hid.c: 175: break;
 12580  001AC4  D012               	goto	i2l4237
 12581  001AC6                     i2l4227:
 12582                           
 12583                           ; BSR set to: 4
 12584                           ;usb_device_hid.c: 178: {
 12585                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 50; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 12586  001AC6  0E2D               	movlw	low _hid_rpt01
 12587  001AC8  6E3C               	movwf	_inPipes,c	;volatile
 12588  001ACA  0E7F               	movlw	high _hid_rpt01
 12589  001ACC  6E3D               	movwf	_inPipes+1,c	;volatile
 12590                           
 12591                           ; BSR set to: 4
 12592  001ACE  0E00               	movlw	0
 12593  001AD0  6E41               	movwf	_inPipes+5,c	;volatile
 12594  001AD2  0E32               	movlw	50
 12595  001AD4                     L9:
 12596  001AD4  6E40               	movwf	_inPipes+4,c	;volatile
 12597  001AD6  D7F4               	goto	i2l4225
 12598  001AD8                     i2l4235:
 12599                           
 12600                           ; BSR set to: 4
 12601  001AD8  0104               	movlb	4	; () banked
 12602  001ADA  5123               	movf	35,w,b	;volatile
 12603                           
 12604                           ; Switch size 1, requested type "space"
 12605                           ; Number of cases is 3, Range of values is 33 to 35
 12606                           ; switch strategies available:
 12607                           ; Name         Instructions Cycles
 12608                           ; simple_byte           10     6 (average)
 12609                           ;	Chosen strategy is simple_byte
 12610  001ADC  0A21               	xorlw	33	; case 33
 12611  001ADE  B4D8               	btfsc	status,2,c
 12612  001AE0  D7E4               	goto	i2l4219
 12613  001AE2  0A03               	xorlw	3	; case 34
 12614  001AE4  B4D8               	btfsc	status,2,c
 12615  001AE6  D7EF               	goto	i2l4227
 12616  001AE8  0A01               	xorlw	1	; case 35
 12617  001AEA                     i2l4237:
 12618                           
 12619                           ; BSR set to: 4
 12620                           ;usb_device_hid.c: 199: }
 12621                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 12622  001AEA  0104               	movlb	4	; () banked
 12623  001AEC  3920               	swapf	32,w,b	;volatile
 12624  001AEE  32E8               	rrcf	wreg,f,c
 12625  001AF0  0B03               	andlw	3
 12626  001AF2  06E8               	decf	wreg,f,c
 12627  001AF4  A4D8               	btfss	status,2,c
 12628  001AF6  0012               	return	
 12629  001AF8  D026               	goto	i2l4265
 12630  001AFA                     i2l4241:
 12631                           
 12632                           ; BSR set to: 4
 12633                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 12634  001AFA  0EF8               	movlw	low _idle_rate
 12635  001AFC  6E3C               	movwf	_inPipes,c	;volatile
 12636  001AFE  0E00               	movlw	high _idle_rate
 12637  001B00  6E3D               	movwf	_inPipes+1,c	;volatile
 12638                           
 12639                           ; BSR set to: 4
 12640  001B02  0E00               	movlw	0
 12641  001B04  6E41               	movwf	_inPipes+5,c	;volatile
 12642  001B06  0E01               	movlw	1
 12643  001B08  6E40               	movwf	_inPipes+4,c	;volatile
 12644                           
 12645                           ; BSR set to: 4
 12646  001B0A  0EC1               	movlw	193
 12647  001B0C  6E3F               	movwf	_inPipes+3,c	;volatile
 12648                           
 12649                           ;usb_device_hid.c: 223: break;
 12650  001B0E  0012               	return	
 12651  001B10                     i2l4247:
 12652                           
 12653                           ; BSR set to: 4
 12654                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 12655  001B10  0E80               	movlw	128
 12656  001B12  6E3F               	movwf	_inPipes+3,c	;volatile
 12657                           
 12658                           ; BSR set to: 4
 12659                           ;usb_device_hid.c: 226: idle_rate = ((USB_SETUP_SET_IDLE_RATE*)&SetupPkt)->duration;
 12660  001B14  C423 F0F8          	movff	1059,_idle_rate
 12661                           
 12662                           ; BSR set to: 4
 12663                           ;usb_device_hid.c: 227: APP_DeviceMouseIdleRateCallback(((USB_SETUP_SET_IDLE_RATE*)&Setu
      +                          pPkt)->reportId, idle_rate);
 12664  001B18  C0F8  F001         	movff	_idle_rate,APP_DeviceMouseIdleRateCallback@idleRate
 12665  001B1C  0104               	movlb	4	; () banked
 12666  001B1E  5122               	movf	34,w,b
 12667  001B20  ECC3  F017         	call	_APP_DeviceMouseIdleRateCallback
 12668                           
 12669                           ;usb_device_hid.c: 228: break;
 12670  001B24  0012               	return	
 12671  001B26                     i2l4253:
 12672                           
 12673                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 12674  001B26  0EF7               	movlw	low _active_protocol
 12675  001B28  6E3C               	movwf	_inPipes,c	;volatile
 12676  001B2A  0E00               	movlw	high _active_protocol
 12677  001B2C  6E3D               	movwf	_inPipes+1,c	;volatile
 12678  001B2E  0E00               	movlw	0
 12679  001B30  6E41               	movwf	_inPipes+5,c	;volatile
 12680  001B32  0E01               	movlw	1
 12681  001B34  6E40               	movwf	_inPipes+4,c	;volatile
 12682  001B36  0E81               	movlw	129
 12683  001B38  6E3F               	movwf	_inPipes+3,c	;volatile
 12684                           
 12685                           ;usb_device_hid.c: 234: break;
 12686  001B3A  0012               	return	
 12687  001B3C                     i2l4259:
 12688                           
 12689                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 12690  001B3C  0E80               	movlw	128
 12691  001B3E  6E3F               	movwf	_inPipes+3,c	;volatile
 12692                           
 12693                           ;usb_device_hid.c: 237: active_protocol = ((USB_SETUP_SET_PROTOCOL*)&SetupPkt)->protocol
      +                          ;
 12694  001B40  C422 F0F7          	movff	1058,_active_protocol
 12695                           
 12696                           ;usb_device_hid.c: 239: }
 12697                           
 12698                           ;usb_device_hid.c: 238: break;
 12699  001B44  0012               	return	
 12700  001B46                     i2l4265:
 12701  001B46  0104               	movlb	4	; () banked
 12702  001B48  5121               	movf	33,w,b	;volatile
 12703                           
 12704                           ; Switch size 1, requested type "space"
 12705                           ; Number of cases is 6, Range of values is 1 to 11
 12706                           ; switch strategies available:
 12707                           ; Name         Instructions Cycles
 12708                           ; simple_byte           19    10 (average)
 12709                           ;	Chosen strategy is simple_byte
 12710  001B4A  0A01               	xorlw	1	; case 1
 12711  001B4C  B4D8               	btfsc	status,2,c
 12712  001B4E  0012               	return	
 12713  001B50  0A03               	xorlw	3	; case 2
 12714  001B52  B4D8               	btfsc	status,2,c
 12715  001B54  D7D2               	goto	i2l4241
 12716  001B56  0A01               	xorlw	1	; case 3
 12717  001B58  B4D8               	btfsc	status,2,c
 12718  001B5A  D7E5               	goto	i2l4253
 12719  001B5C  0A0A               	xorlw	10	; case 9
 12720  001B5E  B4D8               	btfsc	status,2,c
 12721  001B60  0012               	return	
 12722  001B62  0A03               	xorlw	3	; case 10
 12723  001B64  B4D8               	btfsc	status,2,c
 12724  001B66  D7D4               	goto	i2l4247
 12725  001B68  0A01               	xorlw	1	; case 11
 12726  001B6A  A4D8               	btfss	status,2,c
 12727  001B6C  0012               	return	
 12728  001B6E  D7E6               	goto	i2l4259
 12729  001B70                     __end_of_USBCheckHIDRequest:
 12730                           	opt stack 0
 12731                           pclatu	equ	0xFFB
 12732                           pclath	equ	0xFFA
 12733                           tblptru	equ	0xFF8
 12734                           tblptrh	equ	0xFF7
 12735                           tblptrl	equ	0xFF6
 12736                           tablat	equ	0xFF5
 12737                           prodh	equ	0xFF4
 12738                           prodl	equ	0xFF3
 12739                           intcon	equ	0xFF2
 12740                           indf0	equ	0xFEF
 12741                           postinc0	equ	0xFEE
 12742                           fsr0h	equ	0xFEA
 12743                           fsr0l	equ	0xFE9
 12744                           wreg	equ	0xFE8
 12745                           indf1	equ	0xFE7
 12746                           postdec1	equ	0xFE5
 12747                           fsr1h	equ	0xFE2
 12748                           fsr1l	equ	0xFE1
 12749                           indf2	equ	0xFDF
 12750                           postinc2	equ	0xFDE
 12751                           postdec2	equ	0xFDD
 12752                           plusw2	equ	0xFDB
 12753                           fsr2h	equ	0xFDA
 12754                           fsr2l	equ	0xFD9
 12755                           status	equ	0xFD8
 12756                           
 12757 ;; *************** function _APP_DeviceMouseIdleRateCallback *****************
 12758 ;; Defined at:
 12759 ;;		line 273 in file "../src/app_device_mouse.c"
 12760 ;; Parameters:    Size  Location     Type
 12761 ;;  reportId        1    wreg     unsigned char 
 12762 ;;  idleRate        1    0[COMRAM] unsigned char 
 12763 ;; Auto vars:     Size  Location     Type
 12764 ;;  reportId        1    3[COMRAM] unsigned char 
 12765 ;; Return value:  Size  Location     Type
 12766 ;;		None               void
 12767 ;; Registers used:
 12768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12769 ;; Tracked objects:
 12770 ;;		On entry : 0/0
 12771 ;;		On exit  : 0/0
 12772 ;;		Unchanged: 0/0
 12773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12774 ;;      Params:         1       0       0       0       0       0       0       0       0
 12775 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12776 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12777 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12778 ;;Total ram usage:        4 bytes
 12779 ;; Hardware stack levels used:    1
 12780 ;; This function calls:
 12781 ;;		Nothing
 12782 ;; This function is called by:
 12783 ;;		_USBCheckHIDRequest
 12784 ;; This function uses a non-reentrant model
 12785 ;;
 12786                           
 12787                           	psect	text65
 12788  002F86                     __ptext65:
 12789                           	opt stack 0
 12790  002F86                     _APP_DeviceMouseIdleRateCallback:
 12791                           	opt stack 20
 12792                           
 12793                           ;incstack = 0
 12794                           ;APP_DeviceMouseIdleRateCallback@reportId stored from wreg
 12795  002F86  6E04               	movwf	APP_DeviceMouseIdleRateCallback@reportId,c
 12796                           
 12797                           ;app_device_mouse.c: 278: if(reportId == 0)
 12798  002F88  5004               	movf	APP_DeviceMouseIdleRateCallback@reportId,w,c
 12799  002F8A  A4D8               	btfss	status,2,c
 12800  002F8C  0012               	return	
 12801                           
 12802                           ;app_device_mouse.c: 279: {
 12803                           ;app_device_mouse.c: 280: mouse.inputReport[reportId].idleRate = idleRate;
 12804  002F8E  5004               	movf	APP_DeviceMouseIdleRateCallback@reportId,w,c
 12805  002F90  0D04               	mullw	4
 12806  002F92  0EC5               	movlw	low _mouse
 12807  002F94  6E02               	movwf	??_APP_DeviceMouseIdleRateCallback& (0+255),c
 12808  002F96  0E00               	movlw	high _mouse
 12809  002F98  6E03               	movwf	(??_APP_DeviceMouseIdleRateCallback+1)& (0+255),c
 12810  002F9A  0E06               	movlw	6
 12811  002F9C  2602               	addwf	??_APP_DeviceMouseIdleRateCallback,f,c
 12812  002F9E  0E00               	movlw	0
 12813  002FA0  2203               	addwfc	??_APP_DeviceMouseIdleRateCallback+1,f,c
 12814  002FA2  50F3               	movf	prodl,w,c
 12815  002FA4  2602               	addwf	??_APP_DeviceMouseIdleRateCallback,f,c
 12816  002FA6  50F4               	movf	prodh,w,c
 12817  002FA8  2203               	addwfc	??_APP_DeviceMouseIdleRateCallback+1,f,c
 12818  002FAA  0E02               	movlw	2
 12819  002FAC  2402               	addwf	??_APP_DeviceMouseIdleRateCallback,w,c
 12820  002FAE  6ED9               	movwf	fsr2l,c
 12821  002FB0  0E00               	movlw	0
 12822  002FB2  2003               	addwfc	??_APP_DeviceMouseIdleRateCallback+1,w,c
 12823  002FB4  6EDA               	movwf	fsr2h,c
 12824  002FB6  C001  FFDF         	movff	APP_DeviceMouseIdleRateCallback@idleRate,indf2
 12825  002FBA  0012               	return	
 12826  002FBC                     __end_of_APP_DeviceMouseIdleRateCallback:
 12827                           	opt stack 0
 12828                           pclatu	equ	0xFFB
 12829                           pclath	equ	0xFFA
 12830                           tblptru	equ	0xFF8
 12831                           tblptrh	equ	0xFF7
 12832                           tblptrl	equ	0xFF6
 12833                           tablat	equ	0xFF5
 12834                           prodh	equ	0xFF4
 12835                           prodl	equ	0xFF3
 12836                           intcon	equ	0xFF2
 12837                           indf0	equ	0xFEF
 12838                           postinc0	equ	0xFEE
 12839                           fsr0h	equ	0xFEA
 12840                           fsr0l	equ	0xFE9
 12841                           wreg	equ	0xFE8
 12842                           indf1	equ	0xFE7
 12843                           postdec1	equ	0xFE5
 12844                           fsr1h	equ	0xFE2
 12845                           fsr1l	equ	0xFE1
 12846                           indf2	equ	0xFDF
 12847                           postinc2	equ	0xFDE
 12848                           postdec2	equ	0xFDD
 12849                           plusw2	equ	0xFDB
 12850                           fsr2h	equ	0xFDA
 12851                           fsr2l	equ	0xFD9
 12852                           status	equ	0xFD8
 12853                           
 12854 ;; *************** function _APP_LEDUpdateUSBStatus *****************
 12855 ;; Defined at:
 12856 ;;		line 75 in file "../src/app_led_usb_status.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;		None
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;		None               void
 12863 ;; Registers used:
 12864 ;;		wreg, status,2, status,0, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12872 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12873 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12874 ;;Total ram usage:        0 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    1
 12877 ;; This function calls:
 12878 ;;		_LED_Off
 12879 ;;		_LED_On
 12880 ;; This function is called by:
 12881 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text66
 12886  0029D4                     __ptext66:
 12887                           	opt stack 0
 12888  0029D4                     _APP_LEDUpdateUSBStatus:
 12889                           	opt stack 20
 12890                           
 12891                           ;app_led_usb_status.c: 77: static uint16_t ledCount = 0;
 12892                           ;app_led_usb_status.c: 79: if(UCONbits.SUSPND == 1)
 12893                           
 12894                           ;incstack = 0
 12895  0029D4  A26D               	btfss	3949,1,c	;volatile
 12896  0029D6  D036               	goto	i2l4203
 12897                           
 12898                           ;app_led_usb_status.c: 80: {
 12899                           ;app_led_usb_status.c: 81: LED_Off(LED_D1);
 12900  0029D8  0E01               	movlw	1
 12901  0029DA  ECF9  F017         	call	_LED_Off
 12902                           
 12903                           ;app_led_usb_status.c: 82: return;
 12904  0029DE  0012               	return	
 12905  0029E0                     i2l4177:
 12906                           
 12907                           ;app_led_usb_status.c: 90: if(ledCount == 1)
 12908  0029E0  0446               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
 12909  0029E2  1047               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
 12910  0029E4  A4D8               	btfss	status,2,c
 12911  0029E6  D004               	goto	i2l4181
 12912                           
 12913                           ;app_led_usb_status.c: 91: {
 12914                           ;app_led_usb_status.c: 92: LED_On(LED_D1);
 12915  0029E8  0E01               	movlw	1
 12916  0029EA  ECDE  F017         	call	_LED_On
 12917                           
 12918                           ;app_led_usb_status.c: 93: }
 12919  0029EE  D02F               	goto	i2l4205
 12920  0029F0                     i2l4181:
 12921                           
 12922                           ;app_led_usb_status.c: 94: else if(ledCount == 75)
 12923  0029F0  0E4B               	movlw	75
 12924  0029F2  1846               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
 12925  0029F4  1047               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
 12926  0029F6  A4D8               	btfss	status,2,c
 12927  0029F8  D004               	goto	i2l4185
 12928                           
 12929                           ;app_led_usb_status.c: 95: {
 12930                           ;app_led_usb_status.c: 96: LED_Off(LED_D1);
 12931  0029FA  0E01               	movlw	1
 12932  0029FC  ECF9  F017         	call	_LED_Off
 12933                           
 12934                           ;app_led_usb_status.c: 97: }
 12935  002A00  D026               	goto	i2l4205
 12936  002A02                     i2l4185:
 12937                           
 12938                           ;app_led_usb_status.c: 98: else if(ledCount > 150)
 12939  002A02  5047               	movf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
 12940  002A04  E104               	bnz	i2u327_40
 12941  002A06  0E97               	movlw	151
 12942  002A08  5C46               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
 12943  002A0A  A0D8               	btfss	status,0,c
 12944  002A0C  D020               	goto	i2l4205
 12945  002A0E                     i2u327_40:
 12946                           
 12947                           ;app_led_usb_status.c: 99: {
 12948                           ;app_led_usb_status.c: 100: ledCount = 0;
 12949  002A0E  0E00               	movlw	0
 12950  002A10  6E47               	movwf	APP_LEDUpdateUSBStatus@ledCount+1,c
 12951  002A12  0E00               	movlw	0
 12952  002A14  6E46               	movwf	APP_LEDUpdateUSBStatus@ledCount,c
 12953                           
 12954                           ;app_led_usb_status.c: 101: }
 12955                           ;app_led_usb_status.c: 102: break;
 12956  002A16  D01B               	goto	i2l4205
 12957  002A18                     i2l4189:
 12958                           
 12959                           ;app_led_usb_status.c: 107: if(ledCount == 1)
 12960  002A18  0446               	decf	APP_LEDUpdateUSBStatus@ledCount,w,c
 12961  002A1A  1047               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
 12962  002A1C  A4D8               	btfss	status,2,c
 12963  002A1E  D004               	goto	i2l4193
 12964                           
 12965                           ;app_led_usb_status.c: 108: {
 12966                           ;app_led_usb_status.c: 109: LED_On(LED_D1);
 12967  002A20  0E01               	movlw	1
 12968  002A22  ECDE  F017         	call	_LED_On
 12969                           
 12970                           ;app_led_usb_status.c: 110: }
 12971  002A26  D013               	goto	i2l4205
 12972  002A28                     i2l4193:
 12973                           
 12974                           ;app_led_usb_status.c: 111: else if(ledCount == 50)
 12975  002A28  0E32               	movlw	50
 12976  002A2A  1846               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w,c
 12977  002A2C  1047               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w,c
 12978  002A2E  A4D8               	btfss	status,2,c
 12979  002A30  D004               	goto	i2l4197
 12980                           
 12981                           ;app_led_usb_status.c: 112: {
 12982                           ;app_led_usb_status.c: 113: LED_Off(LED_D1);
 12983  002A32  0E01               	movlw	1
 12984  002A34  ECF9  F017         	call	_LED_Off
 12985                           
 12986                           ;app_led_usb_status.c: 114: }
 12987  002A38  D00A               	goto	i2l4205
 12988  002A3A                     i2l4197:
 12989                           
 12990                           ;app_led_usb_status.c: 115: else if(ledCount > 950)
 12991  002A3A  0EB7               	movlw	183
 12992  002A3C  5C46               	subwf	APP_LEDUpdateUSBStatus@ledCount,w,c
 12993  002A3E  0E03               	movlw	3
 12994  002A40  5847               	subwfb	APP_LEDUpdateUSBStatus@ledCount+1,w,c
 12995  002A42  D7E3               	goto	L10
 12996  002A44                     i2l4203:
 12997  002A44  5055               	movf	_USBDeviceState,w,c	;volatile
 12998                           
 12999                           ; Switch size 1, requested type "space"
 13000                           ; Number of cases is 1, Range of values is 32 to 32
 13001                           ; switch strategies available:
 13002                           ; Name         Instructions Cycles
 13003                           ; simple_byte            4     3 (average)
 13004                           ;	Chosen strategy is simple_byte
 13005  002A46  0A20               	xorlw	32	; case 32
 13006  002A48  B4D8               	btfsc	status,2,c
 13007  002A4A  D7CA               	goto	i2l4177
 13008  002A4C  D7E5               	goto	i2l4189
 13009  002A4E                     i2l4205:
 13010                           
 13011                           ;app_led_usb_status.c: 123: ledCount++;
 13012  002A4E  4A46               	infsnz	APP_LEDUpdateUSBStatus@ledCount,f,c
 13013  002A50  2A47               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f,c
 13014  002A52  0012               	return		;funcret
 13015  002A54                     __end_of_APP_LEDUpdateUSBStatus:
 13016                           	opt stack 0
 13017                           pclatu	equ	0xFFB
 13018                           pclath	equ	0xFFA
 13019                           tblptru	equ	0xFF8
 13020                           tblptrh	equ	0xFF7
 13021                           tblptrl	equ	0xFF6
 13022                           tablat	equ	0xFF5
 13023                           prodh	equ	0xFF4
 13024                           prodl	equ	0xFF3
 13025                           intcon	equ	0xFF2
 13026                           indf0	equ	0xFEF
 13027                           postinc0	equ	0xFEE
 13028                           fsr0h	equ	0xFEA
 13029                           fsr0l	equ	0xFE9
 13030                           wreg	equ	0xFE8
 13031                           indf1	equ	0xFE7
 13032                           postdec1	equ	0xFE5
 13033                           fsr1h	equ	0xFE2
 13034                           fsr1l	equ	0xFE1
 13035                           indf2	equ	0xFDF
 13036                           postinc2	equ	0xFDE
 13037                           postdec2	equ	0xFDD
 13038                           plusw2	equ	0xFDB
 13039                           fsr2h	equ	0xFDA
 13040                           fsr2l	equ	0xFD9
 13041                           status	equ	0xFD8
 13042                           
 13043 ;; *************** function _LED_On *****************
 13044 ;; Defined at:
 13045 ;;		line 96 in file "../../../../../../bsp/picdem_fs_usb/leds.c"
 13046 ;; Parameters:    Size  Location     Type
 13047 ;;  led             1    wreg     enum E2
 13048 ;; Auto vars:     Size  Location     Type
 13049 ;;  led             1    0[COMRAM] enum E2
 13050 ;; Return value:  Size  Location     Type
 13051 ;;		None               void
 13052 ;; Registers used:
 13053 ;;		wreg, status,2, status,0
 13054 ;; Tracked objects:
 13055 ;;		On entry : 0/0
 13056 ;;		On exit  : 0/0
 13057 ;;		Unchanged: 0/0
 13058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13059 ;;      Params:         0       0       0       0       0       0       0       0       0
 13060 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13061 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13062 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13063 ;;Total ram usage:        1 bytes
 13064 ;; Hardware stack levels used:    1
 13065 ;; This function calls:
 13066 ;;		Nothing
 13067 ;; This function is called by:
 13068 ;;		_APP_LEDUpdateUSBStatus
 13069 ;; This function uses a non-reentrant model
 13070 ;;
 13071                           
 13072                           	psect	text67
 13073  002FBC                     __ptext67:
 13074                           	opt stack 0
 13075  002FBC                     _LED_On:
 13076                           	opt stack 20
 13077                           
 13078                           ;incstack = 0
 13079                           ;LED_On@led stored from wreg
 13080  002FBC  6E01               	movwf	LED_On@led,c
 13081                           
 13082                           ;leds.c: 98: switch(led)
 13083  002FBE  D008               	goto	i2l4105
 13084  002FC0                     i2l573:
 13085                           
 13086                           ;leds.c: 101: LATDbits.LATD0 = 1;
 13087  002FC0  808C               	bsf	3980,0,c	;volatile
 13088                           
 13089                           ;leds.c: 102: break;
 13090  002FC2  0012               	return	
 13091  002FC4                     i2l575:
 13092                           
 13093                           ;leds.c: 105: LATDbits.LATD1 = 1;
 13094  002FC4  828C               	bsf	3980,1,c	;volatile
 13095                           
 13096                           ;leds.c: 106: break;
 13097  002FC6  0012               	return	
 13098  002FC8                     i2l576:
 13099                           
 13100                           ;leds.c: 109: LATDbits.LATD2 = 1;
 13101  002FC8  848C               	bsf	3980,2,c	;volatile
 13102                           
 13103                           ;leds.c: 110: break;
 13104  002FCA  0012               	return	
 13105  002FCC                     i2l577:
 13106                           
 13107                           ;leds.c: 113: LATDbits.LATD3 = 1;
 13108  002FCC  868C               	bsf	3980,3,c	;volatile
 13109                           
 13110                           ;leds.c: 118: }
 13111                           
 13112                           ;leds.c: 117: break;
 13113                           
 13114                           ;leds.c: 116: case LED_NONE:
 13115                           
 13116                           ;leds.c: 114: break;
 13117  002FCE  0012               	return	
 13118  002FD0                     i2l4105:
 13119  002FD0  5001               	movf	LED_On@led,w,c
 13120                           
 13121                           ; Switch size 1, requested type "space"
 13122                           ; Number of cases is 5, Range of values is 0 to 4
 13123                           ; switch strategies available:
 13124                           ; Name         Instructions Cycles
 13125                           ; simple_byte           16     9 (average)
 13126                           ;	Chosen strategy is simple_byte
 13127  002FD2  0A00               	xorlw	0	; case 0
 13128  002FD4  B4D8               	btfsc	status,2,c
 13129  002FD6  0012               	return	
 13130  002FD8  0A01               	xorlw	1	; case 1
 13131  002FDA  B4D8               	btfsc	status,2,c
 13132  002FDC  D7F1               	goto	i2l573
 13133  002FDE  0A03               	xorlw	3	; case 2
 13134  002FE0  B4D8               	btfsc	status,2,c
 13135  002FE2  D7F0               	goto	i2l575
 13136  002FE4  0A01               	xorlw	1	; case 3
 13137  002FE6  B4D8               	btfsc	status,2,c
 13138  002FE8  D7EF               	goto	i2l576
 13139  002FEA  0A07               	xorlw	7	; case 4
 13140  002FEC  A4D8               	btfss	status,2,c
 13141  002FEE  0012               	return	
 13142  002FF0  D7ED               	goto	i2l577
 13143  002FF2                     __end_of_LED_On:
 13144                           	opt stack 0
 13145                           pclatu	equ	0xFFB
 13146                           pclath	equ	0xFFA
 13147                           tblptru	equ	0xFF8
 13148                           tblptrh	equ	0xFF7
 13149                           tblptrl	equ	0xFF6
 13150                           tablat	equ	0xFF5
 13151                           prodh	equ	0xFF4
 13152                           prodl	equ	0xFF3
 13153                           intcon	equ	0xFF2
 13154                           indf0	equ	0xFEF
 13155                           postinc0	equ	0xFEE
 13156                           fsr0h	equ	0xFEA
 13157                           fsr0l	equ	0xFE9
 13158                           wreg	equ	0xFE8
 13159                           indf1	equ	0xFE7
 13160                           postdec1	equ	0xFE5
 13161                           fsr1h	equ	0xFE2
 13162                           fsr1l	equ	0xFE1
 13163                           indf2	equ	0xFDF
 13164                           postinc2	equ	0xFDE
 13165                           postdec2	equ	0xFDD
 13166                           plusw2	equ	0xFDB
 13167                           fsr2h	equ	0xFDA
 13168                           fsr2l	equ	0xFD9
 13169                           status	equ	0xFD8
 13170                           
 13171 ;; *************** function _LED_Off *****************
 13172 ;; Defined at:
 13173 ;;		line 137 in file "../../../../../../bsp/picdem_fs_usb/leds.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;  led             1    wreg     enum E2
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  led             1    0[COMRAM] enum E2
 13178 ;; Return value:  Size  Location     Type
 13179 ;;		None               void
 13180 ;; Registers used:
 13181 ;;		wreg, status,2, status,0
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13187 ;;      Params:         0       0       0       0       0       0       0       0       0
 13188 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13190 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13191 ;;Total ram usage:        1 bytes
 13192 ;; Hardware stack levels used:    1
 13193 ;; This function calls:
 13194 ;;		Nothing
 13195 ;; This function is called by:
 13196 ;;		_APP_LEDUpdateUSBStatus
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200                           	psect	text68
 13201  002FF2                     __ptext68:
 13202                           	opt stack 0
 13203  002FF2                     _LED_Off:
 13204                           	opt stack 20
 13205                           
 13206                           ;incstack = 0
 13207                           ;LED_Off@led stored from wreg
 13208  002FF2  6E01               	movwf	LED_Off@led,c
 13209                           
 13210                           ;leds.c: 139: switch(led)
 13211  002FF4  D008               	goto	i2l4099
 13212  002FF6                     i2l583:
 13213                           
 13214                           ;leds.c: 142: LATDbits.LATD0 = 0;
 13215  002FF6  908C               	bcf	3980,0,c	;volatile
 13216                           
 13217                           ;leds.c: 143: break;
 13218  002FF8  0012               	return	
 13219  002FFA                     i2l585:
 13220                           
 13221                           ;leds.c: 146: LATDbits.LATD1 = 0;
 13222  002FFA  928C               	bcf	3980,1,c	;volatile
 13223                           
 13224                           ;leds.c: 147: break;
 13225  002FFC  0012               	return	
 13226  002FFE                     i2l586:
 13227                           
 13228                           ;leds.c: 150: LATDbits.LATD2 = 0;
 13229  002FFE  948C               	bcf	3980,2,c	;volatile
 13230                           
 13231                           ;leds.c: 151: break;
 13232  003000  0012               	return	
 13233  003002                     i2l587:
 13234                           
 13235                           ;leds.c: 154: LATDbits.LATD3 = 0;
 13236  003002  968C               	bcf	3980,3,c	;volatile
 13237                           
 13238                           ;leds.c: 159: }
 13239                           
 13240                           ;leds.c: 158: break;
 13241                           
 13242                           ;leds.c: 157: case LED_NONE:
 13243                           
 13244                           ;leds.c: 155: break;
 13245  003004  0012               	return	
 13246  003006                     i2l4099:
 13247  003006  5001               	movf	LED_Off@led,w,c
 13248                           
 13249                           ; Switch size 1, requested type "space"
 13250                           ; Number of cases is 5, Range of values is 0 to 4
 13251                           ; switch strategies available:
 13252                           ; Name         Instructions Cycles
 13253                           ; simple_byte           16     9 (average)
 13254                           ;	Chosen strategy is simple_byte
 13255  003008  0A00               	xorlw	0	; case 0
 13256  00300A  B4D8               	btfsc	status,2,c
 13257  00300C  0012               	return	
 13258  00300E  0A01               	xorlw	1	; case 1
 13259  003010  B4D8               	btfsc	status,2,c
 13260  003012  D7F1               	goto	i2l583
 13261  003014  0A03               	xorlw	3	; case 2
 13262  003016  B4D8               	btfsc	status,2,c
 13263  003018  D7F0               	goto	i2l585
 13264  00301A  0A01               	xorlw	1	; case 3
 13265  00301C  B4D8               	btfsc	status,2,c
 13266  00301E  D7EF               	goto	i2l586
 13267  003020  0A07               	xorlw	7	; case 4
 13268  003022  A4D8               	btfss	status,2,c
 13269  003024  0012               	return	
 13270  003026  D7ED               	goto	i2l587
 13271  003028                     __end_of_LED_Off:
 13272                           	opt stack 0
 13273                           pclatu	equ	0xFFB
 13274                           pclath	equ	0xFFA
 13275                           tblptru	equ	0xFF8
 13276                           tblptrh	equ	0xFF7
 13277                           tblptrl	equ	0xFF6
 13278                           tablat	equ	0xFF5
 13279                           prodh	equ	0xFF4
 13280                           prodl	equ	0xFF3
 13281                           intcon	equ	0xFF2
 13282                           indf0	equ	0xFEF
 13283                           postinc0	equ	0xFEE
 13284                           fsr0h	equ	0xFEA
 13285                           fsr0l	equ	0xFE9
 13286                           wreg	equ	0xFE8
 13287                           indf1	equ	0xFE7
 13288                           postdec1	equ	0xFE5
 13289                           fsr1h	equ	0xFE2
 13290                           fsr1l	equ	0xFE1
 13291                           indf2	equ	0xFDF
 13292                           postinc2	equ	0xFDE
 13293                           postdec2	equ	0xFDD
 13294                           plusw2	equ	0xFDB
 13295                           fsr2h	equ	0xFDA
 13296                           fsr2l	equ	0xFD9
 13297                           status	equ	0xFD8
 13298                           
 13299 ;; *************** function _APP_DeviceMouseSOFHandler *****************
 13300 ;; Defined at:
 13301 ;;		line 296 in file "../src/app_device_mouse.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;		None
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;		None
 13306 ;; Return value:  Size  Location     Type
 13307 ;;		None               void
 13308 ;; Registers used:
 13309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13315 ;;      Params:         0       0       0       0       0       0       0       0       0
 13316 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13318 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13319 ;;Total ram usage:        0 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:    1
 13322 ;; This function calls:
 13323 ;;		_USBTransferOnePacket
 13324 ;; This function is called by:
 13325 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13326 ;; This function uses a non-reentrant model
 13327 ;;
 13328                           
 13329                           	psect	text69
 13330  001E06                     __ptext69:
 13331                           	opt stack 0
 13332  001E06                     _APP_DeviceMouseSOFHandler:
 13333                           	opt stack 20
 13334                           
 13335                           ;app_device_mouse.c: 303: if(USBDeviceState != CONFIGURED_STATE)
 13336                           
 13337                           ;incstack = 0
 13338  001E06  0E20               	movlw	32
 13339  001E08  1855               	xorwf	_USBDeviceState,w,c	;volatile
 13340  001E0A  A4D8               	btfss	status,2,c
 13341  001E0C  0012               	return	
 13342                           
 13343                           ;app_device_mouse.c: 306: }
 13344                           ;app_device_mouse.c: 331: if(((mouse.inputReport[0].handle != 0x0000) && ((*(volatile ui
      +                          nt8_t*)mouse.inputReport[0].handle & 0x80) != 0x00)) == 0)
 13345                           
 13346                           ;app_device_mouse.c: 304: {
 13347                           ;app_device_mouse.c: 305: return;
 13348  001E0E  0100               	movlb	0	; () banked
 13349  001E10  51CB               	movf	(_mouse+6)& (0+255),w,b
 13350  001E12  0100               	movlb	0	; () banked
 13351  001E14  11CC               	iorwf	(_mouse+7)& (0+255),w,b
 13352  001E16  B4D8               	btfsc	status,2,c
 13353  001E18  D007               	goto	i2l4137
 13354                           
 13355                           ; BSR set to: 0
 13356  001E1A  C0CB  FFD9         	movff	_mouse+6,fsr2l
 13357  001E1E  C0CC  FFDA         	movff	_mouse+7,fsr2h
 13358  001E22  0100               	movlb	0	; () banked
 13359  001E24  BEDF               	btfsc	indf2,7,c
 13360  001E26  0012               	return	
 13361  001E28                     i2l4137:
 13362                           
 13363                           ; BSR set to: 0
 13364                           ;app_device_mouse.c: 332: {
 13365                           ;app_device_mouse.c: 338: mouse.movementCount++;
 13366  001E28  0100               	movlb	0	; () banked
 13367  001E2A  4BC8               	infsnz	(_mouse+3)& (0+255),f,b
 13368  001E2C  2BC9               	incf	(_mouse+4)& (0+255),f,b
 13369                           
 13370                           ; BSR set to: 0
 13371                           ;app_device_mouse.c: 343: if(mouse.movementCount == 1)
 13372  001E2E  0100               	movlb	0	; () banked
 13373  001E30  05C8               	decf	(_mouse+3)& (0+255),w,b
 13374  001E32  0100               	movlb	0	; () banked
 13375  001E34  11C9               	iorwf	(_mouse+4)& (0+255),w,b
 13376  001E36  A4D8               	btfss	status,2,c
 13377  001E38  D00E               	goto	i2l4149
 13378                           
 13379                           ; BSR set to: 0
 13380                           ;app_device_mouse.c: 344: {
 13381                           ;app_device_mouse.c: 345: mouse.movementCount = 0;
 13382  001E3A  0E00               	movlw	0
 13383  001E3C  0100               	movlb	0	; () banked
 13384  001E3E  6FC9               	movwf	(_mouse+4)& (0+255),b
 13385  001E40  0E00               	movlw	0
 13386  001E42  6FC8               	movwf	(_mouse+3)& (0+255),b
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;app_device_mouse.c: 347: mouse.vectorPosition++;
 13390  001E44  0100               	movlb	0	; () banked
 13391  001E46  2BC7               	incf	(_mouse+2)& (0+255),f,b
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;app_device_mouse.c: 348: if(mouse.vectorPosition >= 1)
 13395  001E48  0100               	movlb	0	; () banked
 13396  001E4A  51C7               	movf	(_mouse+2)& (0+255),w,b
 13397  001E4C  B4D8               	btfsc	status,2,c
 13398  001E4E  D003               	goto	i2l4149
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;app_device_mouse.c: 349: {
 13402                           ;app_device_mouse.c: 350: mouse.vectorPosition = 0;
 13403  001E50  0E00               	movlw	0
 13404  001E52  0100               	movlb	0	; () banked
 13405  001E54  6FC7               	movwf	(_mouse+2)& (0+255),b
 13406  001E56                     i2l4149:
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;app_device_mouse.c: 351: }
 13410                           ;app_device_mouse.c: 352: }
 13411                           ;app_device_mouse.c: 359: if(mouse.movementMode == 1)
 13412  001E56  0100               	movlb	0	; () banked
 13413  001E58  05CA               	decf	(_mouse+5)& (0+255),w,b
 13414  001E5A  A4D8               	btfss	status,2,c
 13415  001E5C  D015               	goto	i2l4159
 13416                           
 13417                           ; BSR set to: 0
 13418                           ;app_device_mouse.c: 360: {
 13419                           ;app_device_mouse.c: 361: mouseReport.buttons.button1 = 0;
 13420  001E5E  0105               	movlb	5	; () banked
 13421  001E60  9100               	bcf	0,0,b
 13422                           
 13423                           ;app_device_mouse.c: 362: mouseReport.buttons.button2 = 0;
 13424  001E62  0105               	movlb	5	; () banked
 13425  001E64  9300               	bcf	0,1,b
 13426                           
 13427                           ;app_device_mouse.c: 363: mouseReport.buttons.button3 = 0;
 13428  001E66  0105               	movlb	5	; () banked
 13429  001E68  9500               	bcf	0,2,b
 13430                           
 13431                           ;app_device_mouse.c: 365: if(PORTBbits.RB2 == 1)
 13432  001E6A  A481               	btfss	3969,2,c	;volatile
 13433  001E6C  D006               	goto	i2l4157
 13434                           
 13435                           ; BSR set to: 5
 13436                           ;app_device_mouse.c: 366: {
 13437                           ;app_device_mouse.c: 368: mouseReport.x = 0;
 13438  001E6E  0E00               	movlw	0
 13439  001E70  0105               	movlb	5	; () banked
 13440  001E72  6F01               	movwf	1,b
 13441                           
 13442                           ; BSR set to: 5
 13443                           ;app_device_mouse.c: 369: mouseReport.y = -1;
 13444  001E74  0105               	movlb	5	; () banked
 13445  001E76  6902               	setf	2,b
 13446                           
 13447                           ;app_device_mouse.c: 370: }
 13448  001E78  D020               	goto	i2l4169
 13449  001E7A                     i2l4157:
 13450                           
 13451                           ; BSR set to: 5
 13452                           ;app_device_mouse.c: 371: else
 13453                           ;app_device_mouse.c: 372: {
 13454                           ;app_device_mouse.c: 373: mouseReport.x = 0;
 13455  001E7A  0E00               	movlw	0
 13456  001E7C  0105               	movlb	5	; () banked
 13457  001E7E  6F01               	movwf	1,b
 13458                           
 13459                           ;app_device_mouse.c: 374: mouseReport.y = 0;
 13460  001E80  0E00               	movlw	0
 13461  001E82  0105               	movlb	5	; () banked
 13462  001E84  6F02               	movwf	2,b
 13463                           
 13464                           ; BSR set to: 5
 13465                           ;app_device_mouse.c: 375: }
 13466                           ;app_device_mouse.c: 376: }
 13467  001E86  D019               	goto	i2l4169
 13468  001E88                     i2l4159:
 13469                           
 13470                           ;app_device_mouse.c: 377: else
 13471                           ;app_device_mouse.c: 378: {
 13472                           ;app_device_mouse.c: 379: mouseReport.buttons.value = 0;
 13473  001E88  0E00               	movlw	0
 13474  001E8A  0105               	movlb	5	; () banked
 13475  001E8C  6F00               	movwf	0,b
 13476                           
 13477                           ;app_device_mouse.c: 380: mouseReport.x = 0;
 13478  001E8E  0E00               	movlw	0
 13479  001E90  0105               	movlb	5	; () banked
 13480  001E92  6F01               	movwf	1,b
 13481                           
 13482                           ;app_device_mouse.c: 381: mouseReport.y = 0;
 13483  001E94  0E00               	movlw	0
 13484  001E96  0105               	movlb	5	; () banked
 13485  001E98  6F02               	movwf	2,b
 13486                           
 13487                           ;app_device_mouse.c: 383: if(mouse.inputReport[0].idleRate != 0)
 13488  001E9A  0100               	movlb	0	; () banked
 13489  001E9C  51CD               	movf	(_mouse+8)& (0+255),w,b
 13490  001E9E  B4D8               	btfsc	status,2,c
 13491  001EA0  D002               	goto	i2l4163
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;app_device_mouse.c: 384: {
 13495                           ;app_device_mouse.c: 385: mouse.inputReport[0].idleRateSofCount++;
 13496  001EA2  0100               	movlb	0	; () banked
 13497  001EA4  2BCE               	incf	(_mouse+9)& (0+255),f,b
 13498  001EA6                     i2l4163:
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;app_device_mouse.c: 386: }
 13502                           ;app_device_mouse.c: 393: if(mouse.sentStop == 1)
 13503  001EA6  0100               	movlb	0	; () banked
 13504  001EA8  05C5               	decf	_mouse& (0+255),w,b
 13505  001EAA  A4D8               	btfss	status,2,c
 13506  001EAC  D006               	goto	i2l4169
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;app_device_mouse.c: 394: {
 13510                           ;app_device_mouse.c: 400: if(mouse.inputReport[0].idleRateSofCount <= mouse.inputReport[
      +                          0].idleRate)
 13511  001EAE  0100               	movlb	0	; () banked
 13512  001EB0  51CE               	movf	(_mouse+9)& (0+255),w,b
 13513  001EB2  0100               	movlb	0	; () banked
 13514  001EB4  5DCD               	subwf	(_mouse+8)& (0+255),w,b
 13515  001EB6  B0D8               	btfsc	status,0,c
 13516  001EB8  0012               	return	
 13517  001EBA                     i2l4169:
 13518                           
 13519                           ;app_device_mouse.c: 403: }
 13520                           ;app_device_mouse.c: 404: }
 13521                           ;app_device_mouse.c: 405: }
 13522                           ;app_device_mouse.c: 407: mouse.inputReport[0].handle = USBTransferOnePacket(1,1,(uint8_
      +                          t*)&mouseReport,sizeof(mouseReport));
 13523  001EBA  0E01               	movlw	1
 13524  001EBC  6E01               	movwf	USBTransferOnePacket@dir,c
 13525  001EBE  0E00               	movlw	0
 13526  001EC0  6E02               	movwf	USBTransferOnePacket@data,c
 13527  001EC2  0E05               	movlw	5
 13528  001EC4  6E03               	movwf	USBTransferOnePacket@data+1,c
 13529  001EC6  0E03               	movlw	3
 13530  001EC8  6E04               	movwf	USBTransferOnePacket@len,c
 13531  001ECA  0E01               	movlw	1
 13532  001ECC  EC35  F010         	call	_USBTransferOnePacket
 13533  001ED0  C001  F0CB         	movff	?_USBTransferOnePacket,_mouse+6
 13534  001ED4  C002  F0CC         	movff	?_USBTransferOnePacket+1,_mouse+7
 13535  001ED8  0012               	return	
 13536  001EDA                     __end_of_APP_DeviceMouseSOFHandler:
 13537                           	opt stack 0
 13538                           pclatu	equ	0xFFB
 13539                           pclath	equ	0xFFA
 13540                           tblptru	equ	0xFF8
 13541                           tblptrh	equ	0xFF7
 13542                           tblptrl	equ	0xFF6
 13543                           tablat	equ	0xFF5
 13544                           prodh	equ	0xFF4
 13545                           prodl	equ	0xFF3
 13546                           intcon	equ	0xFF2
 13547                           indf0	equ	0xFEF
 13548                           postinc0	equ	0xFEE
 13549                           fsr0h	equ	0xFEA
 13550                           fsr0l	equ	0xFE9
 13551                           wreg	equ	0xFE8
 13552                           indf1	equ	0xFE7
 13553                           postdec1	equ	0xFE5
 13554                           fsr1h	equ	0xFE2
 13555                           fsr1l	equ	0xFE1
 13556                           indf2	equ	0xFDF
 13557                           postinc2	equ	0xFDE
 13558                           postdec2	equ	0xFDD
 13559                           plusw2	equ	0xFDB
 13560                           fsr2h	equ	0xFDA
 13561                           fsr2l	equ	0xFD9
 13562                           status	equ	0xFD8
 13563                           
 13564 ;; *************** function _USBTransferOnePacket *****************
 13565 ;; Defined at:
 13566 ;;		line 1013 in file "../../../../../../framework/usb/src/usb_device.c"
 13567 ;; Parameters:    Size  Location     Type
 13568 ;;  ep              1    wreg     unsigned char 
 13569 ;;  dir             1    0[COMRAM] unsigned char 
 13570 ;;  data            2    1[COMRAM] PTR unsigned char 
 13571 ;;		 -> mouseReport(3), 
 13572 ;;  len             1    3[COMRAM] unsigned char 
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;  ep              1    4[COMRAM] unsigned char 
 13575 ;;  handle          2    5[COMRAM] PTR volatile struct __BD
 13576 ;;		 -> BDT(32), NULL(0), 
 13577 ;; Return value:  Size  Location     Type
 13578 ;;                  2    0[COMRAM] PTR void 
 13579 ;; Registers used:
 13580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13581 ;; Tracked objects:
 13582 ;;		On entry : 0/0
 13583 ;;		On exit  : 0/0
 13584 ;;		Unchanged: 0/0
 13585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13586 ;;      Params:         4       0       0       0       0       0       0       0       0
 13587 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13588 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13589 ;;      Totals:         7       0       0       0       0       0       0       0       0
 13590 ;;Total ram usage:        7 bytes
 13591 ;; Hardware stack levels used:    1
 13592 ;; This function calls:
 13593 ;;		Nothing
 13594 ;; This function is called by:
 13595 ;;		_APP_DeviceMouseSOFHandler
 13596 ;; This function uses a non-reentrant model
 13597 ;;
 13598                           
 13599                           	psect	text70
 13600  00206A                     __ptext70:
 13601                           	opt stack 0
 13602  00206A                     _USBTransferOnePacket:
 13603                           	opt stack 20
 13604                           
 13605                           ;incstack = 0
 13606                           ;USBTransferOnePacket@ep stored from wreg
 13607  00206A  6E05               	movwf	USBTransferOnePacket@ep,c
 13608                           
 13609                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 13610                           ;usb_device.c: 1018: if(dir != 0)
 13611  00206C  5001               	movf	USBTransferOnePacket@dir,w,c
 13612  00206E  B4D8               	btfsc	status,2,c
 13613  002070  D007               	goto	i2l4069
 13614                           
 13615                           ;usb_device.c: 1019: {
 13616                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 13617  002072  5005               	movf	USBTransferOnePacket@ep,w,c
 13618  002074  0D02               	mullw	2
 13619  002076  0E42               	movlw	low _pBDTEntryIn
 13620  002078  24F3               	addwf	prodl,w,c
 13621  00207A  6ED9               	movwf	fsr2l,c
 13622  00207C  0E00               	movlw	high _pBDTEntryIn
 13623  00207E  D006               	goto	L11
 13624  002080                     i2l4069:
 13625                           
 13626                           ;usb_device.c: 1023: else
 13627                           ;usb_device.c: 1024: {
 13628                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 13629  002080  5005               	movf	USBTransferOnePacket@ep,w,c
 13630  002082  0D02               	mullw	2
 13631  002084  0ED3               	movlw	low _pBDTEntryOut
 13632  002086  24F3               	addwf	prodl,w,c
 13633  002088  6ED9               	movwf	fsr2l,c
 13634  00208A  0E00               	movlw	high _pBDTEntryOut
 13635  00208C                     L11:
 13636  00208C  20F4               	addwfc	prodh,w,c
 13637  00208E  6EDA               	movwf	fsr2h,c
 13638  002090  CFDE F006          	movff	postinc2,USBTransferOnePacket@handle
 13639  002094  CFDD F007          	movff	postdec2,USBTransferOnePacket@handle+1
 13640                           
 13641                           ;usb_device.c: 1027: }
 13642                           ;usb_device.c: 1031: if(handle == 0)
 13643  002098  5006               	movf	USBTransferOnePacket@handle,w,c
 13644  00209A  1007               	iorwf	USBTransferOnePacket@handle+1,w,c
 13645  00209C  A4D8               	btfss	status,2,c
 13646  00209E  D005               	goto	i2l4077
 13647                           
 13648                           ;usb_device.c: 1032: {
 13649                           ;usb_device.c: 1033: return 0;
 13650  0020A0  0E00               	movlw	0
 13651  0020A2  6E01               	movwf	?_USBTransferOnePacket,c
 13652  0020A4  0E00               	movlw	0
 13653  0020A6  6E02               	movwf	?_USBTransferOnePacket+1,c
 13654  0020A8  0012               	return	
 13655  0020AA                     i2l4077:
 13656                           
 13657                           ;usb_device.c: 1034: }
 13658                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 13659  0020AA  EE20 F002          	lfsr	2,2
 13660  0020AE  5006               	movf	USBTransferOnePacket@handle,w,c
 13661  0020B0  26D9               	addwf	fsr2l,f,c
 13662  0020B2  5007               	movf	USBTransferOnePacket@handle+1,w,c
 13663  0020B4  22DA               	addwfc	fsr2h,f,c
 13664  0020B6  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 13665  0020BA  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 13666                           
 13667                           ;usb_device.c: 1048: handle->CNT = len;
 13668  0020BE  EE20 F001          	lfsr	2,1
 13669  0020C2  5006               	movf	USBTransferOnePacket@handle,w,c
 13670  0020C4  26D9               	addwf	fsr2l,f,c
 13671  0020C6  5007               	movf	USBTransferOnePacket@handle+1,w,c
 13672  0020C8  22DA               	addwfc	fsr2h,f,c
 13673  0020CA  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 13674                           
 13675                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 13676  0020CE  C006  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13677  0020D2  C007  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13678  0020D6  0E40               	movlw	64
 13679  0020D8  16DF               	andwf	indf2,f,c
 13680                           
 13681                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 13682  0020DA  C006  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13683  0020DE  C007  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13684  0020E2  0E00               	movlw	0
 13685  0020E4  86DB               	bsf	plusw2,3,c
 13686                           
 13687                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 13688  0020E6  C006  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13689  0020EA  C007  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13690  0020EE  0E00               	movlw	0
 13691  0020F0  8EDB               	bsf	plusw2,7,c
 13692                           
 13693                           ;usb_device.c: 1054: if(dir != 0)
 13694  0020F2  5001               	movf	USBTransferOnePacket@dir,w,c
 13695  0020F4  B4D8               	btfsc	status,2,c
 13696  0020F6  D007               	goto	i2l4089
 13697                           
 13698                           ;usb_device.c: 1055: {
 13699                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 13700  0020F8  5005               	movf	USBTransferOnePacket@ep,w,c
 13701  0020FA  0D02               	mullw	2
 13702  0020FC  0E42               	movlw	low _pBDTEntryIn
 13703  0020FE  24F3               	addwf	prodl,w,c
 13704  002100  6ED9               	movwf	fsr2l,c
 13705  002102  0E00               	movlw	high _pBDTEntryIn
 13706  002104  D006               	goto	L12
 13707  002106                     i2l4089:
 13708                           
 13709                           ;usb_device.c: 1059: else
 13710                           ;usb_device.c: 1060: {
 13711                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 13712  002106  5005               	movf	USBTransferOnePacket@ep,w,c
 13713  002108  0D02               	mullw	2
 13714  00210A  0ED3               	movlw	low _pBDTEntryOut
 13715  00210C  24F3               	addwf	prodl,w,c
 13716  00210E  6ED9               	movwf	fsr2l,c
 13717  002110  0E00               	movlw	high _pBDTEntryOut
 13718  002112                     L12:
 13719  002112  20F4               	addwfc	prodh,w,c
 13720  002114  6EDA               	movwf	fsr2h,c
 13721  002116  0E04               	movlw	4
 13722  002118  1ADF               	xorwf	indf2,f,c
 13723                           
 13724                           ;usb_device.c: 1063: }
 13725                           ;usb_device.c: 1064: return (void*)handle;
 13726  00211A  C006  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 13727  00211E  C007  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 13728  002122  0012               	return	
 13729  002124                     __end_of_USBTransferOnePacket:
 13730                           	opt stack 0
 13731                           pclatu	equ	0xFFB
 13732                           pclath	equ	0xFFA
 13733                           tblptru	equ	0xFF8
 13734                           tblptrh	equ	0xFF7
 13735                           tblptrl	equ	0xFF6
 13736                           tablat	equ	0xFF5
 13737                           prodh	equ	0xFF4
 13738                           prodl	equ	0xFF3
 13739                           intcon	equ	0xFF2
 13740                           indf0	equ	0xFEF
 13741                           postinc0	equ	0xFEE
 13742                           fsr0h	equ	0xFEA
 13743                           fsr0l	equ	0xFE9
 13744                           wreg	equ	0xFE8
 13745                           indf1	equ	0xFE7
 13746                           postdec1	equ	0xFE5
 13747                           fsr1h	equ	0xFE2
 13748                           fsr1l	equ	0xFE1
 13749                           indf2	equ	0xFDF
 13750                           postinc2	equ	0xFDE
 13751                           postdec2	equ	0xFDD
 13752                           plusw2	equ	0xFDB
 13753                           fsr2h	equ	0xFDA
 13754                           fsr2l	equ	0xFD9
 13755                           status	equ	0xFD8
 13756                           
 13757 ;; *************** function _APP_DeviceMouseInitialize *****************
 13758 ;; Defined at:
 13759 ;;		line 212 in file "../src/app_device_mouse.c"
 13760 ;; Parameters:    Size  Location     Type
 13761 ;;		None
 13762 ;; Auto vars:     Size  Location     Type
 13763 ;;		None
 13764 ;; Return value:  Size  Location     Type
 13765 ;;		None               void
 13766 ;; Registers used:
 13767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13768 ;; Tracked objects:
 13769 ;;		On entry : 0/0
 13770 ;;		On exit  : 0/0
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13773 ;;      Params:         0       0       0       0       0       0       0       0       0
 13774 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13775 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13776 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13777 ;;Total ram usage:        0 bytes
 13778 ;; Hardware stack levels used:    1
 13779 ;; Hardware stack levels required when called:    2
 13780 ;; This function calls:
 13781 ;;		_USBEnableEndpoint
 13782 ;; This function is called by:
 13783 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787                           	psect	text71
 13788  00311E                     __ptext71:
 13789                           	opt stack 0
 13790  00311E                     _APP_DeviceMouseInitialize:
 13791                           	opt stack 19
 13792                           
 13793                           ;app_device_mouse.c: 219: mouse.movementMode = 1;
 13794                           
 13795                           ;incstack = 0
 13796  00311E  0E01               	movlw	1
 13797  003120  0100               	movlb	0	; () banked
 13798  003122  6FCA               	movwf	(_mouse+5)& (0+255),b
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;app_device_mouse.c: 222: mouse.inputReport[0].handle = (0);
 13802  003124  0E00               	movlw	0
 13803  003126  0100               	movlb	0	; () banked
 13804  003128  6FCB               	movwf	(_mouse+6)& (0+255),b
 13805  00312A  0E00               	movlw	0
 13806  00312C  0100               	movlb	0	; () banked
 13807  00312E  6FCC               	movwf	(_mouse+7)& (0+255),b
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;app_device_mouse.c: 224: mouse.sentStop = 0;
 13811  003130  0E00               	movlw	0
 13812  003132  0100               	movlb	0	; () banked
 13813  003134  6FC5               	movwf	_mouse& (0+255),b
 13814                           
 13815                           ; BSR set to: 0
 13816                           ;app_device_mouse.c: 226: mouse.movementCount = 0;
 13817  003136  0E00               	movlw	0
 13818  003138  0100               	movlb	0	; () banked
 13819  00313A  6FC9               	movwf	(_mouse+4)& (0+255),b
 13820  00313C  0E00               	movlw	0
 13821  00313E  6FC8               	movwf	(_mouse+3)& (0+255),b
 13822                           
 13823                           ; BSR set to: 0
 13824                           ;app_device_mouse.c: 229: USBEnableEndpoint(1,0x02|0x10|0x08);
 13825  003140  0E1A               	movlw	26
 13826  003142  6E09               	movwf	USBEnableEndpoint@options,c
 13827  003144  0E01               	movlw	1
 13828  003146  EC53  F017         	call	_USBEnableEndpoint
 13829  00314A  0012               	return		;funcret
 13830  00314C                     __end_of_APP_DeviceMouseInitialize:
 13831                           	opt stack 0
 13832                           pclatu	equ	0xFFB
 13833                           pclath	equ	0xFFA
 13834                           tblptru	equ	0xFF8
 13835                           tblptrh	equ	0xFF7
 13836                           tblptrl	equ	0xFF6
 13837                           tablat	equ	0xFF5
 13838                           prodh	equ	0xFF4
 13839                           prodl	equ	0xFF3
 13840                           intcon	equ	0xFF2
 13841                           indf0	equ	0xFEF
 13842                           postinc0	equ	0xFEE
 13843                           fsr0h	equ	0xFEA
 13844                           fsr0l	equ	0xFE9
 13845                           wreg	equ	0xFE8
 13846                           indf1	equ	0xFE7
 13847                           postdec1	equ	0xFE5
 13848                           fsr1h	equ	0xFE2
 13849                           fsr1l	equ	0xFE1
 13850                           indf2	equ	0xFDF
 13851                           postinc2	equ	0xFDE
 13852                           postdec2	equ	0xFDD
 13853                           plusw2	equ	0xFDB
 13854                           fsr2h	equ	0xFDA
 13855                           fsr2l	equ	0xFD9
 13856                           status	equ	0xFD8
 13857                           
 13858 ;; *************** function _USBEnableEndpoint *****************
 13859 ;; Defined at:
 13860 ;;		line 896 in file "../../../../../../framework/usb/src/usb_device.c"
 13861 ;; Parameters:    Size  Location     Type
 13862 ;;  ep              1    wreg     unsigned char 
 13863 ;;  options         1    8[COMRAM] unsigned char 
 13864 ;; Auto vars:     Size  Location     Type
 13865 ;;  ep              1   11[COMRAM] unsigned char 
 13866 ;;  p               2    9[COMRAM] PTR unsigned char 
 13867 ;;		 -> UEP0(1), 
 13868 ;; Return value:  Size  Location     Type
 13869 ;;		None               void
 13870 ;; Registers used:
 13871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13872 ;; Tracked objects:
 13873 ;;		On entry : 0/0
 13874 ;;		On exit  : 0/0
 13875 ;;		Unchanged: 0/0
 13876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13877 ;;      Params:         1       0       0       0       0       0       0       0       0
 13878 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13879 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13880 ;;      Totals:         4       0       0       0       0       0       0       0       0
 13881 ;;Total ram usage:        4 bytes
 13882 ;; Hardware stack levels used:    1
 13883 ;; Hardware stack levels required when called:    1
 13884 ;; This function calls:
 13885 ;;		_USBConfigureEndpoint
 13886 ;; This function is called by:
 13887 ;;		_APP_DeviceMouseInitialize
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           
 13891                           	psect	text72
 13892  002EA6                     __ptext72:
 13893                           	opt stack 0
 13894  002EA6                     _USBEnableEndpoint:
 13895                           	opt stack 19
 13896                           
 13897                           ;incstack = 0
 13898                           ;USBEnableEndpoint@ep stored from wreg
 13899  002EA6  6E0C               	movwf	USBEnableEndpoint@ep,c
 13900                           
 13901                           ;usb_device.c: 898: unsigned char* p;
 13902                           ;usb_device.c: 902: if(options & 0x04)
 13903  002EA8  A409               	btfss	USBEnableEndpoint@options,2,c
 13904  002EAA  D005               	goto	i2l4053
 13905                           
 13906                           ;usb_device.c: 903: {
 13907                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 13908  002EAC  0E00               	movlw	0
 13909  002EAE  6E01               	movwf	USBConfigureEndpoint@direction,c
 13910  002EB0  500C               	movf	USBEnableEndpoint@ep,w,c
 13911  002EB2  EC45  F013         	call	_USBConfigureEndpoint
 13912  002EB6                     i2l4053:
 13913                           
 13914                           ;usb_device.c: 905: }
 13915                           ;usb_device.c: 906: if(options & 0x02)
 13916  002EB6  A209               	btfss	USBEnableEndpoint@options,1,c
 13917  002EB8  D005               	goto	i2l4057
 13918                           
 13919                           ;usb_device.c: 907: {
 13920                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 13921  002EBA  0E01               	movlw	1
 13922  002EBC  6E01               	movwf	USBConfigureEndpoint@direction,c
 13923  002EBE  500C               	movf	USBEnableEndpoint@ep,w,c
 13924  002EC0  EC45  F013         	call	_USBConfigureEndpoint
 13925  002EC4                     i2l4057:
 13926                           
 13927                           ;usb_device.c: 909: }
 13928                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 13929  002EC4  500C               	movf	USBEnableEndpoint@ep,w,c
 13930  002EC6  0D01               	mullw	1
 13931  002EC8  0E70               	movlw	112
 13932  002ECA  24F3               	addwf	prodl,w,c
 13933  002ECC  6E0A               	movwf	USBEnableEndpoint@p,c
 13934  002ECE  0E0F               	movlw	15
 13935  002ED0  20F4               	addwfc	prodh,w,c
 13936  002ED2  6E0B               	movwf	USBEnableEndpoint@p+1,c
 13937                           
 13938                           ;usb_device.c: 919: *p = options;
 13939  002ED4  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 13940  002ED8  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 13941  002EDC  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 13942  002EE0  0012               	return		;funcret
 13943  002EE2                     __end_of_USBEnableEndpoint:
 13944                           	opt stack 0
 13945                           pclatu	equ	0xFFB
 13946                           pclath	equ	0xFFA
 13947                           tblptru	equ	0xFF8
 13948                           tblptrh	equ	0xFF7
 13949                           tblptrl	equ	0xFF6
 13950                           tablat	equ	0xFF5
 13951                           prodh	equ	0xFF4
 13952                           prodl	equ	0xFF3
 13953                           intcon	equ	0xFF2
 13954                           indf0	equ	0xFEF
 13955                           postinc0	equ	0xFEE
 13956                           fsr0h	equ	0xFEA
 13957                           fsr0l	equ	0xFE9
 13958                           wreg	equ	0xFE8
 13959                           indf1	equ	0xFE7
 13960                           postdec1	equ	0xFE5
 13961                           fsr1h	equ	0xFE2
 13962                           fsr1l	equ	0xFE1
 13963                           indf2	equ	0xFDF
 13964                           postinc2	equ	0xFDE
 13965                           postdec2	equ	0xFDD
 13966                           plusw2	equ	0xFDB
 13967                           fsr2h	equ	0xFDA
 13968                           fsr2l	equ	0xFD9
 13969                           status	equ	0xFD8
 13970                           
 13971 ;; *************** function _USBConfigureEndpoint *****************
 13972 ;; Defined at:
 13973 ;;		line 1561 in file "../../../../../../framework/usb/src/usb_device.c"
 13974 ;; Parameters:    Size  Location     Type
 13975 ;;  EPNum           1    wreg     unsigned char 
 13976 ;;  direction       1    0[COMRAM] unsigned char 
 13977 ;; Auto vars:     Size  Location     Type
 13978 ;;  EPNum           1    5[COMRAM] unsigned char 
 13979 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 13980 ;;		 -> BDT(32), 
 13981 ;; Return value:  Size  Location     Type
 13982 ;;		None               void
 13983 ;; Registers used:
 13984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13985 ;; Tracked objects:
 13986 ;;		On entry : 0/0
 13987 ;;		On exit  : 0/0
 13988 ;;		Unchanged: 0/0
 13989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13990 ;;      Params:         1       0       0       0       0       0       0       0       0
 13991 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13992 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13993 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13994 ;;Total ram usage:        8 bytes
 13995 ;; Hardware stack levels used:    1
 13996 ;; This function calls:
 13997 ;;		Nothing
 13998 ;; This function is called by:
 13999 ;;		_USBEnableEndpoint
 14000 ;; This function uses a non-reentrant model
 14001 ;;
 14002                           
 14003                           	psect	text73
 14004  00268A                     __ptext73:
 14005                           	opt stack 0
 14006  00268A                     _USBConfigureEndpoint:
 14007                           	opt stack 19
 14008                           
 14009                           ;incstack = 0
 14010                           ;USBConfigureEndpoint@EPNum stored from wreg
 14011  00268A  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 14012                           
 14013                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 14014                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 14015  00268C  0E00               	movlw	0
 14016  00268E  6E07               	movwf	USBConfigureEndpoint@handle,c
 14017  002690  0E04               	movlw	4
 14018  002692  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 14019                           
 14020                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 14021  002694  5001               	movf	USBConfigureEndpoint@direction,w,c
 14022  002696  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 14023  002698  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 14024  00269A  90D8               	bcf	status,0,c
 14025  00269C  3602               	rlcf	??_USBConfigureEndpoint,f,c
 14026  00269E  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 14027  0026A0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 14028  0026A2  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 14029  0026A4  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 14030  0026A6  90D8               	bcf	status,0,c
 14031  0026A8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 14032  0026AA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 14033  0026AC  90D8               	bcf	status,0,c
 14034  0026AE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 14035  0026B0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 14036  0026B2  5002               	movf	??_USBConfigureEndpoint,w,c
 14037  0026B4  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 14038  0026B6  5003               	movf	??_USBConfigureEndpoint+1,w,c
 14039  0026B8  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 14040  0026BA  90D8               	bcf	status,0,c
 14041  0026BC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 14042  0026BE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 14043  0026C0  90D8               	bcf	status,0,c
 14044  0026C2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 14045  0026C4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 14046  0026C6  5004               	movf	??_USBConfigureEndpoint+2,w,c
 14047  0026C8  2607               	addwf	USBConfigureEndpoint@handle,f,c
 14048  0026CA  5005               	movf	??_USBConfigureEndpoint+3,w,c
 14049  0026CC  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 14050                           
 14051                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 14052  0026CE  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 14053  0026D2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 14054  0026D6  9EDF               	bcf	indf2,7,c
 14055                           
 14056                           ;usb_device.c: 1575: if(direction == 0)
 14057  0026D8  5001               	movf	USBConfigureEndpoint@direction,w,c
 14058  0026DA  A4D8               	btfss	status,2,c
 14059  0026DC  D007               	goto	i2l4043
 14060                           
 14061                           ;usb_device.c: 1576: {
 14062                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 14063  0026DE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 14064  0026E0  0D02               	mullw	2
 14065  0026E2  0ED3               	movlw	low _pBDTEntryOut
 14066  0026E4  24F3               	addwf	prodl,w,c
 14067  0026E6  6ED9               	movwf	fsr2l,c
 14068  0026E8  0E00               	movlw	high _pBDTEntryOut
 14069  0026EA  D006               	goto	L13
 14070  0026EC                     i2l4043:
 14071                           
 14072                           ;usb_device.c: 1579: else
 14073                           ;usb_device.c: 1580: {
 14074                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 14075  0026EC  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 14076  0026EE  0D02               	mullw	2
 14077  0026F0  0E42               	movlw	low _pBDTEntryIn
 14078  0026F2  24F3               	addwf	prodl,w,c
 14079  0026F4  6ED9               	movwf	fsr2l,c
 14080  0026F6  0E00               	movlw	high _pBDTEntryIn
 14081  0026F8                     L13:
 14082  0026F8  20F4               	addwfc	prodh,w,c
 14083  0026FA  6EDA               	movwf	fsr2h,c
 14084  0026FC  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 14085  002700  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 14086                           
 14087                           ;usb_device.c: 1582: }
 14088                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 14089  002704  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 14090  002708  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 14091  00270C  9CDF               	bcf	indf2,6,c
 14092                           
 14093                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 14094  00270E  EE20 F004          	lfsr	2,4
 14095  002712  5007               	movf	USBConfigureEndpoint@handle,w,c
 14096  002714  26D9               	addwf	fsr2l,f,c
 14097  002716  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 14098  002718  22DA               	addwfc	fsr2h,f,c
 14099  00271A  8CDF               	bsf	indf2,6,c
 14100  00271C  0012               	return		;funcret
 14101  00271E                     __end_of_USBConfigureEndpoint:
 14102                           	opt stack 0
 14103                           pclatu	equ	0xFFB
 14104                           pclath	equ	0xFFA
 14105                           tblptru	equ	0xFF8
 14106                           tblptrh	equ	0xFF7
 14107                           tblptrl	equ	0xFF6
 14108                           tablat	equ	0xFF5
 14109                           prodh	equ	0xFF4
 14110                           prodl	equ	0xFF3
 14111                           intcon	equ	0xFF2
 14112                           indf0	equ	0xFEF
 14113                           postinc0	equ	0xFEE
 14114                           fsr0h	equ	0xFEA
 14115                           fsr0l	equ	0xFE9
 14116                           wreg	equ	0xFE8
 14117                           indf1	equ	0xFE7
 14118                           postdec1	equ	0xFE5
 14119                           fsr1h	equ	0xFE2
 14120                           fsr1l	equ	0xFE1
 14121                           indf2	equ	0xFDF
 14122                           postinc2	equ	0xFDE
 14123                           postdec2	equ	0xFDD
 14124                           plusw2	equ	0xFDB
 14125                           fsr2h	equ	0xFDA
 14126                           fsr2l	equ	0xFD9
 14127                           status	equ	0xFD8
 14128                           
 14129 ;; *************** function _USBCtrlTrfOutHandler *****************
 14130 ;; Defined at:
 14131 ;;		line 2555 in file "../../../../../../framework/usb/src/usb_device.c"
 14132 ;; Parameters:    Size  Location     Type
 14133 ;;		None
 14134 ;; Auto vars:     Size  Location     Type
 14135 ;;		None
 14136 ;; Return value:  Size  Location     Type
 14137 ;;		None               void
 14138 ;; Registers used:
 14139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14140 ;; Tracked objects:
 14141 ;;		On entry : 0/0
 14142 ;;		On exit  : 0/0
 14143 ;;		Unchanged: 0/0
 14144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14145 ;;      Params:         0       0       0       0       0       0       0       0       0
 14146 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14147 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14148 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14149 ;;Total ram usage:        0 bytes
 14150 ;; Hardware stack levels used:    1
 14151 ;; Hardware stack levels required when called:    2
 14152 ;; This function calls:
 14153 ;;		_USBCtrlTrfRxService
 14154 ;; This function is called by:
 14155 ;;		_USBCtrlEPService
 14156 ;; This function uses a non-reentrant model
 14157 ;;
 14158                           
 14159                           	psect	text74
 14160  002CEC                     __ptext74:
 14161                           	opt stack 0
 14162  002CEC                     _USBCtrlTrfOutHandler:
 14163                           	opt stack 19
 14164                           
 14165                           ;usb_device.c: 2557: if(controlTransferState == 2)
 14166                           
 14167                           ;incstack = 0
 14168  002CEC  0E02               	movlw	2
 14169  002CEE  1859               	xorwf	_controlTransferState,w,c	;volatile
 14170  002CF0  A4D8               	btfss	status,2,c
 14171  002CF2  D003               	goto	i2l5177
 14172                           
 14173                           ;usb_device.c: 2558: {
 14174                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 14175  002CF4  ECCA  F00B         	call	_USBCtrlTrfRxService	;wreg free
 14176                           
 14177                           ;usb_device.c: 2560: }
 14178  002CF8  0012               	return	
 14179  002CFA                     i2l5177:
 14180                           
 14181                           ;usb_device.c: 2561: else
 14182                           ;usb_device.c: 2562: {
 14183                           ;usb_device.c: 2565: controlTransferState = 0;
 14184  002CFA  0E00               	movlw	0
 14185  002CFC  6E59               	movwf	_controlTransferState,c	;volatile
 14186                           
 14187                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 14188  002CFE  5050               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 14189  002D00  A4D8               	btfss	status,2,c
 14190  002D02  D01F               	goto	i2l5185
 14191                           
 14192                           ;usb_device.c: 2573: {
 14193                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 14194  002D04  EE20 F001          	lfsr	2,1
 14195  002D08  504E               	movf	_pBDTEntryEP0OutNext,w,c
 14196  002D0A  26D9               	addwf	fsr2l,f,c
 14197  002D0C  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 14198  002D0E  22DA               	addwfc	fsr2h,f,c
 14199  002D10  0E08               	movlw	8
 14200  002D12  6EDF               	movwf	indf2,c
 14201                           
 14202                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14203  002D14  EE20 F002          	lfsr	2,2
 14204  002D18  504E               	movf	_pBDTEntryEP0OutNext,w,c
 14205  002D1A  26D9               	addwf	fsr2l,f,c
 14206  002D1C  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 14207  002D1E  22DA               	addwfc	fsr2h,f,c
 14208  002D20  0E20               	movlw	32
 14209  002D22  6EDE               	movwf	postinc2,c
 14210  002D24  0E04               	movlw	4
 14211  002D26  6EDD               	movwf	postdec2,c
 14212                           
 14213                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14214  002D28  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14215  002D2C  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14216  002D30  0E0C               	movlw	12
 14217  002D32  6EDF               	movwf	indf2,c
 14218                           
 14219                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14220  002D34  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14221  002D38  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14222  002D3C  0E00               	movlw	0
 14223  002D3E  8EDB               	bsf	plusw2,7,c
 14224                           
 14225                           ;usb_device.c: 2578: }
 14226  002D40  0012               	return	
 14227  002D42                     i2l5185:
 14228                           
 14229                           ;usb_device.c: 2579: else
 14230                           ;usb_device.c: 2580: {
 14231                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 14232  002D42  0E00               	movlw	0
 14233  002D44  6E50               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 14234  002D46  0012               	return	
 14235  002D48                     __end_of_USBCtrlTrfOutHandler:
 14236                           	opt stack 0
 14237                           pclatu	equ	0xFFB
 14238                           pclath	equ	0xFFA
 14239                           tblptru	equ	0xFF8
 14240                           tblptrh	equ	0xFF7
 14241                           tblptrl	equ	0xFF6
 14242                           tablat	equ	0xFF5
 14243                           prodh	equ	0xFF4
 14244                           prodl	equ	0xFF3
 14245                           intcon	equ	0xFF2
 14246                           indf0	equ	0xFEF
 14247                           postinc0	equ	0xFEE
 14248                           fsr0h	equ	0xFEA
 14249                           fsr0l	equ	0xFE9
 14250                           wreg	equ	0xFE8
 14251                           indf1	equ	0xFE7
 14252                           postdec1	equ	0xFE5
 14253                           fsr1h	equ	0xFE2
 14254                           fsr1l	equ	0xFE1
 14255                           indf2	equ	0xFDF
 14256                           postinc2	equ	0xFDE
 14257                           postdec2	equ	0xFDD
 14258                           plusw2	equ	0xFDB
 14259                           fsr2h	equ	0xFDA
 14260                           fsr2l	equ	0xFD9
 14261                           status	equ	0xFD8
 14262                           
 14263 ;; *************** function _USBCtrlTrfRxService *****************
 14264 ;; Defined at:
 14265 ;;		line 1870 in file "../../../../../../framework/usb/src/usb_device.c"
 14266 ;; Parameters:    Size  Location     Type
 14267 ;;		None
 14268 ;; Auto vars:     Size  Location     Type
 14269 ;;  byteToRead      1    1[COMRAM] unsigned char 
 14270 ;;  i               1    0[COMRAM] unsigned char 
 14271 ;; Return value:  Size  Location     Type
 14272 ;;		None               void
 14273 ;; Registers used:
 14274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14275 ;; Tracked objects:
 14276 ;;		On entry : 0/0
 14277 ;;		On exit  : 0/0
 14278 ;;		Unchanged: 0/0
 14279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14280 ;;      Params:         0       0       0       0       0       0       0       0       0
 14281 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14282 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14283 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14284 ;;Total ram usage:        2 bytes
 14285 ;; Hardware stack levels used:    1
 14286 ;; Hardware stack levels required when called:    1
 14287 ;; This function calls:
 14288 ;;		_USBCtrlEPAllowStatusStage
 14289 ;; This function is called by:
 14290 ;;		_USBCtrlTrfOutHandler
 14291 ;; This function uses a non-reentrant model
 14292 ;;
 14293                           
 14294                           	psect	text75
 14295  001794                     __ptext75:
 14296                           	opt stack 0
 14297  001794                     _USBCtrlTrfRxService:
 14298                           	opt stack 19
 14299                           
 14300                           ;usb_device.c: 1872: uint8_t byteToRead;
 14301                           ;usb_device.c: 1873: uint8_t i;
 14302                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 14303                           
 14304                           ;incstack = 0
 14305  001794  EE20 F001          	lfsr	2,1
 14306  001798  504C               	movf	_pBDTEntryEP0OutCurrent,w,c
 14307  00179A  26D9               	addwf	fsr2l,f,c
 14308  00179C  504D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14309  00179E  22DA               	addwfc	fsr2h,f,c
 14310  0017A0  50DF               	movf	indf2,w,c
 14311  0017A2  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 14312                           
 14313                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 14314  0017A4  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 14315  0017A6  5C38               	subwf	_outPipes+4,w,c	;volatile
 14316  0017A8  0E00               	movlw	0
 14317  0017AA  5839               	subwfb	_outPipes+5,w,c	;volatile
 14318  0017AC  A0D8               	btfss	status,0,c
 14319                           
 14320                           ;usb_device.c: 1884: {
 14321                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 14322  0017AE  C038  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 14323                           
 14324                           ;usb_device.c: 1886: }
 14325                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 14326  0017B2  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 14327  0017B4  5E38               	subwf	_outPipes+4,f,c	;volatile
 14328  0017B6  0E00               	movlw	0
 14329  0017B8  5A39               	subwfb	_outPipes+5,f,c	;volatile
 14330                           
 14331                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 14332  0017BA  0E00               	movlw	0
 14333  0017BC  6E01               	movwf	USBCtrlTrfRxService@i,c
 14334  0017BE  D011               	goto	i2l4917
 14335  0017C0                     i2l4911:
 14336                           
 14337                           ;usb_device.c: 1893: {
 14338                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 14339  0017C0  5001               	movf	USBCtrlTrfRxService@i,w,c
 14340  0017C2  0D01               	mullw	1
 14341  0017C4  0E28               	movlw	40
 14342  0017C6  24F3               	addwf	prodl,w,c
 14343  0017C8  6ED9               	movwf	fsr2l,c
 14344  0017CA  0E04               	movlw	4
 14345  0017CC  20F4               	addwfc	prodh,w,c
 14346  0017CE  6EDA               	movwf	fsr2h,c
 14347  0017D0  C034  FFE1         	movff	_outPipes,fsr1l	;volatile
 14348  0017D4  C035  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 14349  0017D8  CFDF FFE7          	movff	indf2,indf1
 14350  0017DC  4A34               	infsnz	_outPipes,f,c	;volatile
 14351  0017DE  2A35               	incf	_outPipes+1,f,c	;volatile
 14352  0017E0  2A01               	incf	USBCtrlTrfRxService@i,f,c
 14353  0017E2                     i2l4917:
 14354  0017E2  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 14355  0017E4  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 14356  0017E6  A0D8               	btfss	status,0,c
 14357  0017E8  D7EB               	goto	i2l4911
 14358                           
 14359                           ;usb_device.c: 1895: }
 14360                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 14361  0017EA  5038               	movf	_outPipes+4,w,c	;volatile
 14362  0017EC  1039               	iorwf	_outPipes+5,w,c	;volatile
 14363  0017EE  B4D8               	btfsc	status,2,c
 14364  0017F0  D032               	goto	i2l4933
 14365                           
 14366                           ;usb_device.c: 1900: {
 14367                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 14368  0017F2  EE20 F001          	lfsr	2,1
 14369  0017F6  504E               	movf	_pBDTEntryEP0OutNext,w,c
 14370  0017F8  26D9               	addwf	fsr2l,f,c
 14371  0017FA  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 14372  0017FC  22DA               	addwfc	fsr2h,f,c
 14373  0017FE  0E08               	movlw	8
 14374  001800  6EDF               	movwf	indf2,c
 14375                           
 14376                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 14377  001802  EE20 F002          	lfsr	2,2
 14378  001806  504E               	movf	_pBDTEntryEP0OutNext,w,c
 14379  001808  26D9               	addwf	fsr2l,f,c
 14380  00180A  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 14381  00180C  22DA               	addwfc	fsr2h,f,c
 14382  00180E  0E28               	movlw	40
 14383  001810  6EDE               	movwf	postinc2,c
 14384  001812  0E04               	movlw	4
 14385  001814  6EDD               	movwf	postdec2,c
 14386                           
 14387                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 14388  001816  C04C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14389  00181A  C04D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14390  00181E  BCDF               	btfsc	indf2,6,c
 14391  001820  D00D               	goto	i2l4929
 14392                           
 14393                           ;usb_device.c: 1904: {
 14394                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14395  001822  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14396  001826  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14397  00182A  0E48               	movlw	72
 14398  00182C  6EDF               	movwf	indf2,c
 14399                           
 14400                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14401  00182E  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14402  001832  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14403  001836  0E00               	movlw	0
 14404  001838  8EDB               	bsf	plusw2,7,c
 14405                           
 14406                           ;usb_device.c: 1907: }
 14407  00183A  0012               	return	
 14408  00183C                     i2l4929:
 14409                           
 14410                           ;usb_device.c: 1908: else
 14411                           ;usb_device.c: 1909: {
 14412                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 14413  00183C  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14414  001840  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14415  001844  0E08               	movlw	8
 14416  001846  6EDF               	movwf	indf2,c
 14417                           
 14418                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14419  001848  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14420  00184C  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14421  001850  0E00               	movlw	0
 14422  001852  8EDB               	bsf	plusw2,7,c
 14423                           
 14424                           ;usb_device.c: 1912: }
 14425                           ;usb_device.c: 1913: }
 14426  001854  0012               	return	
 14427  001856                     i2l4933:
 14428                           
 14429                           ;usb_device.c: 1914: else
 14430                           ;usb_device.c: 1915: {
 14431                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 14432  001856  EE20 F001          	lfsr	2,1
 14433  00185A  504E               	movf	_pBDTEntryEP0OutNext,w,c
 14434  00185C  26D9               	addwf	fsr2l,f,c
 14435  00185E  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 14436  001860  22DA               	addwfc	fsr2h,f,c
 14437  001862  0E08               	movlw	8
 14438  001864  6EDF               	movwf	indf2,c
 14439                           
 14440                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14441  001866  EE20 F002          	lfsr	2,2
 14442  00186A  504E               	movf	_pBDTEntryEP0OutNext,w,c
 14443  00186C  26D9               	addwf	fsr2l,f,c
 14444  00186E  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 14445  001870  22DA               	addwfc	fsr2h,f,c
 14446  001872  0E20               	movlw	32
 14447  001874  6EDE               	movwf	postinc2,c
 14448  001876  0E04               	movlw	4
 14449  001878  6EDD               	movwf	postdec2,c
 14450                           
 14451                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 14452  00187A  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14453  00187E  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14454  001882  0E04               	movlw	4
 14455  001884  6EDF               	movwf	indf2,c
 14456                           
 14457                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14458  001886  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14459  00188A  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14460  00188E  0E00               	movlw	0
 14461  001890  8EDB               	bsf	plusw2,7,c
 14462                           
 14463                           ;usb_device.c: 1944: }
 14464                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 14465                           
 14466                           ;usb_device.c: 1933: {
 14467                           ;usb_device.c: 1939: outPipes[0].pFunc();
 14468  001892  9E37               	bcf	_outPipes+3,7,c	;volatile
 14469                           
 14470                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 14471  001894  5054               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 14472  001896  A4D8               	btfss	status,2,c
 14473  001898  0012               	return	
 14474                           
 14475                           ;usb_device.c: 1960: {
 14476                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 14477  00189A  ECD4  F00F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14478  00189E  0012               	return	
 14479  0018A0                     __end_of_USBCtrlTrfRxService:
 14480                           	opt stack 0
 14481                           pclatu	equ	0xFFB
 14482                           pclath	equ	0xFFA
 14483                           tblptru	equ	0xFF8
 14484                           tblptrh	equ	0xFF7
 14485                           tblptrl	equ	0xFF6
 14486                           tablat	equ	0xFF5
 14487                           prodh	equ	0xFF4
 14488                           prodl	equ	0xFF3
 14489                           intcon	equ	0xFF2
 14490                           indf0	equ	0xFEF
 14491                           postinc0	equ	0xFEE
 14492                           fsr0h	equ	0xFEA
 14493                           fsr0l	equ	0xFE9
 14494                           wreg	equ	0xFE8
 14495                           indf1	equ	0xFE7
 14496                           postdec1	equ	0xFE5
 14497                           fsr1h	equ	0xFE2
 14498                           fsr1l	equ	0xFE1
 14499                           indf2	equ	0xFDF
 14500                           postinc2	equ	0xFDE
 14501                           postdec2	equ	0xFDD
 14502                           plusw2	equ	0xFDB
 14503                           fsr2h	equ	0xFDA
 14504                           fsr2l	equ	0xFD9
 14505                           status	equ	0xFD8
 14506                           
 14507 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 14508 ;; Defined at:
 14509 ;;		line 1434 in file "../../../../../../framework/usb/src/usb_device.c"
 14510 ;; Parameters:    Size  Location     Type
 14511 ;;		None
 14512 ;; Auto vars:     Size  Location     Type
 14513 ;;		None
 14514 ;; Return value:  Size  Location     Type
 14515 ;;		None               void
 14516 ;; Registers used:
 14517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14518 ;; Tracked objects:
 14519 ;;		On entry : 0/0
 14520 ;;		On exit  : 0/0
 14521 ;;		Unchanged: 0/0
 14522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14523 ;;      Params:         0       0       0       0       0       0       0       0       0
 14524 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14525 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14526 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14527 ;;Total ram usage:        0 bytes
 14528 ;; Hardware stack levels used:    1
 14529 ;; This function calls:
 14530 ;;		Nothing
 14531 ;; This function is called by:
 14532 ;;		_USBDeviceTasks
 14533 ;;		_USBCtrlEPServiceComplete
 14534 ;;		_USBCtrlTrfRxService
 14535 ;; This function uses a non-reentrant model
 14536 ;;
 14537                           
 14538                           	psect	text76
 14539  001FA8                     __ptext76:
 14540                           	opt stack 0
 14541  001FA8                     _USBCtrlEPAllowStatusStage:
 14542                           	opt stack 19
 14543                           
 14544                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 14545                           
 14546                           ;incstack = 0
 14547  001FA8  5056               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 14548  001FAA  A4D8               	btfss	status,2,c
 14549  001FAC  0012               	return	
 14550                           
 14551                           ;usb_device.c: 1442: {
 14552                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 14553  001FAE  0E01               	movlw	1
 14554  001FB0  6E56               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14555                           
 14556                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 14557  001FB2  5057               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 14558  001FB4  A4D8               	btfss	status,2,c
 14559  001FB6  0012               	return	
 14560                           
 14561                           ;usb_device.c: 1445: {
 14562                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 14563  001FB8  0E01               	movlw	1
 14564  001FBA  6E57               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14565                           
 14566                           ;usb_device.c: 1450: if(controlTransferState == 2)
 14567  001FBC  0E02               	movlw	2
 14568  001FBE  1859               	xorwf	_controlTransferState,w,c	;volatile
 14569  001FC0  A4D8               	btfss	status,2,c
 14570  001FC2  D015               	goto	i2l4403
 14571                           
 14572                           ;usb_device.c: 1451: {
 14573                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 14574  001FC4  EE20 F001          	lfsr	2,1
 14575  001FC8  5042               	movf	_pBDTEntryIn,w,c
 14576  001FCA  26D9               	addwf	fsr2l,f,c
 14577  001FCC  5043               	movf	_pBDTEntryIn+1,w,c
 14578  001FCE  22DA               	addwfc	fsr2h,f,c
 14579  001FD0  0E00               	movlw	0
 14580  001FD2  6EDF               	movwf	indf2,c
 14581                           
 14582                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14583  001FD4  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 14584  001FD8  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14585  001FDC  0E48               	movlw	72
 14586  001FDE  6EDF               	movwf	indf2,c
 14587                           
 14588                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14589  001FE0  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 14590  001FE4  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14591  001FE8  0E00               	movlw	0
 14592  001FEA  8EDB               	bsf	plusw2,7,c
 14593                           
 14594                           ;usb_device.c: 1455: }
 14595  001FEC  0012               	return	
 14596  001FEE                     i2l4403:
 14597                           
 14598                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 14599  001FEE  0459               	decf	_controlTransferState,w,c	;volatile
 14600  001FF0  A4D8               	btfss	status,2,c
 14601  001FF2  0012               	return	
 14602                           
 14603                           ;usb_device.c: 1457: {
 14604                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 14605  001FF4  0E00               	movlw	0
 14606  001FF6  6E50               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 14607                           
 14608                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 14609  001FF8  EE20 F001          	lfsr	2,1
 14610  001FFC  504C               	movf	_pBDTEntryEP0OutCurrent,w,c
 14611  001FFE  26D9               	addwf	fsr2l,f,c
 14612  002000  504D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14613  002002  22DA               	addwfc	fsr2h,f,c
 14614  002004  0E08               	movlw	8
 14615  002006  6EDF               	movwf	indf2,c
 14616                           
 14617                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 14618  002008  EE20 F002          	lfsr	2,2
 14619  00200C  504C               	movf	_pBDTEntryEP0OutCurrent,w,c
 14620  00200E  26D9               	addwf	fsr2l,f,c
 14621  002010  504D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14622  002012  22DA               	addwfc	fsr2h,f,c
 14623  002014  0E20               	movlw	32
 14624  002016  6EDE               	movwf	postinc2,c
 14625  002018  0E04               	movlw	4
 14626  00201A  6EDD               	movwf	postdec2,c
 14627                           
 14628                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 14629  00201C  C04C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14630  002020  C04D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14631  002024  0E04               	movlw	4
 14632  002026  6EDF               	movwf	indf2,c
 14633                           
 14634                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14635  002028  C04C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14636  00202C  C04D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14637  002030  0E00               	movlw	0
 14638  002032  8EDB               	bsf	plusw2,7,c
 14639                           
 14640                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 14641  002034  0E01               	movlw	1
 14642  002036  6E50               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 14643                           
 14644                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 14645  002038  EE20 F001          	lfsr	2,1
 14646  00203C  504E               	movf	_pBDTEntryEP0OutNext,w,c
 14647  00203E  26D9               	addwf	fsr2l,f,c
 14648  002040  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 14649  002042  22DA               	addwfc	fsr2h,f,c
 14650  002044  0E08               	movlw	8
 14651  002046  6EDF               	movwf	indf2,c
 14652                           
 14653                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14654  002048  EE20 F002          	lfsr	2,2
 14655  00204C  504E               	movf	_pBDTEntryEP0OutNext,w,c
 14656  00204E  26D9               	addwf	fsr2l,f,c
 14657  002050  504F               	movf	_pBDTEntryEP0OutNext+1,w,c
 14658  002052  22DA               	addwfc	fsr2h,f,c
 14659  002054  0E20               	movlw	32
 14660  002056  6EDE               	movwf	postinc2,c
 14661  002058  0E04               	movlw	4
 14662  00205A  6EDD               	movwf	postdec2,c
 14663                           
 14664                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 14665  00205C  C04E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14666  002060  C04F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14667  002064  0E80               	movlw	128
 14668  002066  6EDF               	movwf	indf2,c
 14669  002068  0012               	return	
 14670  00206A                     __end_of_USBCtrlEPAllowStatusStage:
 14671                           	opt stack 0
 14672                           pclatu	equ	0xFFB
 14673                           pclath	equ	0xFFA
 14674                           tblptru	equ	0xFF8
 14675                           tblptrh	equ	0xFF7
 14676                           tblptrl	equ	0xFF6
 14677                           tablat	equ	0xFF5
 14678                           prodh	equ	0xFF4
 14679                           prodl	equ	0xFF3
 14680                           intcon	equ	0xFF2
 14681                           indf0	equ	0xFEF
 14682                           postinc0	equ	0xFEE
 14683                           fsr0h	equ	0xFEA
 14684                           fsr0l	equ	0xFE9
 14685                           wreg	equ	0xFE8
 14686                           indf1	equ	0xFE7
 14687                           postdec1	equ	0xFE5
 14688                           fsr1h	equ	0xFE2
 14689                           fsr1l	equ	0xFE1
 14690                           indf2	equ	0xFDF
 14691                           postinc2	equ	0xFDE
 14692                           postdec2	equ	0xFDD
 14693                           plusw2	equ	0xFDB
 14694                           fsr2h	equ	0xFDA
 14695                           fsr2l	equ	0xFD9
 14696                           status	equ	0xFD8
 14697                           
 14698 ;; *************** function _USBCtrlTrfInHandler *****************
 14699 ;; Defined at:
 14700 ;;		line 2609 in file "../../../../../../framework/usb/src/usb_device.c"
 14701 ;; Parameters:    Size  Location     Type
 14702 ;;		None
 14703 ;; Auto vars:     Size  Location     Type
 14704 ;;  lastDTS         1    1[COMRAM] unsigned char 
 14705 ;; Return value:  Size  Location     Type
 14706 ;;		None               void
 14707 ;; Registers used:
 14708 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14709 ;; Tracked objects:
 14710 ;;		On entry : 0/0
 14711 ;;		On exit  : 0/0
 14712 ;;		Unchanged: 0/0
 14713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14714 ;;      Params:         0       0       0       0       0       0       0       0       0
 14715 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14716 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14717 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14718 ;;Total ram usage:        1 bytes
 14719 ;; Hardware stack levels used:    1
 14720 ;; Hardware stack levels required when called:    1
 14721 ;; This function calls:
 14722 ;;		_USBCtrlTrfTxService
 14723 ;; This function is called by:
 14724 ;;		_USBCtrlEPService
 14725 ;; This function uses a non-reentrant model
 14726 ;;
 14727                           
 14728                           	psect	text77
 14729  002124                     __ptext77:
 14730                           	opt stack 0
 14731  002124                     _USBCtrlTrfInHandler:
 14732                           	opt stack 20
 14733                           
 14734                           ;usb_device.c: 2611: uint8_t lastDTS;
 14735                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 14736                           
 14737                           ;incstack = 0
 14738  002124  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 14739  002128  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14740  00212C  0E00               	movlw	0
 14741  00212E  BCDF               	btfsc	indf2,6,c
 14742  002130  0E01               	movlw	1
 14743  002132  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 14744                           
 14745                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 14746  002134  0E04               	movlw	4
 14747  002136  1A42               	xorwf	_pBDTEntryIn,f,c
 14748                           
 14749                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 14750  002138  0E08               	movlw	8
 14751  00213A  1855               	xorwf	_USBDeviceState,w,c	;volatile
 14752  00213C  A4D8               	btfss	status,2,c
 14753  00213E  D00B               	goto	i2l5201
 14754                           
 14755                           ;usb_device.c: 2622: {
 14756                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 14757  002140  0104               	movlb	4	; () banked
 14758  002142  5122               	movf	34,w,b	;volatile
 14759  002144  0B7F               	andlw	127
 14760  002146  6E6E               	movwf	3950,c	;volatile
 14761                           
 14762                           ; BSR set to: 4
 14763                           ;usb_device.c: 2624: if(UADDR != 0u)
 14764  002148  506E               	movf	3950,w,c	;volatile
 14765  00214A  B4D8               	btfsc	status,2,c
 14766  00214C  D002               	goto	i2l5199
 14767                           
 14768                           ; BSR set to: 4
 14769                           ;usb_device.c: 2625: {
 14770                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 14771  00214E  0E10               	movlw	16
 14772  002150  D001               	goto	L14
 14773  002152                     i2l5199:
 14774                           
 14775                           ; BSR set to: 4
 14776                           ;usb_device.c: 2628: else
 14777                           ;usb_device.c: 2629: {
 14778                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 14779  002152  0E04               	movlw	4
 14780  002154                     L14:
 14781  002154  6E55               	movwf	_USBDeviceState,c	;volatile
 14782  002156                     i2l5201:
 14783                           
 14784                           ;usb_device.c: 2631: }
 14785                           ;usb_device.c: 2632: }
 14786                           ;usb_device.c: 2635: if(controlTransferState == 1)
 14787  002156  0459               	decf	_controlTransferState,w,c	;volatile
 14788  002158  A4D8               	btfss	status,2,c
 14789  00215A  D03A               	goto	i2l955
 14790                           
 14791                           ;usb_device.c: 2636: {
 14792                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 14793  00215C  EE20 F002          	lfsr	2,2
 14794  002160  5042               	movf	_pBDTEntryIn,w,c
 14795  002162  26D9               	addwf	fsr2l,f,c
 14796  002164  5043               	movf	_pBDTEntryIn+1,w,c
 14797  002166  22DA               	addwfc	fsr2h,f,c
 14798  002168  0E28               	movlw	40
 14799  00216A  6EDE               	movwf	postinc2,c
 14800  00216C  0E04               	movlw	4
 14801  00216E  6EDD               	movwf	postdec2,c
 14802                           
 14803                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 14804  002170  EC6D  F00F         	call	_USBCtrlTrfTxService	;wreg free
 14805                           
 14806                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 14807  002174  0E02               	movlw	2
 14808  002176  185B               	xorwf	_shortPacketStatus,w,c	;volatile
 14809  002178  A4D8               	btfss	status,2,c
 14810  00217A  D00D               	goto	i2l5213
 14811                           
 14812                           ;usb_device.c: 2645: {
 14813                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 14814  00217C  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 14815  002180  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14816  002184  0E04               	movlw	4
 14817  002186  6EDF               	movwf	indf2,c
 14818                           
 14819                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14820  002188  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 14821  00218C  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14822  002190  0E00               	movlw	0
 14823  002192  8EDB               	bsf	plusw2,7,c
 14824                           
 14825                           ;usb_device.c: 2650: }
 14826  002194  0012               	return	
 14827  002196                     i2l5213:
 14828                           
 14829                           ;usb_device.c: 2651: else
 14830                           ;usb_device.c: 2652: {
 14831                           ;usb_device.c: 2653: if(lastDTS == 0)
 14832  002196  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 14833  002198  A4D8               	btfss	status,2,c
 14834  00219A  D00D               	goto	i2l5219
 14835                           
 14836                           ;usb_device.c: 2654: {
 14837                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14838  00219C  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 14839  0021A0  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14840  0021A4  0E48               	movlw	72
 14841  0021A6  6EDF               	movwf	indf2,c
 14842                           
 14843                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14844  0021A8  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 14845  0021AC  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14846  0021B0  0E00               	movlw	0
 14847  0021B2  8EDB               	bsf	plusw2,7,c
 14848                           
 14849                           ;usb_device.c: 2657: }
 14850  0021B4  0012               	return	
 14851  0021B6                     i2l5219:
 14852                           
 14853                           ;usb_device.c: 2658: else
 14854                           ;usb_device.c: 2659: {
 14855                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 14856  0021B6  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 14857  0021BA  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14858  0021BE  0E08               	movlw	8
 14859  0021C0  6EDF               	movwf	indf2,c
 14860                           
 14861                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14862  0021C2  C042  FFD9         	movff	_pBDTEntryIn,fsr2l
 14863  0021C6  C043  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14864  0021CA  0E00               	movlw	0
 14865  0021CC  8EDB               	bsf	plusw2,7,c
 14866                           
 14867                           ;usb_device.c: 2662: }
 14868                           ;usb_device.c: 2663: }
 14869                           ;usb_device.c: 2664: }
 14870  0021CE  0012               	return	
 14871  0021D0                     i2l955:
 14872                           
 14873                           ;usb_device.c: 2665: else
 14874                           ;usb_device.c: 2666: {
 14875                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 14876  0021D0  BE37               	btfsc	_outPipes+3,7,c	;volatile
 14877                           
 14878                           ;usb_device.c: 2675: }
 14879                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 14880                           
 14881                           ;usb_device.c: 2673: {
 14882                           ;usb_device.c: 2674: outPipes[0].pFunc();
 14883  0021D2  9E37               	bcf	_outPipes+3,7,c	;volatile
 14884                           
 14885                           ;usb_device.c: 2677: }
 14886                           ;usb_device.c: 2679: controlTransferState = 0;
 14887  0021D4  0E00               	movlw	0
 14888  0021D6  6E59               	movwf	_controlTransferState,c	;volatile
 14889  0021D8  0012               	return	
 14890  0021DA                     __end_of_USBCtrlTrfInHandler:
 14891                           	opt stack 0
 14892                           pclatu	equ	0xFFB
 14893                           pclath	equ	0xFFA
 14894                           tblptru	equ	0xFF8
 14895                           tblptrh	equ	0xFF7
 14896                           tblptrl	equ	0xFF6
 14897                           tablat	equ	0xFF5
 14898                           prodh	equ	0xFF4
 14899                           prodl	equ	0xFF3
 14900                           intcon	equ	0xFF2
 14901                           indf0	equ	0xFEF
 14902                           postinc0	equ	0xFEE
 14903                           fsr0h	equ	0xFEA
 14904                           fsr0l	equ	0xFE9
 14905                           wreg	equ	0xFE8
 14906                           indf1	equ	0xFE7
 14907                           postdec1	equ	0xFE5
 14908                           fsr1h	equ	0xFE2
 14909                           fsr1l	equ	0xFE1
 14910                           indf2	equ	0xFDF
 14911                           postinc2	equ	0xFDE
 14912                           postdec2	equ	0xFDD
 14913                           plusw2	equ	0xFDB
 14914                           fsr2h	equ	0xFDA
 14915                           fsr2l	equ	0xFD9
 14916                           status	equ	0xFD8
 14917                           
 14918 ;; *************** function _USBCtrlTrfTxService *****************
 14919 ;; Defined at:
 14920 ;;		line 1789 in file "../../../../../../framework/usb/src/usb_device.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;		None
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;  byteToSend      1    0[COMRAM] unsigned char 
 14925 ;; Return value:  Size  Location     Type
 14926 ;;		None               void
 14927 ;; Registers used:
 14928 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14934 ;;      Params:         0       0       0       0       0       0       0       0       0
 14935 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14937 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14938 ;;Total ram usage:        1 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; This function calls:
 14941 ;;		Nothing
 14942 ;; This function is called by:
 14943 ;;		_USBCtrlEPAllowDataStage
 14944 ;;		_USBCtrlTrfInHandler
 14945 ;; This function uses a non-reentrant model
 14946 ;;
 14947                           
 14948                           	psect	text78
 14949  001EDA                     __ptext78:
 14950                           	opt stack 0
 14951  001EDA                     _USBCtrlTrfTxService:
 14952                           	opt stack 18
 14953                           
 14954                           ;usb_device.c: 1791: uint8_t byteToSend;
 14955                           ;usb_device.c: 1795: byteToSend = 8;
 14956                           
 14957                           ;incstack = 0
 14958  001EDA  0E08               	movlw	8
 14959  001EDC  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 14960                           
 14961                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 14962  001EDE  5041               	movf	_inPipes+5,w,c	;volatile
 14963  001EE0  E110               	bnz	i2l4315
 14964  001EE2  0E08               	movlw	8
 14965  001EE4  5C40               	subwf	_inPipes+4,w,c	;volatile
 14966  001EE6  B0D8               	btfsc	status,0,c
 14967  001EE8  D00C               	goto	i2l4315
 14968                           
 14969                           ;usb_device.c: 1797: {
 14970                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 14971  001EEA  C040  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 14972                           
 14973                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 14974  001EEE  505B               	movf	_shortPacketStatus,w,c	;volatile
 14975  001EF0  A4D8               	btfss	status,2,c
 14976  001EF2  D002               	goto	i2l4311
 14977                           
 14978                           ;usb_device.c: 1806: {
 14979                           ;usb_device.c: 1807: shortPacketStatus = 1;
 14980  001EF4  0E01               	movlw	1
 14981  001EF6  D004               	goto	L15
 14982  001EF8                     i2l4311:
 14983                           
 14984                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 14985  001EF8  045B               	decf	_shortPacketStatus,w,c	;volatile
 14986  001EFA  A4D8               	btfss	status,2,c
 14987  001EFC  D002               	goto	i2l4315
 14988                           
 14989                           ;usb_device.c: 1810: {
 14990                           ;usb_device.c: 1811: shortPacketStatus = 2;
 14991  001EFE  0E02               	movlw	2
 14992  001F00                     L15:
 14993  001F00  6E5B               	movwf	_shortPacketStatus,c	;volatile
 14994  001F02                     i2l4315:
 14995                           
 14996                           ;usb_device.c: 1812: }
 14997                           ;usb_device.c: 1813: }
 14998                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 14999  001F02  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 15000  001F04  5E40               	subwf	_inPipes+4,f,c	;volatile
 15001  001F06  0E00               	movlw	0
 15002  001F08  5A41               	subwfb	_inPipes+5,f,c	;volatile
 15003                           
 15004                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 15005  001F0A  EE20 F001          	lfsr	2,1
 15006  001F0E  5042               	movf	_pBDTEntryIn,w,c
 15007  001F10  26D9               	addwf	fsr2l,f,c
 15008  001F12  5043               	movf	_pBDTEntryIn+1,w,c
 15009  001F14  22DA               	addwfc	fsr2h,f,c
 15010  001F16  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 15011                           
 15012                           ;usb_device.c: 1826: pDst = (volatile uint8_t*)CtrlTrfData;
 15013  001F1A  0E28               	movlw	40
 15014  001F1C  0100               	movlb	0	; () banked
 15015  001F1E  6FF1               	movwf	_pDst& (0+255),b
 15016  001F20  0E04               	movlw	4
 15017  001F22  0100               	movlb	0	; () banked
 15018  001F24  6FF2               	movwf	(_pDst+1)& (0+255),b
 15019                           
 15020                           ; BSR set to: 0
 15021                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 15022  001F26  A03F               	btfss	_inPipes+3,0,c	;volatile
 15023  001F28  D01C               	goto	i2l4333
 15024  001F2A  D03A               	goto	i2l4343
 15025  001F2C                     i2l4325:
 15026                           
 15027                           ; BSR set to: 0
 15028                           ;usb_device.c: 1830: {
 15029                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 15030  001F2C  C03C  FFF6         	movff	_inPipes,tblptrl	;volatile
 15031  001F30  C03D  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 15032  001F34  6AF8               	clrf	tblptru,c
 15033  001F36  C0F1  FFD9         	movff	_pDst,fsr2l
 15034  001F3A  C0F2  FFDA         	movff	_pDst+1,fsr2h
 15035  001F3E  0E07               	movlw	(high __ramtop+-1)
 15036  001F40  64F7               	cpfsgt	tblptrh,c
 15037  001F42  D003               	bra	i2u340_47
 15038  001F44  0008               	tblrd		*
 15039  001F46  50F5               	movf	tablat,w,c
 15040  001F48  D005               	bra	i2u340_40
 15041  001F4A                     i2u340_47:
 15042  001F4A  CFF6 FFE9          	movff	tblptrl,fsr0l
 15043  001F4E  CFF7 FFEA          	movff	tblptrh,fsr0h
 15044  001F52  50EF               	movf	indf0,w,c
 15045  001F54                     i2u340_40:
 15046  001F54  6EDF               	movwf	indf2,c
 15047  001F56  4A3C               	infsnz	_inPipes,f,c	;volatile
 15048  001F58  2A3D               	incf	_inPipes+1,f,c	;volatile
 15049  001F5A  0100               	movlb	0	; () banked
 15050  001F5C  4BF1               	infsnz	_pDst& (0+255),f,b
 15051  001F5E  2BF2               	incf	(_pDst+1)& (0+255),f,b
 15052                           
 15053                           ; BSR set to: 0
 15054                           ;usb_device.c: 1832: byteToSend--;
 15055  001F60  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 15056  001F62                     i2l4333:
 15057                           
 15058                           ; BSR set to: 0
 15059  001F62  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 15060  001F64  B4D8               	btfsc	status,2,c
 15061  001F66  0012               	return	
 15062  001F68  D7E1               	goto	i2l4325
 15063  001F6A                     i2l4335:
 15064                           
 15065                           ; BSR set to: 0
 15066                           ;usb_device.c: 1838: {
 15067                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 15068  001F6A  C03C  FFF6         	movff	_inPipes,tblptrl	;volatile
 15069  001F6E  C03D  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 15070  001F72  6AF8               	clrf	tblptru,c
 15071  001F74  C0F1  FFD9         	movff	_pDst,fsr2l
 15072  001F78  C0F2  FFDA         	movff	_pDst+1,fsr2h
 15073  001F7C  0E07               	movlw	(high __ramtop+-1)
 15074  001F7E  64F7               	cpfsgt	tblptrh,c
 15075  001F80  D003               	bra	i2u342_47
 15076  001F82  0008               	tblrd		*
 15077  001F84  50F5               	movf	tablat,w,c
 15078  001F86  D005               	bra	i2u342_40
 15079  001F88                     i2u342_47:
 15080  001F88  CFF6 FFE9          	movff	tblptrl,fsr0l
 15081  001F8C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15082  001F90  50EF               	movf	indf0,w,c
 15083  001F92                     i2u342_40:
 15084  001F92  6EDF               	movwf	indf2,c
 15085  001F94  4A3C               	infsnz	_inPipes,f,c	;volatile
 15086  001F96  2A3D               	incf	_inPipes+1,f,c	;volatile
 15087  001F98  0100               	movlb	0	; () banked
 15088  001F9A  4BF1               	infsnz	_pDst& (0+255),f,b
 15089  001F9C  2BF2               	incf	(_pDst+1)& (0+255),f,b
 15090                           
 15091                           ; BSR set to: 0
 15092                           ;usb_device.c: 1840: byteToSend--;
 15093  001F9E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 15094  001FA0                     i2l4343:
 15095                           
 15096                           ; BSR set to: 0
 15097  001FA0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 15098  001FA2  B4D8               	btfsc	status,2,c
 15099  001FA4  0012               	return	
 15100  001FA6  D7E1               	goto	i2l4335
 15101  001FA8                     __end_of_USBCtrlTrfTxService:
 15102                           	opt stack 0
 15103                           pclatu	equ	0xFFB
 15104                           pclath	equ	0xFFA
 15105                           tblptru	equ	0xFF8
 15106                           tblptrh	equ	0xFF7
 15107                           tblptrl	equ	0xFF6
 15108                           tablat	equ	0xFF5
 15109                           prodh	equ	0xFF4
 15110                           prodl	equ	0xFF3
 15111                           intcon	equ	0xFF2
 15112                           indf0	equ	0xFEF
 15113                           postinc0	equ	0xFEE
 15114                           fsr0h	equ	0xFEA
 15115                           fsr0l	equ	0xFE9
 15116                           wreg	equ	0xFE8
 15117                           indf1	equ	0xFE7
 15118                           postdec1	equ	0xFE5
 15119                           fsr1h	equ	0xFE2
 15120                           fsr1l	equ	0xFE1
 15121                           indf2	equ	0xFDF
 15122                           postinc2	equ	0xFDE
 15123                           postdec2	equ	0xFDD
 15124                           plusw2	equ	0xFDB
 15125                           fsr2h	equ	0xFDA
 15126                           fsr2l	equ	0xFD9
 15127                           status	equ	0xFD8
 15128                           pclatu	equ	0xFFB
 15129                           pclath	equ	0xFFA
 15130                           tblptru	equ	0xFF8
 15131                           tblptrh	equ	0xFF7
 15132                           tblptrl	equ	0xFF6
 15133                           tablat	equ	0xFF5
 15134                           prodh	equ	0xFF4
 15135                           prodl	equ	0xFF3
 15136                           intcon	equ	0xFF2
 15137                           indf0	equ	0xFEF
 15138                           postinc0	equ	0xFEE
 15139                           fsr0h	equ	0xFEA
 15140                           fsr0l	equ	0xFE9
 15141                           wreg	equ	0xFE8
 15142                           indf1	equ	0xFE7
 15143                           postdec1	equ	0xFE5
 15144                           fsr1h	equ	0xFE2
 15145                           fsr1l	equ	0xFE1
 15146                           indf2	equ	0xFDF
 15147                           postinc2	equ	0xFDE
 15148                           postdec2	equ	0xFDD
 15149                           plusw2	equ	0xFDB
 15150                           fsr2h	equ	0xFDA
 15151                           fsr2l	equ	0xFD9
 15152                           status	equ	0xFD8
 15153                           
 15154                           	psect	rparam
 15155  0000                     pclatu	equ	0xFFB
 15156                           pclath	equ	0xFFA
 15157                           tblptru	equ	0xFF8
 15158                           tblptrh	equ	0xFF7
 15159                           tblptrl	equ	0xFF6
 15160                           tablat	equ	0xFF5
 15161                           prodh	equ	0xFF4
 15162                           prodl	equ	0xFF3
 15163                           intcon	equ	0xFF2
 15164                           indf0	equ	0xFEF
 15165                           postinc0	equ	0xFEE
 15166                           fsr0h	equ	0xFEA
 15167                           fsr0l	equ	0xFE9
 15168                           wreg	equ	0xFE8
 15169                           indf1	equ	0xFE7
 15170                           postdec1	equ	0xFE5
 15171                           fsr1h	equ	0xFE2
 15172                           fsr1l	equ	0xFE1
 15173                           indf2	equ	0xFDF
 15174                           postinc2	equ	0xFDE
 15175                           postdec2	equ	0xFDD
 15176                           plusw2	equ	0xFDB
 15177                           fsr2h	equ	0xFDA
 15178                           fsr2l	equ	0xFD9
 15179                           status	equ	0xFD8
 15180                           
 15181                           	psect	temp
 15182  00005F                     btemp:
 15183                           	opt stack 0
 15184  00005F                     	ds	1
 15185  0000                     int$flags	set	btemp
 15186                           pclatu	equ	0xFFB
 15187                           pclath	equ	0xFFA
 15188                           tblptru	equ	0xFF8
 15189                           tblptrh	equ	0xFF7
 15190                           tblptrl	equ	0xFF6
 15191                           tablat	equ	0xFF5
 15192                           prodh	equ	0xFF4
 15193                           prodl	equ	0xFF3
 15194                           intcon	equ	0xFF2
 15195                           indf0	equ	0xFEF
 15196                           postinc0	equ	0xFEE
 15197                           fsr0h	equ	0xFEA
 15198                           fsr0l	equ	0xFE9
 15199                           wreg	equ	0xFE8
 15200                           indf1	equ	0xFE7
 15201                           postdec1	equ	0xFE5
 15202                           fsr1h	equ	0xFE2
 15203                           fsr1l	equ	0xFE1
 15204                           indf2	equ	0xFDF
 15205                           postinc2	equ	0xFDE
 15206                           postdec2	equ	0xFDD
 15207                           plusw2	equ	0xFDB
 15208                           fsr2h	equ	0xFDA
 15209                           fsr2l	equ	0xFD9
 15210                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    277
    Data        29
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      94
    BANK0           160    101     158
    BANK1           256      0      27
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           208      0       0
    BANK5           253      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMll[32]), NULL(NULL[0]), 

    x	PTR int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMll[32]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMll[32]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMlh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMlh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), CtrlTrfData(BIGRAMlh[8]), SetupPkt(BIGRAMlh[8]), mouseReport(BIGRAMll[3]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), CtrlTrfData(BIGRAMlh[8]), SetupPkt(BIGRAMlh[8]), mouseReport(BIGRAMll[3]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMlh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), NULL(NULL[0]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMlh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 3
		 -> mouseReport(BIGRAMll[3]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), NULL(NULL[0]), 

    S1793$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S1783$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S1783$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1759$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1759$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1759$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1759$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMll[32]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 34
		 -> configDescriptor1(CODE[34]), 

    LCDstring@str	PTR unsigned char  size(2) Largest target is 4
		 -> az(BANK1[4]), ay(BANK1[4]), ax(BANK1[4]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), NULL(NULL[0]), 

    S706$handle	PTR void  size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), NULL(NULL[0]), 

    mouse.inputReport.handle	PTR void  size(2) Largest target is 32
		 -> BDT(BIGRAMll[32]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_USBDeviceInit
    _main->___awtoft
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _MPU6050_ReadAccZ->_WriteI2C
    _MPU6050_ReadAccY->_WriteI2C
    _MPU6050_ReadAccX->_WriteI2C
    _MPU6050_Init->_WriteI2C
    _WriteI2C->_IdleI2C
    _LCDstring->_LCDdata
    _LCDinit->_LCDcmd
    _LCDcmd->_LCDnibble
    _LCDdouble->___awtoft
    _pow->___ftge
    _pow->___lltoft
    _log->___awtoft
    _exp->___awtoft
    _exp->___ftge
    _floor->___ftge
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftsub->___awtoft
    ___ftadd->___awtoft
    ___ftneg->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _LCDdata->_LCDnibble
    _APP_DeviceMouseTasks->_BUTTON_IsPressed

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    i2_SYSTEM_Initialize->i2_BUTTON_Enable
    i2_SYSTEM_Initialize->i2_LED_Enable
    _USBCheckHIDRequest->_APP_DeviceMouseIdleRateCallback
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _APP_DeviceMouseSOFHandler->_USBTransferOnePacket
    _APP_DeviceMouseInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_LCDdouble
    _LCDdouble->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftdiv
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___ftmul
    ___ftdiv->___awtoft

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0  126148
                                             96 BANK0      5     5      0
               _APP_DeviceMouseTasks
                             _LCDcmd
                            _LCDdata
                          _LCDdouble
                            _LCDinit
                          _LCDstring
                       _MPU6050_Init
                   _MPU6050_ReadAccX
                   _MPU6050_ReadAccY
                   _MPU6050_ReadAccZ
                            _OpenI2C
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                           ___awtoft
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                             50 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                             42 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                             43 COMRAM     1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                             42 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                             42 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              2     1      1     133
                                             42 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _MPU6050_ReadAccZ                                    12    10      2      94
                                             44 COMRAM     4     2      2
                                              0 BANK0      8     8      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _MPU6050_ReadAccY                                    12    10      2      94
                                             44 COMRAM     4     2      2
                                              0 BANK0      8     8      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _MPU6050_ReadAccX                                    12    10      2      94
                                             44 COMRAM     4     2      2
                                              0 BANK0      8     8      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         0     0      0      22
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             1     1      0      22
                                             43 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (3) _IdleI2C                                              1     1      0       0
                                             42 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDstring                                            4     2      2     423
                                             46 COMRAM     4     2      2
                            _LCDdata
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0      88
                                             45 COMRAM     1     1      0
                             _LCDcmd
                          _LCDnibble
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0      66
                                             44 COMRAM     1     1      0
                          _LCDnibble
 ---------------------------------------------------------------------------------
 (1) _LCDdouble                                           21    18      3  113814
                                             78 BANK0     18    15      3
                            _LCDdata
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   93820
                                             61 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   33062
                                             45 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   49672
                                             52 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     426
                                             45 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3   10609
                                             43 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     580
                                             42 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     608
                                             18 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     848
                                             42 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    3200
                                             33 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7   17693
                                             33 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    6565
                                             42 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    5383
                                              3 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    5430
                                             33 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5033
                                             21 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     401
                                             18 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3761
                                              3 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    4043
                                             50 COMRAM     1     1      0
                                              0 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    3131
                                             50 COMRAM     1     1      0
                                              0 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2973
                                             42 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _LCDdata                                              2     2      0      66
                                             44 COMRAM     2     2      0
                          _LCDnibble
 ---------------------------------------------------------------------------------
 (3) _LCDnibble                                            2     2      0      22
                                             42 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMouseTasks                                 7     1      6     422
                                             43 COMRAM     7     1      6
                   _BUTTON_IsPressed
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      22
                                             42 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _SYS_InterruptHigh                                   14    14      0   31691
                                             28 COMRAM    14    14      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (8) _USBDeviceTasks                                       1     1      0   31691
                                             27 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (9) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) _USBWakeFromSuspend                                   0     0      0    4200
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBSuspend                                           0     0      0    4200
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPService                                     1     1      0   18435
                                             26 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (10) _memcpy                                             10     4      6     387
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfSetupHandler                              0     0      0   17819
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCheckStdRequest                                  0     0      0   13527
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStdSetCfgHandler                                 1     1      0    4698
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (10) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (12) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (12) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _USBStdFeatureReqHandler                             6     6      0    4583
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    4200
                                             12 COMRAM     8     2      6
          _APP_DeviceMouseInitialize
          _APP_DeviceMouseSOFHandler
             _APP_LEDUpdateUSBStatus
                 _USBCheckHIDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (10) i2_SYSTEM_Initialize                                 1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_BUTTON_Enable
                       i2_LED_Enable
 ---------------------------------------------------------------------------------
 (11) i2_LED_Enable                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_BUTTON_Enable                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _USBCheckHIDRequest                                  0     0      0     155
    _APP_DeviceMouseIdleRateCallback
 ---------------------------------------------------------------------------------
 (11) _APP_DeviceMouseIdleRateCallback                     4     3      1     155
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (10) _APP_LEDUpdateUSBStatus                              0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (11) _LED_On                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_Off                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _APP_DeviceMouseSOFHandler                           0     0      0     599
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (11) _USBTransferOnePacket                                7     3      4     599
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (10) _APP_DeviceMouseInitialize                           0     0      0     644
                  _USBEnableEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBEnableEndpoint                                   4     3      1     644
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (12) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceMouseTasks
     _BUTTON_IsPressed
   _LCDcmd
     _LCDnibble
   _LCDdata
     _LCDnibble
   _LCDdouble
     _LCDdata
       _LCDnibble
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
   _LCDinit
     _LCDcmd
       _LCDnibble
     _LCDnibble
   _LCDstring
     _LCDdata
       _LCDnibble
   _MPU6050_Init
     _IdleI2C
     _WriteI2C
       _IdleI2C
   _MPU6050_ReadAccX
     _IdleI2C
     _ReadI2C
     _WriteI2C
       _IdleI2C
   _MPU6050_ReadAccY
     _IdleI2C
     _ReadI2C
     _WriteI2C
       _IdleI2C
   _MPU6050_ReadAccZ
     _IdleI2C
     _ReadI2C
     _WriteI2C
       _IdleI2C
   _OpenI2C
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceMouseInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
               _APP_DeviceMouseSOFHandler
                 _USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckHIDRequest
                 _APP_DeviceMouseIdleRateCallback
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceMouseInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
               _APP_DeviceMouseSOFHandler
                 _USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckHIDRequest
                 _APP_DeviceMouseIdleRateCallback
               i2_SYSTEM_Initialize
                 i2_BUTTON_Enable
                 i2_LED_Enable
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceMouseInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
             _APP_DeviceMouseSOFHandler
               _USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _USBCheckHIDRequest
               _APP_DeviceMouseIdleRateCallback
             i2_SYSTEM_Initialize
               i2_BUTTON_Enable
               i2_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceMouseInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
           _APP_DeviceMouseSOFHandler
             _USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _USBCheckHIDRequest
             _APP_DeviceMouseIdleRateCallback
           i2_SYSTEM_Initialize
             i2_BUTTON_Enable
             i2_LED_Enable
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceMouseInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
         _APP_DeviceMouseSOFHandler
           _USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckHIDRequest
           _APP_DeviceMouseIdleRateCallback
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceMouseInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
         _APP_DeviceMouseSOFHandler
           _USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckHIDRequest
           _APP_DeviceMouseIdleRateCallback
         i2_SYSTEM_Initialize
           i2_BUTTON_Enable
           i2_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceMouseInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
       _APP_DeviceMouseSOFHandler
         _USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _USBCheckHIDRequest
         _APP_DeviceMouseIdleRateCallback
       i2_SYSTEM_Initialize
         i2_BUTTON_Enable
         i2_LED_Enable
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           3FF      0       0      23        0.0%
BIGRAMh            2FD      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      1B       7       10.5%
BITBANK5            FD      0       0      14        0.0%
BANK5               FD      0       0      15        0.0%
BIGRAMlh            D0      0       0      22        0.0%
BITBANK4            D0      0       0      12        0.0%
BANK4               D0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      5E       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     117      18        0.0%
DATA                 0      0     117       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 20 21:24:56 2016

                            ___altoft@exp 0089                                _USB_SD_Ptr 7EE9  
                                       _x 00F3                               _SSPSTATbits 000FC7  
                           ___altoft@sign 008A                                        l50 3300  
                                      l49 32FE                                        l89 2CB2  
                                      l98 2CD8                               ?_LED_Enable 0001  
                             __CFG_BOR$ON 000000                                        _ax 010C  
                                      _ay 0110                                        _az 0114  
                                      _gx 0100                                        _gy 0104  
                                      _gz 0108                             _USBDeviceInit 1064  
                     ___wmul@multiplicand 002D                               __CFG_BORV$3 000000  
                      _USBCheckHIDRequest 1A8A                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              ___ftadd@exp1 0080  
                            ___ftadd@exp2 007F      USER_USB_CALLBACK_EVENT_HANDLER@event 000D  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F                              ___ftadd@sign 007E  
                                     l301 21DC                                       l310 225E  
                                     l232 2ACC                                       l304 220E  
                                     l241 2B36                                       l313 2264  
                                     l410 076C                                       l235 2AFE  
                                     l307 2240               __end_of_USBStdGetDscHandler 167C  
                                     l238 2B04                                       l271 23A8  
                                     l265 2344                                       l274 23C6  
                                     l283 2290                                       l268 2376  
                                     l292 2312                                       l277 23CC  
                                     l613 2F1E                                       l286 22C2  
                                     l295 2318                                       l615 2F22  
                                     l616 2F26                                       l553 2EE6  
                                     l289 22F4                                       l561 328E  
                                     l617 2F2A                                       l555 2EF2  
                                     l563 3292                                       l820 30B4  
                                     l819 30B6                                       _BDT 000400  
                                     l759 10C2                              __CFG_CPB$OFF 000000  
                                     _UIE 000F69                                       _UIR 000F68  
                  _APP_LEDUpdateUSBStatus 29D4                                       _acx 00E3  
                                     _acy 00E5                                       _acz 00E7  
                                     _exp 04FE                                       _log 0DCC  
                              _USBSuspend 30F0                                       _pow 0AC2  
                    USBStdSetCfgHandler@i 0015                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 1430  
                     ?_USBCheckHIDRequest 0001                            _USBDeviceState 0055  
      __size_of_APP_DeviceMouseInitialize 002E                             _BUTTON_Enable 328A  
              ?_APP_DeviceMouseInitialize 0001                     ??_USBCtrlTrfRxService 0001  
                __size_ofi2_USBDeviceInit 0144                  USBEnableEndpoint@options 0009  
                            __CFG_LVP$OFF 000000                           __end_of_LED_Off 3028  
                            ___ftdiv@cntr 006C                           __end_of_LCDdata 321C  
                            ___ftdiv@sign 0071                              __CFG_WDT$OFF 000000  
                                    l1302 02FE                                      l1306 0338  
                                    l1308 0360                                      l1317 0436  
                                    l1501 0B02                                      l1326 0460  
                                    l1337 102E                                      l1506 0C60  
                                    l1279 2484                                      l1359 30E2  
              USBConfigureEndpoint@handle 0007                                      l5015 0FEC  
                                    l1664 05D4                                      l5033 2DBE  
                                    l5113 1744                                      l1665 071A  
                                    l5121 3336                                      l1675 198A  
                                    l5045 2E82                                      l5109 1734  
                                    l5231 2A68                                      l5071 190A  
                                    l5063 18D8                                      l4361 2452  
                                    l4353 2414                                      l5081 1C36  
                                    l5321 2C9C                                      l4363 2470  
                                    l4355 241E                                      l5067 18EC  
                                    l5243 0DF0                                      l4365 247A  
                                    l4357 243C                                      l4349 2406  
                                    l5229 2A5A                                      l5079 1BB4  
                                    l5271 0560                                      l5423 0BB2  
                                    l5415 0B3A                                      l5335 2CC0  
                                    l6063 0764                                      l4705 048A  
                                    l4641 257E                                      l5097 1706  
                                    l5089 16A0                                      l5265 0522  
                                    l5249 0E1E                                      l5409 0B16  
                         __end_of_LCDinit 2BAE                                      l5353 2CE8  
                                    l5361 2F2E                                      l5441 3156  
                                    l5371 2EFE                                      l4715 04D8  
                                    l4731 0CE2                                      l4643 258E  
                                    l5427 0BD8                                      l5339 2CC4  
                                    l4725 0CA8                                      l4821 12B4  
                                    l4813 1288                                      l5277 059E  
                                    l5445 3166                                      l4663 0346  
                                    l4823 12BE                                      l5367 3296  
                                    l5377 2F02                                      l4657 030C  
                                    l4745 0D30                                      l4809 1274  
                                    l4691 03EE                                      l4755 0D6E  
                                    l4771 27DE                                      l4827 12DA  
                                    l4819 12A4                                      l5299 06EA  
                                    ?_exp 0094                                      l4685 03C6  
                                    l4669 0356                                      l4749 0D4E  
                                    l4781 283A                                      ?_log 008D  
                                    l4687 03D4                                      l4679 0398  
                                    l4759 0D8C                                      l4775 280E  
                                    l4791 11E2                                      l4839 2746  
                                    l5591 3246                                      l4697 041C  
                                    l4689 03E2                                      l5913 3032  
                                    l4699 042A                                      l5595 3254  
                                    l5843 10A6                                      l5941 09E6  
                                    l5925 0946                                      l5917 3048  
                                    l5927 0950                                      l5871 1104  
                                    l5855 10CC                                      l5839 109E  
                                    l5945 09FC                                      l4995 0F8C  
                                    l5955 0AB8                                      l5867 10FC  
                                    l4989 0F52                                      l5877 1160  
                                    ?_pow 009D                     ??i2_SYSTEM_Initialize 0002  
                                    _LATD 000F8C                                      u5010 2EFA  
                                    u4141 0C84                                      u4231 11BE  
                                    u4320 276E                                      u4161 0CBE  
                                    u4250 1208                                      u5070 0B94  
                                    u4255 11FE                                      u4328 2770  
                                    u4600 16D2                                      u6107 318A  
                                    u6117 319A                                      u4461 0F2E  
                                    u4560 18FC                                      u4608 16D6  
                                    u4481 0F68                                      u6057 2B4E  
                                    u4810 05A8                                      u3931 02AC  
                                    u6067 2B64                                      u4820 05AA  
                                    u3941 02CA                                      u6077 2B7A  
                                    u5470 2D88                                      u6087 2B90  
                                    u5480 2D8A                                      u6097 3200  
                   ??_USBCtrlTrfTxService 0001                                      u4990 2EEE  
                                    _UCFG 000F6F                                      _UEP0 000F70  
                                    _UEP1 000F71                                      _UEIE 000F6B  
                                    _UEIR 000F6A                                      _UCON 000F6D  
                                    _accx 00DD                                      _accy 00DF  
                                    _accz 00E1    USBStdFeatureReqHandler@current_ep_data 0018  
                                    _pDst 00F1                                      _main 0728  
                            ___ftpack@arg 002B                              ___ftpack@exp 002E  
                                    _sign 00FC                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 3090                                      btemp 005F  
                                    exp@x 0094                                      log@x 008D  
                                    pclat 000FFA                                      pow@x 009D  
                                    pow@y 00A0                                      prodh 000FF4  
                                    prodl 000FF3                                      start 0016  
                __size_ofi2_BUTTON_Enable 0022                             __CFG_IESO$OFF 000000  
                         __end_of_IdleI2C 3348                      ??_USBCheckHIDRequest 0005  
              __end_of_USBCheckStdRequest 1E06                    ??_USBCtrlTrfOutHandler 0003  
                            ___ftmul@cntr 0070                              ___param_bank 000010  
                            ___ftmul@sign 0071                 ??_USBStdFeatureReqHandler 0015  
                      __size_of_LCDdouble 01C0                           __end_of_ReadI2C 3308  
                      __size_of_LCDnibble 002C                           __end_of_OpenI2C 32EC  
                ??_USBStdGetStatusHandler 0001                              ___fttol@exp1 0080  
                                   ??_exp 0034                                     ??_log 0034  
                            ___fttol@lval 007C                                     ??_pow 0034  
                          ?_USBDeviceInit 0001                        __size_of_LCDstring 0034  
                           __CFG_PLLDIV$5 000000                                     ?_main 0001  
                         __end_of___ftadd 04FE         __size_of_USBCtrlEPServiceComplete 00F2  
                         __end_of___ftdiv 1064                           __end_of___ftneg 30F0  
                         __end_of___ftmul 0DCC                    __end_of_USBDeviceTasks 155C  
                         __end_of___ftsub 2DE8                           __end_of___fttol 12EC  
               ?_USBCtrlEPServiceComplete 0001                                     i2l613 2F54  
                                   i2l615 2F58                                     i2l616 2F5C  
                                   i2l561 32B0                                     i2l617 2F60  
                                   i2l563 32B4                                     i2l573 2FC0  
                                   i2l910 253E                                     i2l583 2FF6  
                                   i2l575 2FC4                                     i2l911 24C4  
                                   i2l576 2FC8                                     i2l912 24C8  
                                   i2l920 2E26                                     i2l585 2FFA  
                                   i2l577 2FCC                                     i2l586 2FFE  
                                   i2l770 1458                                     i2l587 3002  
                                   i2l907 24B2                                     i2l844 1A10  
                                   i2l780 14E4                                     i2l781 1558  
                                   i2l782 14F4                                     i2l759 134A  
                                   _UADDR 000F6E                                     i2l955 21D0  
                                   i2l984 0042                                     i2l969 1D3C  
                                   i2l978 1D8A                             __CFG_USBDIV$2 000000  
                                   _TRISD 000F95                                     _USTAT 000F6C  
                           __CFG_PWRT$OFF 000000                             __CFG_WRT0$OFF 000000  
      __size_of_USBCtrlEPAllowStatusStage 00C2                             __CFG_WRT1$OFF 000000  
                            ___lltoft@exp 0033                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            ?_BUTTON_Enable 0001  
                          __CFG_EBTR1$OFF 000000           __end_of_USBCtrlEPAllowDataStage 268A  
                                   _sd000 7FFA                                     _sd001 7EF9  
                                   _sd002 7F5F                             __CFG_WRTB$OFF 000000  
          ?_USBIncrement1msInternalTimers 0001                             __CFG_WRTC$OFF 000000  
                          __CFG_EBTRB$OFF 000000                             ___awtoft@sign 0033  
                              i2memset@p1 0001                             ?_MPU6050_Init 0001  
                                   _floor 18A0                                     _ldexp 167C  
                                   _frexp 271E                                     _errno 00E9  
       __end_of_APP_DeviceMouseInitialize 314C                 __size_of_BUTTON_IsPressed 0038  
                         __end_of_xVector 7EF3                                     _gyrox 00EB  
                                   _gyroy 00ED                                     _gyroz 00EF  
                           ___ftpack@sign 002F                                     _mouse 00C5  
                         __end_of_yVector 7EF7                                     main@i 00C0  
                                   tablat 000FF5                                     pow@yi 00AA  
                     __size_of_LED_Enable 0036                                     plusw2 000FDB  
                                   status 000FD8                      MPU6050_ReadAccX@accx 0062  
                    MPU6050_ReadAccY@accy 0062                      MPU6050_ReadAccZ@accz 0062  
                        __end_ofi2_memset 31D0                    ??_APP_DeviceMouseTasks 0032  
                             exp@exponent 009A                               LCDdata@byte 002E  
                             ldexp@newexp 0090              __size_of_USBStdSetCfgHandler 00DC  
                          __CFG_MCLRE$OFF 000000                           __initialization 2C20  
                             log@exponent 0090               ??_APP_DeviceMouseSOFHandler 0008  
                            __end_of_main 0902                 __size_of_USBCtrlEPService 0090  
                                  ??_main 0034                             ___fttol@sign1 007B  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                             ?_USBSuspend 0001                                 ??_LED_Off 0001  
                               ??_LCDdata 002D                                 ??_LCDinit 002E  
                          ??_MPU6050_Init 002D                         __end_of_LCDdouble 0AC2  
                 __end_of_USBDeviceAttach 30C0                                    _ADCON0 000FC2  
                                  _ADCON2 000FC0                         __end_of_LCDnibble 31A4  
                                  ?_floor 008B                                    ?_ldexp 008D  
                                  ?_frexp 002B                          __end_of___altoft 25F0  
                        _MPU6050_ReadAccX 2342                          _MPU6050_ReadAccY 228E  
                        _MPU6050_ReadAccZ 21DA                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                          __end_of_WriteI2C 2CEC  
                        __end_of___awtoft 2EA6                          __end_of___ftpack 24A4  
                  SYSTEM_Initialize@state 002C                          __end_of___lltoft 2ACA  
                                  i2l1003 0204                               OpenI2C@slew 002B  
                                  i2l4111 32B8                                    _LED_On 2FBC  
                                  i2l4105 2FD0                                    i2l4043 26EC  
                                  i2l4203 2A44                                    i2l3251 2E24  
                                  i2l4053 2EB6                                    i2l4205 2A4E  
                                  i2l4117 2F64                                    i2l4311 1EF8  
                                  i2l5201 2156                                    i2l4057 2EC4  
                                  i2l4137 1E28                                    i2l4241 1AFA  
                                  i2l4225 1AC0                                    i2l4315 1F02  
                                  i2l4403 1FEE                                    i2l4163 1EA6  
                                  i2l4227 1AC6                                    i2l4219 1AAA  
                                  i2l4235 1AD8                         __end_of_LCDstring 305C  
                                  i2l4325 1F2C                                    i2l4333 1F62  
                                  i2l5213 2196                                    i2l4077 20AA  
                                  i2l4069 2080                                    i2l4157 1E7A  
                                  i2l4149 1E56                                    i2l4181 29F0  
                                  i2l4253 1B26                                    i2l4237 1AEA  
                                  i2l4501 1608                                    i2l4335 1F6A  
                                  i2l4343 1FA0                                    i2l4159 1E88  
                                  i2l4247 1B10                                    i2l4089 2106  
                                  i2l4169 1EBA                                    i2l4193 2A28  
                                  i2l4185 2A02                                    i2l4177 29E0  
                                  i2l4265 1B46                                    i2l4273 3278  
                                  i2l4281 295E                                    i2l4513 1664  
                                  i2l4433 2640                                    i2l5145 2E58  
                                  i2l5219 21B6                                    i2l4099 3006  
                                  i2l4259 1B3C                                    i2l4283 296A  
                                  i2l4291 2982                                    i2l4507 1658  
                                  i2l5139 2E3C                                    i2l4197 2A3A  
                                  i2l4189 2A18                                    i2l4269 326A  
                                  i2l4285 2976                                    i2l4277 2954  
                                  i2l4621 0264                                    i2l4605 01E4  
                                  i2l4509 165E                                    i2l4525 24E6  
                                  i2l4453 1C90                                    i2l4437 2658  
                                  i2l5501 28BE                                    i2l6151 29CE  
                                  i2l4287 297C                                    i2l4623 0270  
                                  i2l4615 0220                                    i2l4607 01F0  
                                  i2l4535 2526                                    i2l4383 31AE  
                                  i2l4463 1CC4                                    i2l5185 2D42  
                                  i2l5177 2CFA                                    i2l4553 003E  
                                  i2l4457 1C98                                    i2l4491 157E  
                                  i2l4387 31BE                                    i2l5523 132E  
                                  i2l6149 299A                                    i2l4573 00FA  
                                  i2l5199 2152                                    i2l4911 17C0  
                                  i2l4591 0184                                    i2l4575 00FC  
                                  i2l4567 00B6                                    i2l4487 156C  
                                  i2l4479 1D0A                                    i2l5455 3082  
                                  i2l5551 138C                                    i2l5535 1354  
                                  i2l5519 1326                                    i2l5615 1450  
                                  i2l5607 1444                                    i2l5457 3084  
                                  i2l5641 1498                                    _LCDcmd 3320  
                                  i2l4595 019E                                    i2l4579 0118  
                                  i2l4499 1602                                    i2l5547 1384  
                                  i2l5635 1474                                    i2l4933 1856  
                                  i2l4917 17E2                                    i2l4589 016A  
                                  i2l5557 13E8                                    i2l5653 14AC  
                                  i2l5629 146A                                    i2l4951 1D44  
                                  i2l4863 19BA                                    i2l4929 183C  
                                  i2l4953 1D4A                                    i2l5673 14EC  
                                  i2l4963 1D62                                    i2l4955 1D50  
                                  i2l4883 1A36                                    i2l5499 28B8  
                                  i2l5667 14DA                                    i2l5659 14B6  
                                  i2l4965 1D68                                    i2l4981 1DC2  
                                  i2l5693 1538                                    i2l4967 1D6E  
                                  i2l5695 1554                                    i2l5687 151A  
                                  i2l4977 1DA4                                 ??_IdleI2C 002B  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                       ??i2_USBDeviceInit 0009                                 ??_ReadI2C 002B  
                          __CFG_VREGEN$ON 000000                                 ??_OpenI2C 002C  
                       _shortPacketStatus 005B                            __CFG_XINST$OFF 000000  
                         USBDeviceTasks@i 001C               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 0002                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 0033                                    ___ftge 27AE  
                                  ___wmul 31D0                                 ??___ftadd 007B  
                          __CFG_STVREN$ON 000000                                 ??___ftdiv 0069  
                               ??___ftneg 0034                                 ??___ftmul 0069  
                               ??___ftsub 0034                                 ??___fttol 0076  
                       ??i2_BUTTON_Enable 0001                         _USBEnableEndpoint 2EA6  
         __size_of_USBStdGetStatusHandler 00AE                                    _memcpy 2E2A  
                           ?i2_LED_Enable 0001                                    _memset 314C  
                                  clear_0 2C2E                                    clear_1 2C3A  
                      ?_USBEnableEndpoint 0009                                    floor@i 008E  
                                  floor@x 008B                     ___ftmul@f3_as_product 006D  
           __size_of_USBTransferOnePacket 00BA                           ??_BUTTON_Enable 002B  
                            __mediumconst 7EE8                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
               _APP_DeviceMouseSOFHandler 1E06                       ??_USBEnableEndpoint 000A  
                             _CtrlTrfData 000428                     MPU6050_ReadAccX@accxh 0064  
                   MPU6050_ReadAccX@accxl 0066                     MPU6050_ReadAccY@accyh 0064  
                   MPU6050_ReadAccY@accyl 0066                      _controlTransferState 0059  
                   MPU6050_ReadAccZ@acczh 0064                     MPU6050_ReadAccZ@acczl 0066  
                        __end_ofexp@coeff 7FCD                         _SYSTEM_Initialize 3242  
                        __end_oflog@coeff 7FE8                                __accesstop 0060  
                 __end_of__initialization 2C80                                ___altoft@c 0081  
                   MPU6050_ReadAccX@write 0060                           __CFG_PBADEN$OFF 000000  
                   MPU6050_ReadAccY@write 0060                                ___ftadd@f1 0075  
                              ___ftadd@f2 0078                     MPU6050_ReadAccZ@write 0060  
                              ___ftge@ff1 002B                                ___ftge@ff2 002E  
                      ?_SYSTEM_Initialize 0001                              eval_poly@res 008A  
                           ___rparam_used 000001                                ___ftdiv@f1 0063  
                              ___ftdiv@f2 0066                                ___ftdiv@f3 006D  
                __size_of_USBStallHandler 0042                                ___ftneg@f1 0072  
                              ___awtoft@c 0060                       __size_of_USBSuspend 002E  
                              ___ftmul@f1 0063                                ___ftmul@f2 0066  
                              ___ftsub@f1 0081                                ___ftsub@f2 0084  
                              ___fttol@f1 0072                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 2EE2                             __end_of_sd000 7FFE  
                           __end_of_sd001 7F2D                             __end_of_sd002 7F8D  
                            __pidataBANK0 3348                              __pidataBANK1 3308  
                     ??_SYSTEM_Initialize 002C                                 LED_On@led 0001  
                              ___lltoft@c 0060          __size_of_USBCtrlEPAllowDataStage 009A  
                           __end_of_floor 1998                             __end_of_ldexp 1794  
                          ??i2_LED_Enable 0001                             __end_of_frexp 27AE  
                         _active_protocol 00F7                              ??_LED_Enable 002B  
           __size_of_USBConfigureEndpoint 0094               __end_of_USBCtrlTrfInHandler 21DA  
                 ?_APP_LEDUpdateUSBStatus 0001                                 ?i2_memset 0001  
                ??_USBCtrlTrfSetupHandler 001B                   _USBTicksSinceSuspendEnd 00F6  
             ??_APP_DeviceMouseInitialize 000D                                   ??_floor 0034  
                                 ??_ldexp 0092                                   ??_frexp 0030  
                        ?_USBDeviceAttach 0001                 __end_of_SYSTEM_Initialize 3266  
                        _BUTTON_IsPressed 2EE2                    _USBStdGetStatusHandler 24A4  
                              __pbssBANK0 00C5                                __pbssBANK1 0118  
                                 ?_LED_On 0001                                   ?_LCDcmd 0001  
                      __size_of_eval_poly 00E0                        __end_of_LED_Enable 2F50  
             __size_of_USBWakeFromSuspend 0034                               _pBDTEntryIn 0042  
        __end_of_USBCtrlEPServiceComplete 1A8A                      USBCtrlTrfRxService@i 0001  
                                 ?___ftge 002B                      __end_of_MPU6050_Init 2B3C  
                           LED_Enable@led 002B                                   ?___wmul 002B  
          __end_of_APP_LEDUpdateUSBStatus 2A54                                 ?___altoft 0081  
                                 ?_memcpy 0001                                   ?_memset 002B  
                              _device_dsc 7FE8                                 ?_WriteI2C 0001  
                               ?___awtoft 0060                                 ?___ftpack 002B  
                        _USBCtrlEPService 283E                                _ep_data_in 0048  
                               ?___lltoft 0060                            LCDdouble@digit 00BC  
             __end_of_USBCtrlTrfRxService 18A0                        _USBCheckStdRequest 1D2C  
                       _configDescriptor1 7F8D                            LCDdouble@zflag 00B7  
                                 _LED_Off 2FF2                                   _LCDdata 31F6  
             __end_ofi2_SYSTEM_Initialize 328A                                   _LCDinit 2B3C  
                              ??i2_memset 0007               __end_of_USBCtrlTrfTxService 1FA8  
                     _USBStdSetCfgHandler 1C50                                   _SSPCON1 000FC6  
                                 _SSPCON2 000FC5                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 0120                                   _UIEbits 000F69  
                                 _SSPSTAT 000FC7                                   _UIRbits 000F68  
                                 _IdleI2C 3336                           __size_of_LED_On 0036  
                         __size_of_LCDcmd 0016                            _LCDdouble$4050 00B9  
                          _LCDdouble$4051 00B1                            _LCDdouble$4052 00B4  
          APP_LEDUpdateUSBStatus@ledCount 0046                                   _ReadI2C 32EC  
                                 _OpenI2C 32CE                                   __Hparam 0000  
         ??_USBIncrement1msInternalTimers 0001                      ?_USBStdSetCfgHandler 0001  
             __size_of_USBCheckHIDRequest 00E6                                   __Lparam 0000  
                       __end_of_hid_rpt01 7F5F                __size_of_USBEnableEndpoint 003C  
               _APP_DeviceMouseInitialize 311E                      ??_USBCheckStdRequest 001B  
                         __size_of___ftge 0090             __size_of_USBCtrlTrfOutHandler 005C  
                                 ___ftadd 0296                                   ___ftdiv 0F18  
                __end_of_MPU6050_ReadAccX 23F6                  __end_of_MPU6050_ReadAccY 2342  
                __end_of_MPU6050_ReadAccZ 228E                                   ___ftneg 30C0  
                        ??_USBDeviceTasks 001C                           __size_of___wmul 0026  
                                 ___ftmul 0C6E                                   ___ftsub 2D9C  
                                 ___fttol 11A8                         ??_USBStallHandler 0001  
 __end_of_APP_DeviceMouseIdleRateCallback 2FBC  __size_of_APP_DeviceMouseIdleRateCallback 0036  
       ??_APP_DeviceMouseIdleRateCallback 0002          ?_APP_DeviceMouseIdleRateCallback 0001  
         _APP_DeviceMouseIdleRateCallback 2F86                                ??___altoft 0085  
                                 __pcinit 2C20                                ??_WriteI2C 002C  
                         __size_of_memcpy 0040                                ??___awtoft 0033  
                              ??___ftpack 0030                         __end_of_eval_poly 1C50  
                         __size_of_memset 002C                 __end_of_configDescriptor1 7FAF  
                                 __ramtop 0800                                ??___lltoft 0064  
                                 __ptext0 0728                                   __ptext1 1064  
                                 __ptext2 314C                                   __ptext3 3090  
                                 __ptext4 3242                                   __ptext5 2F1A  
                                 __ptext6 328A                                   __ptext7 32CE  
                                 __ptext8 21DA                                   __ptext9 228E  
                                 _inPipes 003C               _USBDeferOUTDataStagePackets 00F5  
                                 _gforcex 00D7                                   _gforcey 00DA  
                                 _gforcez 0118                              ??_USBSuspend 0015  
                            __size_of_exp 022A                              __size_of_log 014C  
                            __size_of_pow 01AC                                   _xVector 7EEF  
                                 _yVector 7EF3                           i2_USBDeviceInit 12EC  
                        i2USBDeviceInit@i 0009                        __end_of_USB_CD_Ptr 7EF9  
              __size_of_SYSTEM_Initialize 0024           __size_of_USBCtrlTrfSetupHandler 0084  
                          __pintcode_body 2BAE                      end_of_initialization 2C80  
                                 exp@sign 009C                      __end_ofi2_LED_Enable 2F86  
                      __end_of_USB_SD_Ptr 7EEF                                   memcpy@d 0007  
                                 memcpy@n 0005                                   memcpy@s 0009  
                               _LCDdouble 0902                       _pBDTEntryEP0OutNext 004E  
                               _LCDnibble 3178                                   memset@c 002D  
                                 memset@n 002F                                   memset@p 0031  
                           __Lmediumconst 7EE8                                   int_func 2BAE  
                         _USB1msTickCount 00CF                           i2_BUTTON_Enable 32AC  
                ?_USBStdFeatureReqHandler 0001                                 _LCDstring 3028  
                   ??_USBStdSetCfgHandler 0015                                   pow@sign 00A9  
           __size_of_APP_DeviceMouseTasks 0054                        __end_of_USBSuspend 311E  
                 _USBCtrlEPAllowDataStage 25F0                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 1998  
              _USBStatusStageEnabledFlag1 0056                _USBStatusStageEnabledFlag2 0057  
                      USBEnableEndpoint@p 000A                                 _PORTBbits 000F81  
                            LCDstring@str 002F                                 _TRISAbits 000F92  
                               _TRISBbits 000F93                                 _TRISDbits 000F95  
                      _BothEP0OutUOWNsSet 0050                 USBConfigureEndpoint@EPNum 0006  
              ?_USBCtrlEPAllowStatusStage 0001       USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                               _USTATcopy 005E                                ?_LCDdouble 00AE  
                              ?_LCDnibble 0001              __end_of_USBTransferOnePacket 2124  
                          __end_of_LED_On 2FF2                               ___ftdiv@exp 0070  
                          __end_of_LCDcmd 3336                     __size_of_MPU6050_Init 0072  
                              ?_LCDstring 002F   APP_DeviceMouseIdleRateCallback@idleRate 0001  
                             ___ftmul@exp 006C                    _USBCtrlTrfSetupHandler 28CE  
                __end_of_BUTTON_IsPressed 2F1A                     __end_of_USBDeviceInit 11A8  
                          __end_of___ftge 283E     __end_of_USBIncrement1msInternalTimers 3242  
  __size_of_USBIncrement1msInternalTimers 0026             _USBIncrement1msInternalTimers 321C  
                              LED_Off@led 0001                            __end_of___wmul 31F6  
                 __end_ofi2_USBDeviceInit 1430                                 i2memset@c 0003  
                               i2memset@n 0005                                 i2memset@p 0007  
                          __end_of_memcpy 2E6A                            __end_of_memset 3178  
                              floor@expon 0091   APP_DeviceMouseIdleRateCallback@reportId 0004  
                       _USBBusIsSuspended 0052                       start_initialization 2C20  
                 ?_USBStdGetStatusHandler 0001                                LCDcmd@byte 002D  
                              eval_poly@d 0084                                eval_poly@n 0086  
                              eval_poly@x 0081                  i2SYSTEM_Initialize@state 0002  
                   __end_of_BUTTON_Enable 32AC             USBCtrlTrfRxService@byteToRead 0002  
                              ldexp@value 008D                               __end_of_exp 0728  
                             __end_of_log 0F18                               __end_of_pow 0C6E  
                 __end_ofi2_BUTTON_Enable 32CE                         __size_ofi2_memset 002C  
                            _MPU6050_Init 2ACA              __end_of_USBConfigureEndpoint 271E  
                        WriteI2C@data_out 002C           __end_of_USBStdFeatureReqHandler 0296  
                                ??_LED_On 0001         __end_of_USBCtrlEPAllowStatusStage 206A  
                                ??_LCDcmd 002D                                frexp@value 002B  
                __end_of_USBCtrlEPService 28CE                                LCDdouble@a 00AE  
                              LCDdouble@i 00BE                 ??_USBCtrlEPAllowDataStage 0002  
                          USBDeviceInit@i 0033                    _pBDTEntryEP0OutCurrent 004C  
                 USBTransferOnePacket@dir 0001                   USBTransferOnePacket@len 0004  
                                ??___ftge 0031                                  ??___wmul 002F  
                     _USBStdGetDscHandler 155C                               __pdataBANK0 00F9  
                             __pdataBANK1 0100                          __CFG_LPT1OSC$OFF 000000  
                                ??_memcpy 0007                                  ??_memset 0031  
                  BUTTON_IsPressed@button 002B                                LCDstring@i 0031  
                       __size_of___altoft 009E                    _USBActiveConfiguration 005C  
          __end_of_USBStdGetStatusHandler 2552                         __size_of_WriteI2C 005E  
                       __size_of___awtoft 003C                         __size_of___ftpack 00AE  
                                ?_LED_Off 0001                                  ?_LCDdata 0001  
                       __size_of___lltoft 0076                               __pbssCOMRAM 0034  
                                ?_LCDinit 0001                             __pcstackBANK0 0060  
            __size_of_USBCtrlTrfInHandler 00B6                     __size_ofi2_LED_Enable 0036  
                    ?_USBStdGetDscHandler 0001                                  ?_IdleI2C 0001  
                             ??_LCDdouble 0034                __end_of_USBWakeFromSuspend 3090  
                             ??_LCDnibble 002B                           _USBStallHandler 2DE8  
                            _pBDTEntryOut 00D3                                  ?_ReadI2C 0001  
                             ??_LCDstring 0031                  __size_of_USBDeviceAttach 0030  
                                ?_OpenI2C 002B                                 _main$4049 00C2  
  APP_DeviceMouseTasks@currentButtonState 0032                     i2BUTTON_Enable@button 0001  
                               __pintcode 0008                             __pmediumconst 7EE8  
                                ?___ftadd 0075                                  ?___ftdiv 0063  
                                ?___ftneg 0072                                  ?___ftmul 0063  
                                ?___ftsub 0081                                  ?___fttol 0072  
                       ?_MPU6050_ReadAccX 002D                         ?_MPU6050_ReadAccY 002D  
                       ?_MPU6050_ReadAccZ 002D                                 _hid_rpt01 7F2D  
                               _idle_rate 00F8                              i2_LED_Enable 2F50  
                        ?i2_USBDeviceInit 0001                        ??_MPU6050_ReadAccX 002F  
                      ??_MPU6050_ReadAccY 002F                        ??_MPU6050_ReadAccZ 002F  
                    _USBTransferOnePacket 206A                                 _eval_poly 1B70  
            __end_of_USBCtrlTrfOutHandler 2D48                     ??_USBStdGetDscHandler 0001  
                             _ep_data_out 004A                          ?i2_BUTTON_Enable 0001  
                          __size_of_floor 00F8                            __size_of_ldexp 0118  
                          __size_of_frexp 0090              __size_of_USBCtrlTrfRxService 010C  
           USBConfigureEndpoint@direction 0001              __size_ofi2_SYSTEM_Initialize 0024  
            __size_of_USBCtrlTrfTxService 00CE                            ___wmul@product 002F  
                                _LATDbits 000F8C                __end_of_USBCheckHIDRequest 1B70  
              ??_USBCtrlEPServiceComplete 0002                                  _IPR2bits 000FA2  
                                _PIE2bits 000FA0                                  i2u340_40 1F54  
                                i2u340_47 1F4A                                  i2u342_40 1F92  
                                i2u342_47 1F88                                  i2u327_40 2A0E  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i2u364_40 15D0                                  i2u364_47 15C6  
                                i2u365_40 15FE                                  i2u365_47 15F4  
                                i2u367_40 164E                                  i2u367_47 1644  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _UEP0bits 000F70                _USBDeferINDataStagePackets 0053  
             __size_of_USBCheckStdRequest 00DA                                  _UCONbits 000F6D  
                    _USBConfigureEndpoint 268A                               _gforcescale 00F9  
        __size_of_USBStdFeatureReqHandler 027C                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                                _ADCON2bits 000FC0  
                       ___wmul@multiplier 002B                     ?_USBTransferOnePacket 0001  
                         i2LED_Enable@led 0001                         _SYS_InterruptHigh 0008  
                              ?_eval_poly 0081              __end_of_APP_DeviceMouseTasks 2D9C  
                            _RemoteWakeup 0051                                  i2_memset 31A4  
                        __size_of_LED_Off 0036                          __size_of_LCDdata 0026  
                      ?_SYS_InterruptHigh 0001                          __size_of_LCDinit 0072  
                 __end_of_USBStallHandler 2E2A                                 copy_data0 2C54  
                               copy_data1 2C74               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 1D2C                          OpenI2C@sync_mode 002C  
                     ??_SYS_InterruptHigh 001D                          __size_of_IdleI2C 0012  
                      __end_of_device_dsc 7FFA                                 frexp@eptr 002E  
                ??_APP_LEDUpdateUSBStatus 0002                   ?_USBCtrlTrfSetupHandler 0001  
                        __size_of_ReadI2C 001C                   USBStdGetStatusHandler@p 0002  
                                __Hrparam 0000                          __size_of_OpenI2C 001E  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0005  
                                _SetupPkt 000420                     ?_USBConfigureEndpoint 0001  
                       ??_USBDeviceAttach 002B                         ?_BUTTON_IsPressed 0001  
                        __size_of___ftadd 0268                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                                  ___altoft 2552  
                        __size_of___ftmul 015E                          __size_of___ftsub 004C  
                        __size_of___fttol 0144                                  _WriteI2C 2C8E  
                                ___awtoft 2E6A                                  ___ftpack 23F6  
               __end_of_SYS_InterruptHigh 2C20                                  ___lltoft 2A54  
                      ??_BUTTON_IsPressed 002B                                  _exp$4055 0097  
                 __size_of_USBDeviceTasks 012C                                  __ptext10 2342  
                                __ptext11 32EC                                  __ptext20 0DCC  
                                __ptext12 2ACA                                  __ptext21 04FE  
                                __ptext13 2C8E                                  __ptext30 0C6E  
                                __ptext22 167C                                  __ptext14 3336  
                                __ptext31 2D9C                                  __ptext23 18A0  
                                __ptext15 3028                                  __ptext40 2D48  
                                __ptext32 0296                                  __ptext24 271E  
                                __ptext16 2B3C                                  __ptext41 2EE2  
                                __ptext33 30C0                                  __ptext25 11A8  
                                __ptext17 3320                                  __ptext50 2E2A  
                                __ptext34 0F18                                  __ptext26 27AE  
                                __ptext18 0902                                  __ptext51 28CE  
                                __ptext43 1430                                  __ptext35 2E6A  
                                __ptext27 2552                                  __ptext19 0AC2  
                                __ptext60 2952                                  __ptext52 1998  
                                __ptext44 12EC                                  __ptext36 2A54  
                                __ptext28 1B70                                  __ptext61 3266  
                                __ptext53 25F0                                  __ptext45 305C  
                                __ptext37 23F6                                  __ptext29 31D0  
                                __ptext70 206A                                  __ptext62 2F50  
                                __ptext54 1D2C                                  __ptext46 30F0  
                                __ptext38 31F6                                  __ptext71 311E  
                                __ptext63 32AC                                  __ptext55 1C50  
                                __ptext47 2DE8                                  __ptext39 3178  
                                __ptext72 2EA6                                  __ptext64 1A8A  
                                __ptext56 31A4                                  __ptext48 321C  
                                __ptext73 268A                                  __ptext65 2F86  
                                __ptext57 24A4                                  __ptext49 283E  
                                __ptext74 2CEC                                  __ptext66 29D4  
                                __ptext58 155C                                  __ptext75 1794  
                                __ptext67 2FBC                                  __ptext59 001A  
                                __ptext76 1FA8                                  __ptext68 2FF2  
                                __ptext77 2124                                  __ptext69 1E06  
                                __ptext78 1EDA                                  _pow$4053 00A3  
                                _pow$4054 00A6            __end_of_USBCtrlTrfSetupHandler 2952  
                           __size_of_main 01DA                         ?_USBCtrlEPService 0001  
                      ??_USBCtrlEPService 001B        __size_of_APP_DeviceMouseSOFHandler 00D4  
                         LCDnibble@nibble 002C                       _USBCtrlTrfInHandler 2124  
              ?_APP_DeviceMouseSOFHandler 0001                       BUTTON_Enable@button 002B  
                                _outPipes 0034                      _USBCtrlTrfOutHandler 2CEC  
                                int$flags 005F                 _USBCtrlEPAllowStatusStage 1FA8  
                              _LED_Enable 2F1A                    ??_USBTransferOnePacket 0005  
                   __CFG_CPUDIV$OSC1_PLL2 000000                                  exp@coeff 7FAF  
                                log@coeff 7FCD                 _USBDeferStatusStagePacket 0054  
                              _INTCONbits 000FF2                               ??_eval_poly 0088  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 0001  
                                memcpy@s1 0003             USBCtrlTrfTxService@byteToSend 0001  
                                memset@p1 002B                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                                  intlevel2 0000  
                  __size_of_USBDeviceInit 0144   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 29D4  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0082         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER 2952  
         __size_of_APP_LEDUpdateUSBStatus 0080                      _APP_DeviceMouseTasks 2D48  
                  ??_USBConfigureEndpoint 0002                     ?_USBCtrlTrfOutHandler 0001  
                  __size_of_BUTTON_Enable 0022         __end_of_APP_DeviceMouseSOFHandler 1EDA  
                     _USBCtrlTrfRxService 1794                        _USBWakeFromSuspend 305C  
                 _USBStdFeatureReqHandler 001A                               _mouseReport 000500  
                     i2_SYSTEM_Initialize 3266                       _USBCtrlTrfTxService 1EDA  
              __size_of_SYS_InterruptHigh 2C18                       ?_USBWakeFromSuspend 0001  
                   ??_USBCtrlTrfInHandler 0002                     _USBAlternateInterface 005D  
                             _SSPCON1bits 000FC6                               _SSPCON2bits 000FC5  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 005A  
                    ?_USBCtrlTrfRxService 0001                 __size_of_MPU6050_ReadAccX 00B4  
               __size_of_MPU6050_ReadAccY 00B4                 __size_of_MPU6050_ReadAccZ 00B4  
                      __CFG_FOSC$HSPLL_HS 000000                      ?i2_SYSTEM_Initialize 0001  
                ?_USBCtrlEPAllowDataStage 0001                  APP_DeviceMouseTasks@accx 002C  
                    ?_USBCtrlTrfTxService 0001                  APP_DeviceMouseTasks@accy 002E  
                APP_DeviceMouseTasks@accz 0030              _USBStatusStageTimeoutCounter 0058  
                    ??_USBWakeFromSuspend 0015                USBTransferOnePacket@handle 0006  
                   ?_APP_DeviceMouseTasks 002C                                _USB_CD_Ptr 7EF7  
