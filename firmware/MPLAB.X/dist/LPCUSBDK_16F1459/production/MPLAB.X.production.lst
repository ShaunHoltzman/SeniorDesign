

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Feb  2 20:05:19 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	swtext1,local,class=CONST,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	swtext2,local,class=CONST,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	swtext3,local,class=CONST,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	swtext4,local,class=CONST,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	swtext5,local,class=CONST,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x20,32,_BDT
    63                           	dabs	1,0x48,8,_CtrlTrfData
    64                           	dabs	1,0x40,8,_SetupPkt
    65                           	dabs	1,0xA0,3,_mouseReport
    66                           	dabs	1,0x7E,2
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011D                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  018E                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0197                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  0212                     	;# 
   148  0212                     	;# 
   149  0213                     	;# 
   150  0213                     	;# 
   151  0214                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0217                     	;# 
   160  0391                     	;# 
   161  0392                     	;# 
   162  0393                     	;# 
   163  0394                     	;# 
   164  0395                     	;# 
   165  0396                     	;# 
   166  039A                     	;# 
   167  039B                     	;# 
   168  0611                     	;# 
   169  0612                     	;# 
   170  0613                     	;# 
   171  0613                     	;# 
   172  0614                     	;# 
   173  0615                     	;# 
   174  0616                     	;# 
   175  0616                     	;# 
   176  0691                     	;# 
   177  0692                     	;# 
   178  0693                     	;# 
   179  0694                     	;# 
   180  0695                     	;# 
   181  0E8E                     	;# 
   182  0E8F                     	;# 
   183  0E90                     	;# 
   184  0E91                     	;# 
   185  0E92                     	;# 
   186  0E93                     	;# 
   187  0E94                     	;# 
   188  0E94                     	;# 
   189  0E95                     	;# 
   190  0E96                     	;# 
   191  0E97                     	;# 
   192  0E98                     	;# 
   193  0E99                     	;# 
   194  0E9A                     	;# 
   195  0E9B                     	;# 
   196  0E9C                     	;# 
   197  0E9D                     	;# 
   198  0E9E                     	;# 
   199  0E9F                     	;# 
   200  0FE4                     	;# 
   201  0FE5                     	;# 
   202  0FE6                     	;# 
   203  0FE7                     	;# 
   204  0FE8                     	;# 
   205  0FE9                     	;# 
   206  0FEA                     	;# 
   207  0FEB                     	;# 
   208  0FED                     	;# 
   209  0FEE                     	;# 
   210  0FEF                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  008C                     	;# 
   238  008D                     	;# 
   239  008E                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  011D                     	;# 
   267  018C                     	;# 
   268  018D                     	;# 
   269  018E                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0197                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019E                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020D                     	;# 
   289  0211                     	;# 
   290  0211                     	;# 
   291  0212                     	;# 
   292  0212                     	;# 
   293  0213                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  0391                     	;# 
   305  0392                     	;# 
   306  0393                     	;# 
   307  0394                     	;# 
   308  0395                     	;# 
   309  0396                     	;# 
   310  039A                     	;# 
   311  039B                     	;# 
   312  0611                     	;# 
   313  0612                     	;# 
   314  0613                     	;# 
   315  0613                     	;# 
   316  0614                     	;# 
   317  0615                     	;# 
   318  0616                     	;# 
   319  0616                     	;# 
   320  0691                     	;# 
   321  0692                     	;# 
   322  0693                     	;# 
   323  0694                     	;# 
   324  0695                     	;# 
   325  0E8E                     	;# 
   326  0E8F                     	;# 
   327  0E90                     	;# 
   328  0E91                     	;# 
   329  0E92                     	;# 
   330  0E93                     	;# 
   331  0E94                     	;# 
   332  0E94                     	;# 
   333  0E95                     	;# 
   334  0E96                     	;# 
   335  0E97                     	;# 
   336  0E98                     	;# 
   337  0E99                     	;# 
   338  0E9A                     	;# 
   339  0E9B                     	;# 
   340  0E9C                     	;# 
   341  0E9D                     	;# 
   342  0E9E                     	;# 
   343  0E9F                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000D                     	;# 
   369  000E                     	;# 
   370  0011                     	;# 
   371  0012                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  0091                     	;# 
   385  0092                     	;# 
   386  0095                     	;# 
   387  0096                     	;# 
   388  0097                     	;# 
   389  0098                     	;# 
   390  0099                     	;# 
   391  009A                     	;# 
   392  009B                     	;# 
   393  009B                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009E                     	;# 
   397  009F                     	;# 
   398  010C                     	;# 
   399  010D                     	;# 
   400  010E                     	;# 
   401  0111                     	;# 
   402  0112                     	;# 
   403  0113                     	;# 
   404  0114                     	;# 
   405  0115                     	;# 
   406  0116                     	;# 
   407  0117                     	;# 
   408  0118                     	;# 
   409  0119                     	;# 
   410  011D                     	;# 
   411  018C                     	;# 
   412  018D                     	;# 
   413  018E                     	;# 
   414  0191                     	;# 
   415  0191                     	;# 
   416  0192                     	;# 
   417  0193                     	;# 
   418  0193                     	;# 
   419  0194                     	;# 
   420  0195                     	;# 
   421  0196                     	;# 
   422  0197                     	;# 
   423  0199                     	;# 
   424  019A                     	;# 
   425  019B                     	;# 
   426  019B                     	;# 
   427  019C                     	;# 
   428  019D                     	;# 
   429  019E                     	;# 
   430  019F                     	;# 
   431  020C                     	;# 
   432  020D                     	;# 
   433  0211                     	;# 
   434  0211                     	;# 
   435  0212                     	;# 
   436  0212                     	;# 
   437  0213                     	;# 
   438  0213                     	;# 
   439  0214                     	;# 
   440  0214                     	;# 
   441  0215                     	;# 
   442  0215                     	;# 
   443  0215                     	;# 
   444  0216                     	;# 
   445  0216                     	;# 
   446  0217                     	;# 
   447  0217                     	;# 
   448  0391                     	;# 
   449  0392                     	;# 
   450  0393                     	;# 
   451  0394                     	;# 
   452  0395                     	;# 
   453  0396                     	;# 
   454  039A                     	;# 
   455  039B                     	;# 
   456  0611                     	;# 
   457  0612                     	;# 
   458  0613                     	;# 
   459  0613                     	;# 
   460  0614                     	;# 
   461  0615                     	;# 
   462  0616                     	;# 
   463  0616                     	;# 
   464  0691                     	;# 
   465  0692                     	;# 
   466  0693                     	;# 
   467  0694                     	;# 
   468  0695                     	;# 
   469  0E8E                     	;# 
   470  0E8F                     	;# 
   471  0E90                     	;# 
   472  0E91                     	;# 
   473  0E92                     	;# 
   474  0E93                     	;# 
   475  0E94                     	;# 
   476  0E94                     	;# 
   477  0E95                     	;# 
   478  0E96                     	;# 
   479  0E97                     	;# 
   480  0E98                     	;# 
   481  0E99                     	;# 
   482  0E9A                     	;# 
   483  0E9B                     	;# 
   484  0E9C                     	;# 
   485  0E9D                     	;# 
   486  0E9E                     	;# 
   487  0E9F                     	;# 
   488  0FE4                     	;# 
   489  0FE5                     	;# 
   490  0FE6                     	;# 
   491  0FE7                     	;# 
   492  0FE8                     	;# 
   493  0FE9                     	;# 
   494  0FEA                     	;# 
   495  0FEB                     	;# 
   496  0FED                     	;# 
   497  0FEE                     	;# 
   498  0FEF                     	;# 
   499  0000                     	;# 
   500  0001                     	;# 
   501  0002                     	;# 
   502  0003                     	;# 
   503  0004                     	;# 
   504  0005                     	;# 
   505  0006                     	;# 
   506  0007                     	;# 
   507  0008                     	;# 
   508  0009                     	;# 
   509  000A                     	;# 
   510  000B                     	;# 
   511  000C                     	;# 
   512  000D                     	;# 
   513  000E                     	;# 
   514  0011                     	;# 
   515  0012                     	;# 
   516  0015                     	;# 
   517  0016                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001C                     	;# 
   525  008C                     	;# 
   526  008D                     	;# 
   527  008E                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0095                     	;# 
   531  0096                     	;# 
   532  0097                     	;# 
   533  0098                     	;# 
   534  0099                     	;# 
   535  009A                     	;# 
   536  009B                     	;# 
   537  009B                     	;# 
   538  009C                     	;# 
   539  009D                     	;# 
   540  009E                     	;# 
   541  009F                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010E                     	;# 
   545  0111                     	;# 
   546  0112                     	;# 
   547  0113                     	;# 
   548  0114                     	;# 
   549  0115                     	;# 
   550  0116                     	;# 
   551  0117                     	;# 
   552  0118                     	;# 
   553  0119                     	;# 
   554  011D                     	;# 
   555  018C                     	;# 
   556  018D                     	;# 
   557  018E                     	;# 
   558  0191                     	;# 
   559  0191                     	;# 
   560  0192                     	;# 
   561  0193                     	;# 
   562  0193                     	;# 
   563  0194                     	;# 
   564  0195                     	;# 
   565  0196                     	;# 
   566  0197                     	;# 
   567  0199                     	;# 
   568  019A                     	;# 
   569  019B                     	;# 
   570  019B                     	;# 
   571  019C                     	;# 
   572  019D                     	;# 
   573  019E                     	;# 
   574  019F                     	;# 
   575  020C                     	;# 
   576  020D                     	;# 
   577  0211                     	;# 
   578  0211                     	;# 
   579  0212                     	;# 
   580  0212                     	;# 
   581  0213                     	;# 
   582  0213                     	;# 
   583  0214                     	;# 
   584  0214                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0215                     	;# 
   588  0216                     	;# 
   589  0216                     	;# 
   590  0217                     	;# 
   591  0217                     	;# 
   592  0391                     	;# 
   593  0392                     	;# 
   594  0393                     	;# 
   595  0394                     	;# 
   596  0395                     	;# 
   597  0396                     	;# 
   598  039A                     	;# 
   599  039B                     	;# 
   600  0611                     	;# 
   601  0612                     	;# 
   602  0613                     	;# 
   603  0613                     	;# 
   604  0614                     	;# 
   605  0615                     	;# 
   606  0616                     	;# 
   607  0616                     	;# 
   608  0691                     	;# 
   609  0692                     	;# 
   610  0693                     	;# 
   611  0694                     	;# 
   612  0695                     	;# 
   613  0E8E                     	;# 
   614  0E8F                     	;# 
   615  0E90                     	;# 
   616  0E91                     	;# 
   617  0E92                     	;# 
   618  0E93                     	;# 
   619  0E94                     	;# 
   620  0E94                     	;# 
   621  0E95                     	;# 
   622  0E96                     	;# 
   623  0E97                     	;# 
   624  0E98                     	;# 
   625  0E99                     	;# 
   626  0E9A                     	;# 
   627  0E9B                     	;# 
   628  0E9C                     	;# 
   629  0E9D                     	;# 
   630  0E9E                     	;# 
   631  0E9F                     	;# 
   632  0FE4                     	;# 
   633  0FE5                     	;# 
   634  0FE6                     	;# 
   635  0FE7                     	;# 
   636  0FE8                     	;# 
   637  0FE9                     	;# 
   638  0FEA                     	;# 
   639  0FEB                     	;# 
   640  0FED                     	;# 
   641  0FEE                     	;# 
   642  0FEF                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0008                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000D                     	;# 
   657  000E                     	;# 
   658  0011                     	;# 
   659  0012                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001B                     	;# 
   668  001C                     	;# 
   669  008C                     	;# 
   670  008D                     	;# 
   671  008E                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0098                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009B                     	;# 
   682  009C                     	;# 
   683  009D                     	;# 
   684  009E                     	;# 
   685  009F                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010E                     	;# 
   689  0111                     	;# 
   690  0112                     	;# 
   691  0113                     	;# 
   692  0114                     	;# 
   693  0115                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0118                     	;# 
   697  0119                     	;# 
   698  011D                     	;# 
   699  018C                     	;# 
   700  018D                     	;# 
   701  018E                     	;# 
   702  0191                     	;# 
   703  0191                     	;# 
   704  0192                     	;# 
   705  0193                     	;# 
   706  0193                     	;# 
   707  0194                     	;# 
   708  0195                     	;# 
   709  0196                     	;# 
   710  0197                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  019D                     	;# 
   717  019E                     	;# 
   718  019F                     	;# 
   719  020C                     	;# 
   720  020D                     	;# 
   721  0211                     	;# 
   722  0211                     	;# 
   723  0212                     	;# 
   724  0212                     	;# 
   725  0213                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0391                     	;# 
   737  0392                     	;# 
   738  0393                     	;# 
   739  0394                     	;# 
   740  0395                     	;# 
   741  0396                     	;# 
   742  039A                     	;# 
   743  039B                     	;# 
   744  0611                     	;# 
   745  0612                     	;# 
   746  0613                     	;# 
   747  0613                     	;# 
   748  0614                     	;# 
   749  0615                     	;# 
   750  0616                     	;# 
   751  0616                     	;# 
   752  0691                     	;# 
   753  0692                     	;# 
   754  0693                     	;# 
   755  0694                     	;# 
   756  0695                     	;# 
   757  0E8E                     	;# 
   758  0E8F                     	;# 
   759  0E90                     	;# 
   760  0E91                     	;# 
   761  0E92                     	;# 
   762  0E93                     	;# 
   763  0E94                     	;# 
   764  0E94                     	;# 
   765  0E95                     	;# 
   766  0E96                     	;# 
   767  0E97                     	;# 
   768  0E98                     	;# 
   769  0E99                     	;# 
   770  0E9A                     	;# 
   771  0E9B                     	;# 
   772  0E9C                     	;# 
   773  0E9D                     	;# 
   774  0E9E                     	;# 
   775  0E9F                     	;# 
   776  0FE4                     	;# 
   777  0FE5                     	;# 
   778  0FE6                     	;# 
   779  0FE7                     	;# 
   780  0FE8                     	;# 
   781  0FE9                     	;# 
   782  0FEA                     	;# 
   783  0FEB                     	;# 
   784  0FED                     	;# 
   785  0FEE                     	;# 
   786  0FEF                     	;# 
   787  0000                     	;# 
   788  0001                     	;# 
   789  0002                     	;# 
   790  0003                     	;# 
   791  0004                     	;# 
   792  0005                     	;# 
   793  0006                     	;# 
   794  0007                     	;# 
   795  0008                     	;# 
   796  0009                     	;# 
   797  000A                     	;# 
   798  000B                     	;# 
   799  000C                     	;# 
   800  000D                     	;# 
   801  000E                     	;# 
   802  0011                     	;# 
   803  0012                     	;# 
   804  0015                     	;# 
   805  0016                     	;# 
   806  0016                     	;# 
   807  0017                     	;# 
   808  0018                     	;# 
   809  0019                     	;# 
   810  001A                     	;# 
   811  001B                     	;# 
   812  001C                     	;# 
   813  008C                     	;# 
   814  008D                     	;# 
   815  008E                     	;# 
   816  0091                     	;# 
   817  0092                     	;# 
   818  0095                     	;# 
   819  0096                     	;# 
   820  0097                     	;# 
   821  0098                     	;# 
   822  0099                     	;# 
   823  009A                     	;# 
   824  009B                     	;# 
   825  009B                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009E                     	;# 
   829  009F                     	;# 
   830  010C                     	;# 
   831  010D                     	;# 
   832  010E                     	;# 
   833  0111                     	;# 
   834  0112                     	;# 
   835  0113                     	;# 
   836  0114                     	;# 
   837  0115                     	;# 
   838  0116                     	;# 
   839  0117                     	;# 
   840  0118                     	;# 
   841  0119                     	;# 
   842  011D                     	;# 
   843  018C                     	;# 
   844  018D                     	;# 
   845  018E                     	;# 
   846  0191                     	;# 
   847  0191                     	;# 
   848  0192                     	;# 
   849  0193                     	;# 
   850  0193                     	;# 
   851  0194                     	;# 
   852  0195                     	;# 
   853  0196                     	;# 
   854  0197                     	;# 
   855  0199                     	;# 
   856  019A                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019C                     	;# 
   860  019D                     	;# 
   861  019E                     	;# 
   862  019F                     	;# 
   863  020C                     	;# 
   864  020D                     	;# 
   865  0211                     	;# 
   866  0211                     	;# 
   867  0212                     	;# 
   868  0212                     	;# 
   869  0213                     	;# 
   870  0213                     	;# 
   871  0214                     	;# 
   872  0214                     	;# 
   873  0215                     	;# 
   874  0215                     	;# 
   875  0215                     	;# 
   876  0216                     	;# 
   877  0216                     	;# 
   878  0217                     	;# 
   879  0217                     	;# 
   880  0391                     	;# 
   881  0392                     	;# 
   882  0393                     	;# 
   883  0394                     	;# 
   884  0395                     	;# 
   885  0396                     	;# 
   886  039A                     	;# 
   887  039B                     	;# 
   888  0611                     	;# 
   889  0612                     	;# 
   890  0613                     	;# 
   891  0613                     	;# 
   892  0614                     	;# 
   893  0615                     	;# 
   894  0616                     	;# 
   895  0616                     	;# 
   896  0691                     	;# 
   897  0692                     	;# 
   898  0693                     	;# 
   899  0694                     	;# 
   900  0695                     	;# 
   901  0E8E                     	;# 
   902  0E8F                     	;# 
   903  0E90                     	;# 
   904  0E91                     	;# 
   905  0E92                     	;# 
   906  0E93                     	;# 
   907  0E94                     	;# 
   908  0E94                     	;# 
   909  0E95                     	;# 
   910  0E96                     	;# 
   911  0E97                     	;# 
   912  0E98                     	;# 
   913  0E99                     	;# 
   914  0E9A                     	;# 
   915  0E9B                     	;# 
   916  0E9C                     	;# 
   917  0E9D                     	;# 
   918  0E9E                     	;# 
   919  0E9F                     	;# 
   920  0FE4                     	;# 
   921  0FE5                     	;# 
   922  0FE6                     	;# 
   923  0FE7                     	;# 
   924  0FE8                     	;# 
   925  0FE9                     	;# 
   926  0FEA                     	;# 
   927  0FEB                     	;# 
   928  0FED                     	;# 
   929  0FEE                     	;# 
   930  0FEF                     	;# 
   931  0000                     	;# 
   932  0001                     	;# 
   933  0002                     	;# 
   934  0003                     	;# 
   935  0004                     	;# 
   936  0005                     	;# 
   937  0006                     	;# 
   938  0007                     	;# 
   939  0008                     	;# 
   940  0009                     	;# 
   941  000A                     	;# 
   942  000B                     	;# 
   943  000C                     	;# 
   944  000D                     	;# 
   945  000E                     	;# 
   946  0011                     	;# 
   947  0012                     	;# 
   948  0015                     	;# 
   949  0016                     	;# 
   950  0016                     	;# 
   951  0017                     	;# 
   952  0018                     	;# 
   953  0019                     	;# 
   954  001A                     	;# 
   955  001B                     	;# 
   956  001C                     	;# 
   957  008C                     	;# 
   958  008D                     	;# 
   959  008E                     	;# 
   960  0091                     	;# 
   961  0092                     	;# 
   962  0095                     	;# 
   963  0096                     	;# 
   964  0097                     	;# 
   965  0098                     	;# 
   966  0099                     	;# 
   967  009A                     	;# 
   968  009B                     	;# 
   969  009B                     	;# 
   970  009C                     	;# 
   971  009D                     	;# 
   972  009E                     	;# 
   973  009F                     	;# 
   974  010C                     	;# 
   975  010D                     	;# 
   976  010E                     	;# 
   977  0111                     	;# 
   978  0112                     	;# 
   979  0113                     	;# 
   980  0114                     	;# 
   981  0115                     	;# 
   982  0116                     	;# 
   983  0117                     	;# 
   984  0118                     	;# 
   985  0119                     	;# 
   986  011D                     	;# 
   987  018C                     	;# 
   988  018D                     	;# 
   989  018E                     	;# 
   990  0191                     	;# 
   991  0191                     	;# 
   992  0192                     	;# 
   993  0193                     	;# 
   994  0193                     	;# 
   995  0194                     	;# 
   996  0195                     	;# 
   997  0196                     	;# 
   998  0197                     	;# 
   999  0199                     	;# 
  1000  019A                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019C                     	;# 
  1004  019D                     	;# 
  1005  019E                     	;# 
  1006  019F                     	;# 
  1007  020C                     	;# 
  1008  020D                     	;# 
  1009  0211                     	;# 
  1010  0211                     	;# 
  1011  0212                     	;# 
  1012  0212                     	;# 
  1013  0213                     	;# 
  1014  0213                     	;# 
  1015  0214                     	;# 
  1016  0214                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0216                     	;# 
  1021  0216                     	;# 
  1022  0217                     	;# 
  1023  0217                     	;# 
  1024  0391                     	;# 
  1025  0392                     	;# 
  1026  0393                     	;# 
  1027  0394                     	;# 
  1028  0395                     	;# 
  1029  0396                     	;# 
  1030  039A                     	;# 
  1031  039B                     	;# 
  1032  0611                     	;# 
  1033  0612                     	;# 
  1034  0613                     	;# 
  1035  0613                     	;# 
  1036  0614                     	;# 
  1037  0615                     	;# 
  1038  0616                     	;# 
  1039  0616                     	;# 
  1040  0691                     	;# 
  1041  0692                     	;# 
  1042  0693                     	;# 
  1043  0694                     	;# 
  1044  0695                     	;# 
  1045  0E8E                     	;# 
  1046  0E8F                     	;# 
  1047  0E90                     	;# 
  1048  0E91                     	;# 
  1049  0E92                     	;# 
  1050  0E93                     	;# 
  1051  0E94                     	;# 
  1052  0E94                     	;# 
  1053  0E95                     	;# 
  1054  0E96                     	;# 
  1055  0E97                     	;# 
  1056  0E98                     	;# 
  1057  0E99                     	;# 
  1058  0E9A                     	;# 
  1059  0E9B                     	;# 
  1060  0E9C                     	;# 
  1061  0E9D                     	;# 
  1062  0E9E                     	;# 
  1063  0E9F                     	;# 
  1064  0FE4                     	;# 
  1065  0FE5                     	;# 
  1066  0FE6                     	;# 
  1067  0FE7                     	;# 
  1068  0FE8                     	;# 
  1069  0FE9                     	;# 
  1070  0FEA                     	;# 
  1071  0FEB                     	;# 
  1072  0FED                     	;# 
  1073  0FEE                     	;# 
  1074  0FEF                     	;# 
  1075  0000                     	;# 
  1076  0001                     	;# 
  1077  0002                     	;# 
  1078  0003                     	;# 
  1079  0004                     	;# 
  1080  0005                     	;# 
  1081  0006                     	;# 
  1082  0007                     	;# 
  1083  0008                     	;# 
  1084  0009                     	;# 
  1085  000A                     	;# 
  1086  000B                     	;# 
  1087  000C                     	;# 
  1088  000D                     	;# 
  1089  000E                     	;# 
  1090  0011                     	;# 
  1091  0012                     	;# 
  1092  0015                     	;# 
  1093  0016                     	;# 
  1094  0016                     	;# 
  1095  0017                     	;# 
  1096  0018                     	;# 
  1097  0019                     	;# 
  1098  001A                     	;# 
  1099  001B                     	;# 
  1100  001C                     	;# 
  1101  008C                     	;# 
  1102  008D                     	;# 
  1103  008E                     	;# 
  1104  0091                     	;# 
  1105  0092                     	;# 
  1106  0095                     	;# 
  1107  0096                     	;# 
  1108  0097                     	;# 
  1109  0098                     	;# 
  1110  0099                     	;# 
  1111  009A                     	;# 
  1112  009B                     	;# 
  1113  009B                     	;# 
  1114  009C                     	;# 
  1115  009D                     	;# 
  1116  009E                     	;# 
  1117  009F                     	;# 
  1118  010C                     	;# 
  1119  010D                     	;# 
  1120  010E                     	;# 
  1121  0111                     	;# 
  1122  0112                     	;# 
  1123  0113                     	;# 
  1124  0114                     	;# 
  1125  0115                     	;# 
  1126  0116                     	;# 
  1127  0117                     	;# 
  1128  0118                     	;# 
  1129  0119                     	;# 
  1130  011D                     	;# 
  1131  018C                     	;# 
  1132  018D                     	;# 
  1133  018E                     	;# 
  1134  0191                     	;# 
  1135  0191                     	;# 
  1136  0192                     	;# 
  1137  0193                     	;# 
  1138  0193                     	;# 
  1139  0194                     	;# 
  1140  0195                     	;# 
  1141  0196                     	;# 
  1142  0197                     	;# 
  1143  0199                     	;# 
  1144  019A                     	;# 
  1145  019B                     	;# 
  1146  019B                     	;# 
  1147  019C                     	;# 
  1148  019D                     	;# 
  1149  019E                     	;# 
  1150  019F                     	;# 
  1151  020C                     	;# 
  1152  020D                     	;# 
  1153  0211                     	;# 
  1154  0211                     	;# 
  1155  0212                     	;# 
  1156  0212                     	;# 
  1157  0213                     	;# 
  1158  0213                     	;# 
  1159  0214                     	;# 
  1160  0214                     	;# 
  1161  0215                     	;# 
  1162  0215                     	;# 
  1163  0215                     	;# 
  1164  0216                     	;# 
  1165  0216                     	;# 
  1166  0217                     	;# 
  1167  0217                     	;# 
  1168  0391                     	;# 
  1169  0392                     	;# 
  1170  0393                     	;# 
  1171  0394                     	;# 
  1172  0395                     	;# 
  1173  0396                     	;# 
  1174  039A                     	;# 
  1175  039B                     	;# 
  1176  0611                     	;# 
  1177  0612                     	;# 
  1178  0613                     	;# 
  1179  0613                     	;# 
  1180  0614                     	;# 
  1181  0615                     	;# 
  1182  0616                     	;# 
  1183  0616                     	;# 
  1184  0691                     	;# 
  1185  0692                     	;# 
  1186  0693                     	;# 
  1187  0694                     	;# 
  1188  0695                     	;# 
  1189  0E8E                     	;# 
  1190  0E8F                     	;# 
  1191  0E90                     	;# 
  1192  0E91                     	;# 
  1193  0E92                     	;# 
  1194  0E93                     	;# 
  1195  0E94                     	;# 
  1196  0E94                     	;# 
  1197  0E95                     	;# 
  1198  0E96                     	;# 
  1199  0E97                     	;# 
  1200  0E98                     	;# 
  1201  0E99                     	;# 
  1202  0E9A                     	;# 
  1203  0E9B                     	;# 
  1204  0E9C                     	;# 
  1205  0E9D                     	;# 
  1206  0E9E                     	;# 
  1207  0E9F                     	;# 
  1208  0FE4                     	;# 
  1209  0FE5                     	;# 
  1210  0FE6                     	;# 
  1211  0FE7                     	;# 
  1212  0FE8                     	;# 
  1213  0FE9                     	;# 
  1214  0FEA                     	;# 
  1215  0FEB                     	;# 
  1216  0FED                     	;# 
  1217  0FEE                     	;# 
  1218  0FEF                     	;# 
  1219  0000                     	;# 
  1220  0001                     	;# 
  1221  0002                     	;# 
  1222  0003                     	;# 
  1223  0004                     	;# 
  1224  0005                     	;# 
  1225  0006                     	;# 
  1226  0007                     	;# 
  1227  0008                     	;# 
  1228  0009                     	;# 
  1229  000A                     	;# 
  1230  000B                     	;# 
  1231  000C                     	;# 
  1232  000D                     	;# 
  1233  000E                     	;# 
  1234  0011                     	;# 
  1235  0012                     	;# 
  1236  0015                     	;# 
  1237  0016                     	;# 
  1238  0016                     	;# 
  1239  0017                     	;# 
  1240  0018                     	;# 
  1241  0019                     	;# 
  1242  001A                     	;# 
  1243  001B                     	;# 
  1244  001C                     	;# 
  1245  008C                     	;# 
  1246  008D                     	;# 
  1247  008E                     	;# 
  1248  0091                     	;# 
  1249  0092                     	;# 
  1250  0095                     	;# 
  1251  0096                     	;# 
  1252  0097                     	;# 
  1253  0098                     	;# 
  1254  0099                     	;# 
  1255  009A                     	;# 
  1256  009B                     	;# 
  1257  009B                     	;# 
  1258  009C                     	;# 
  1259  009D                     	;# 
  1260  009E                     	;# 
  1261  009F                     	;# 
  1262  010C                     	;# 
  1263  010D                     	;# 
  1264  010E                     	;# 
  1265  0111                     	;# 
  1266  0112                     	;# 
  1267  0113                     	;# 
  1268  0114                     	;# 
  1269  0115                     	;# 
  1270  0116                     	;# 
  1271  0117                     	;# 
  1272  0118                     	;# 
  1273  0119                     	;# 
  1274  011D                     	;# 
  1275  018C                     	;# 
  1276  018D                     	;# 
  1277  018E                     	;# 
  1278  0191                     	;# 
  1279  0191                     	;# 
  1280  0192                     	;# 
  1281  0193                     	;# 
  1282  0193                     	;# 
  1283  0194                     	;# 
  1284  0195                     	;# 
  1285  0196                     	;# 
  1286  0197                     	;# 
  1287  0199                     	;# 
  1288  019A                     	;# 
  1289  019B                     	;# 
  1290  019B                     	;# 
  1291  019C                     	;# 
  1292  019D                     	;# 
  1293  019E                     	;# 
  1294  019F                     	;# 
  1295  020C                     	;# 
  1296  020D                     	;# 
  1297  0211                     	;# 
  1298  0211                     	;# 
  1299  0212                     	;# 
  1300  0212                     	;# 
  1301  0213                     	;# 
  1302  0213                     	;# 
  1303  0214                     	;# 
  1304  0214                     	;# 
  1305  0215                     	;# 
  1306  0215                     	;# 
  1307  0215                     	;# 
  1308  0216                     	;# 
  1309  0216                     	;# 
  1310  0217                     	;# 
  1311  0217                     	;# 
  1312  0391                     	;# 
  1313  0392                     	;# 
  1314  0393                     	;# 
  1315  0394                     	;# 
  1316  0395                     	;# 
  1317  0396                     	;# 
  1318  039A                     	;# 
  1319  039B                     	;# 
  1320  0611                     	;# 
  1321  0612                     	;# 
  1322  0613                     	;# 
  1323  0613                     	;# 
  1324  0614                     	;# 
  1325  0615                     	;# 
  1326  0616                     	;# 
  1327  0616                     	;# 
  1328  0691                     	;# 
  1329  0692                     	;# 
  1330  0693                     	;# 
  1331  0694                     	;# 
  1332  0695                     	;# 
  1333  0E8E                     	;# 
  1334  0E8F                     	;# 
  1335  0E90                     	;# 
  1336  0E91                     	;# 
  1337  0E92                     	;# 
  1338  0E93                     	;# 
  1339  0E94                     	;# 
  1340  0E94                     	;# 
  1341  0E95                     	;# 
  1342  0E96                     	;# 
  1343  0E97                     	;# 
  1344  0E98                     	;# 
  1345  0E99                     	;# 
  1346  0E9A                     	;# 
  1347  0E9B                     	;# 
  1348  0E9C                     	;# 
  1349  0E9D                     	;# 
  1350  0E9E                     	;# 
  1351  0E9F                     	;# 
  1352  0FE4                     	;# 
  1353  0FE5                     	;# 
  1354  0FE6                     	;# 
  1355  0FE7                     	;# 
  1356  0FE8                     	;# 
  1357  0FE9                     	;# 
  1358  0FEA                     	;# 
  1359  0FEB                     	;# 
  1360  0FED                     	;# 
  1361  0FEE                     	;# 
  1362  0FEF                     	;# 
  1363  0000                     	;# 
  1364  0001                     	;# 
  1365  0002                     	;# 
  1366  0003                     	;# 
  1367  0004                     	;# 
  1368  0005                     	;# 
  1369  0006                     	;# 
  1370  0007                     	;# 
  1371  0008                     	;# 
  1372  0009                     	;# 
  1373  000A                     	;# 
  1374  000B                     	;# 
  1375  000C                     	;# 
  1376  000D                     	;# 
  1377  000E                     	;# 
  1378  0011                     	;# 
  1379  0012                     	;# 
  1380  0015                     	;# 
  1381  0016                     	;# 
  1382  0016                     	;# 
  1383  0017                     	;# 
  1384  0018                     	;# 
  1385  0019                     	;# 
  1386  001A                     	;# 
  1387  001B                     	;# 
  1388  001C                     	;# 
  1389  008C                     	;# 
  1390  008D                     	;# 
  1391  008E                     	;# 
  1392  0091                     	;# 
  1393  0092                     	;# 
  1394  0095                     	;# 
  1395  0096                     	;# 
  1396  0097                     	;# 
  1397  0098                     	;# 
  1398  0099                     	;# 
  1399  009A                     	;# 
  1400  009B                     	;# 
  1401  009B                     	;# 
  1402  009C                     	;# 
  1403  009D                     	;# 
  1404  009E                     	;# 
  1405  009F                     	;# 
  1406  010C                     	;# 
  1407  010D                     	;# 
  1408  010E                     	;# 
  1409  0111                     	;# 
  1410  0112                     	;# 
  1411  0113                     	;# 
  1412  0114                     	;# 
  1413  0115                     	;# 
  1414  0116                     	;# 
  1415  0117                     	;# 
  1416  0118                     	;# 
  1417  0119                     	;# 
  1418  011D                     	;# 
  1419  018C                     	;# 
  1420  018D                     	;# 
  1421  018E                     	;# 
  1422  0191                     	;# 
  1423  0191                     	;# 
  1424  0192                     	;# 
  1425  0193                     	;# 
  1426  0193                     	;# 
  1427  0194                     	;# 
  1428  0195                     	;# 
  1429  0196                     	;# 
  1430  0197                     	;# 
  1431  0199                     	;# 
  1432  019A                     	;# 
  1433  019B                     	;# 
  1434  019B                     	;# 
  1435  019C                     	;# 
  1436  019D                     	;# 
  1437  019E                     	;# 
  1438  019F                     	;# 
  1439  020C                     	;# 
  1440  020D                     	;# 
  1441  0211                     	;# 
  1442  0211                     	;# 
  1443  0212                     	;# 
  1444  0212                     	;# 
  1445  0213                     	;# 
  1446  0213                     	;# 
  1447  0214                     	;# 
  1448  0214                     	;# 
  1449  0215                     	;# 
  1450  0215                     	;# 
  1451  0215                     	;# 
  1452  0216                     	;# 
  1453  0216                     	;# 
  1454  0217                     	;# 
  1455  0217                     	;# 
  1456  0391                     	;# 
  1457  0392                     	;# 
  1458  0393                     	;# 
  1459  0394                     	;# 
  1460  0395                     	;# 
  1461  0396                     	;# 
  1462  039A                     	;# 
  1463  039B                     	;# 
  1464  0611                     	;# 
  1465  0612                     	;# 
  1466  0613                     	;# 
  1467  0613                     	;# 
  1468  0614                     	;# 
  1469  0615                     	;# 
  1470  0616                     	;# 
  1471  0616                     	;# 
  1472  0691                     	;# 
  1473  0692                     	;# 
  1474  0693                     	;# 
  1475  0694                     	;# 
  1476  0695                     	;# 
  1477  0E8E                     	;# 
  1478  0E8F                     	;# 
  1479  0E90                     	;# 
  1480  0E91                     	;# 
  1481  0E92                     	;# 
  1482  0E93                     	;# 
  1483  0E94                     	;# 
  1484  0E94                     	;# 
  1485  0E95                     	;# 
  1486  0E96                     	;# 
  1487  0E97                     	;# 
  1488  0E98                     	;# 
  1489  0E99                     	;# 
  1490  0E9A                     	;# 
  1491  0E9B                     	;# 
  1492  0E9C                     	;# 
  1493  0E9D                     	;# 
  1494  0E9E                     	;# 
  1495  0E9F                     	;# 
  1496  0FE4                     	;# 
  1497  0FE5                     	;# 
  1498  0FE6                     	;# 
  1499  0FE7                     	;# 
  1500  0FE8                     	;# 
  1501  0FE9                     	;# 
  1502  0FEA                     	;# 
  1503  0FEB                     	;# 
  1504  0FED                     	;# 
  1505  0FEE                     	;# 
  1506  0FEF                     	;# 
  1507                           
  1508                           	psect	stringtext
  1509  0126                     __pstringtext:	
  1510  0126                     _USB_SD_Ptr:	
  1511  0126  34FE               	retlw	low (_sd000| (0+32768))
  1512  0127  3481               	retlw	high (_sd000| (0+32768))
  1513  0128  3436               	retlw	low (_sd001| (0+32768))
  1514  0129  3481               	retlw	high (_sd001| (0+32768))
  1515  012A  349C               	retlw	low (_sd002| (0+32768))
  1516  012B  3481               	retlw	high (_sd002| (0+32768))
  1517  012C                     __end_of_USB_SD_Ptr:	
  1518  012C                     _xVector:	
  1519  012C  34FF               	retlw	255
  1520  012D  3400               	retlw	0
  1521  012E  3401               	retlw	1
  1522  012F  3400               	retlw	0
  1523  0130                     __end_of_xVector:	
  1524  0130                     _yVector:	
  1525  0130  3400               	retlw	0
  1526  0131  34FF               	retlw	255
  1527  0132  3400               	retlw	0
  1528  0133  3401               	retlw	1
  1529  0134                     __end_of_yVector:	
  1530  0134                     _USB_CD_Ptr:	
  1531  0134  34CA               	retlw	low (_configDescriptor1| (0+32768))
  1532  0135  3481               	retlw	high (_configDescriptor1| (0+32768))
  1533  0136                     __end_of_USB_CD_Ptr:	
  1534  0136                     _sd001:	
  1535  0136  3434               	retlw	52
  1536  0137  3403               	retlw	3
  1537  0138  344D               	retlw	77
  1538  0139  3400               	retlw	0
  1539  013A  3469               	retlw	105
  1540  013B  3400               	retlw	0
  1541  013C  3463               	retlw	99
  1542  013D  3400               	retlw	0
  1543  013E  3472               	retlw	114
  1544  013F  3400               	retlw	0
  1545  0140  346F               	retlw	111
  1546  0141  3400               	retlw	0
  1547  0142  3463               	retlw	99
  1548  0143  3400               	retlw	0
  1549  0144  3468               	retlw	104
  1550  0145  3400               	retlw	0
  1551  0146  3469               	retlw	105
  1552  0147  3400               	retlw	0
  1553  0148  3470               	retlw	112
  1554  0149  3400               	retlw	0
  1555  014A  3420               	retlw	32
  1556  014B  3400               	retlw	0
  1557  014C  3454               	retlw	84
  1558  014D  3400               	retlw	0
  1559  014E  3465               	retlw	101
  1560  014F  3400               	retlw	0
  1561  0150  3463               	retlw	99
  1562  0151  3400               	retlw	0
  1563  0152  3468               	retlw	104
  1564  0153  3400               	retlw	0
  1565  0154  346E               	retlw	110
  1566  0155  3400               	retlw	0
  1567  0156  346F               	retlw	111
  1568  0157  3400               	retlw	0
  1569  0158  346C               	retlw	108
  1570  0159  3400               	retlw	0
  1571  015A  346F               	retlw	111
  1572  015B  3400               	retlw	0
  1573  015C  3467               	retlw	103
  1574  015D  3400               	retlw	0
  1575  015E  3479               	retlw	121
  1576  015F  3400               	retlw	0
  1577  0160  3420               	retlw	32
  1578  0161  3400               	retlw	0
  1579  0162  3449               	retlw	73
  1580  0163  3400               	retlw	0
  1581  0164  346E               	retlw	110
  1582  0165  3400               	retlw	0
  1583  0166  3463               	retlw	99
  1584  0167  3400               	retlw	0
  1585  0168  342E               	retlw	46
  1586  0169  3400               	retlw	0
  1587  016A                     __end_of_sd001:	
  1588  016A                     _hid_rpt01:	
  1589  016A  3405               	retlw	5
  1590  016B  3401               	retlw	1
  1591  016C  3409               	retlw	9
  1592  016D  3402               	retlw	2
  1593  016E  34A1               	retlw	161
  1594  016F  3401               	retlw	1
  1595  0170  3409               	retlw	9
  1596  0171  3401               	retlw	1
  1597  0172  34A1               	retlw	161
  1598  0173  3400               	retlw	0
  1599  0174  3405               	retlw	5
  1600  0175  3409               	retlw	9
  1601  0176  3419               	retlw	25
  1602  0177  3401               	retlw	1
  1603  0178  3429               	retlw	41
  1604  0179  3403               	retlw	3
  1605  017A  3415               	retlw	21
  1606  017B  3400               	retlw	0
  1607  017C  3425               	retlw	37
  1608  017D  3401               	retlw	1
  1609  017E  3495               	retlw	149
  1610  017F  3403               	retlw	3
  1611  0180  3475               	retlw	117
  1612  0181  3401               	retlw	1
  1613  0182  3481               	retlw	129
  1614  0183  3402               	retlw	2
  1615  0184  3495               	retlw	149
  1616  0185  3401               	retlw	1
  1617  0186  3475               	retlw	117
  1618  0187  3405               	retlw	5
  1619  0188  3481               	retlw	129
  1620  0189  3401               	retlw	1
  1621  018A  3405               	retlw	5
  1622  018B  3401               	retlw	1
  1623  018C  3409               	retlw	9
  1624  018D  3430               	retlw	48
  1625  018E  3409               	retlw	9
  1626  018F  3431               	retlw	49
  1627  0190  3415               	retlw	21
  1628  0191  3481               	retlw	129
  1629  0192  3425               	retlw	37
  1630  0193  347F               	retlw	127
  1631  0194  3475               	retlw	117
  1632  0195  3408               	retlw	8
  1633  0196  3495               	retlw	149
  1634  0197  3402               	retlw	2
  1635  0198  3481               	retlw	129
  1636  0199  3406               	retlw	6
  1637  019A  34C0               	retlw	192
  1638  019B  34C0               	retlw	192
  1639  019C                     __end_of_hid_rpt01:	
  1640  019C                     _sd002:	
  1641  019C  342E               	retlw	46
  1642  019D  3403               	retlw	3
  1643  019E  344D               	retlw	77
  1644  019F  3400               	retlw	0
  1645  01A0  346F               	retlw	111
  1646  01A1  3400               	retlw	0
  1647  01A2  3475               	retlw	117
  1648  01A3  3400               	retlw	0
  1649  01A4  3473               	retlw	115
  1650  01A5  3400               	retlw	0
  1651  01A6  3465               	retlw	101
  1652  01A7  3400               	retlw	0
  1653  01A8  3420               	retlw	32
  1654  01A9  3400               	retlw	0
  1655  01AA  3449               	retlw	73
  1656  01AB  3400               	retlw	0
  1657  01AC  346E               	retlw	110
  1658  01AD  3400               	retlw	0
  1659  01AE  3420               	retlw	32
  1660  01AF  3400               	retlw	0
  1661  01B0  3461               	retlw	97
  1662  01B1  3400               	retlw	0
  1663  01B2  3420               	retlw	32
  1664  01B3  3400               	retlw	0
  1665  01B4  3453               	retlw	83
  1666  01B5  3400               	retlw	0
  1667  01B6  3471               	retlw	113
  1668  01B7  3400               	retlw	0
  1669  01B8  3475               	retlw	117
  1670  01B9  3400               	retlw	0
  1671  01BA  3461               	retlw	97
  1672  01BB  3400               	retlw	0
  1673  01BC  3472               	retlw	114
  1674  01BD  3400               	retlw	0
  1675  01BE  3465               	retlw	101
  1676  01BF  3400               	retlw	0
  1677  01C0  3420               	retlw	32
  1678  01C1  3400               	retlw	0
  1679  01C2  3444               	retlw	68
  1680  01C3  3400               	retlw	0
  1681  01C4  3465               	retlw	101
  1682  01C5  3400               	retlw	0
  1683  01C6  346D               	retlw	109
  1684  01C7  3400               	retlw	0
  1685  01C8  346F               	retlw	111
  1686  01C9  3400               	retlw	0
  1687  01CA                     __end_of_sd002:	
  1688  01CA                     _configDescriptor1:	
  1689  01CA  3409               	retlw	9
  1690  01CB  3402               	retlw	2
  1691  01CC  3422               	retlw	34
  1692  01CD  3400               	retlw	0
  1693  01CE  3401               	retlw	1
  1694  01CF  3401               	retlw	1
  1695  01D0  3400               	retlw	0
  1696  01D1  34C0               	retlw	192
  1697  01D2  3432               	retlw	50
  1698  01D3  3409               	retlw	9
  1699  01D4  3404               	retlw	4
  1700  01D5  3400               	retlw	0
  1701  01D6  3400               	retlw	0
  1702  01D7  3401               	retlw	1
  1703  01D8  3403               	retlw	3
  1704  01D9  3401               	retlw	1
  1705  01DA  3402               	retlw	2
  1706  01DB  3400               	retlw	0
  1707  01DC  3409               	retlw	9
  1708  01DD  3421               	retlw	33
  1709  01DE  3411               	retlw	17
  1710  01DF  3401               	retlw	1
  1711  01E0  3400               	retlw	0
  1712  01E1  3401               	retlw	1
  1713  01E2  3422               	retlw	34
  1714  01E3  3432               	retlw	50
  1715  01E4  3400               	retlw	0
  1716  01E5  3407               	retlw	7
  1717  01E6  3405               	retlw	5
  1718  01E7  3481               	retlw	129
  1719  01E8  3403               	retlw	3
  1720  01E9  3403               	retlw	3
  1721  01EA  3400               	retlw	0
  1722  01EB  3401               	retlw	1
  1723  01EC                     __end_of_configDescriptor1:	
  1724  01EC                     _device_dsc:	
  1725  01EC  3412               	retlw	18
  1726  01ED  3401               	retlw	1
  1727  01EE  3400               	retlw	0
  1728  01EF  3402               	retlw	2
  1729  01F0  3400               	retlw	0
  1730  01F1  3400               	retlw	0
  1731  01F2  3400               	retlw	0
  1732  01F3  3408               	retlw	8
  1733  01F4  34D8               	retlw	216
  1734  01F5  3404               	retlw	4
  1735  01F6  3400               	retlw	0
  1736  01F7  3400               	retlw	0
  1737  01F8  3403               	retlw	3
  1738  01F9  3400               	retlw	0
  1739  01FA  3401               	retlw	1
  1740  01FB  3402               	retlw	2
  1741  01FC  3400               	retlw	0
  1742  01FD  3401               	retlw	1
  1743  01FE                     __end_of_device_dsc:	
  1744  01FE                     _sd000:	
  1745  01FE  3404               	retlw	4
  1746  01FF  3403               	retlw	3
  1747  0200  3409               	retlw	9
  1748  0201  3404               	retlw	4
  1749  0202                     __end_of_sd000:	
  1750  000B                     _INTCONbits	set	11
  1751  0012                     _PIR2bits	set	18
  1752  000C                     _PORTAbits	set	12
  1753  009D                     _ADCON0	set	157
  1754  009D                     _ADCON0bits	set	157
  1755  009E                     _ADCON1	set	158
  1756  009F                     _ADCON2	set	159
  1757  009C                     _ADRESH	set	156
  1758  009B                     _ADRESL	set	155
  1759  0092                     _PIE2bits	set	146
  1760  008D                     _TRISBbits	set	141
  1761  008E                     _TRISCbits	set	142
  1762  010E                     _LATCbits	set	270
  1763  018D                     _ANSELBbits	set	397
  1764  0E96                     _UADDR	set	3734
  1765  0E91                     _UCFG	set	3729
  1766  0E8E                     _UCON	set	3726
  1767  0E8E                     _UCONbits	set	3726
  1768  0E97                     _UEIE	set	3735
  1769  0E93                     _UEIR	set	3731
  1770  0E98                     _UEP0bits	set	3736
  1771  0E92                     _UIE	set	3730
  1772  0E92                     _UIEbits	set	3730
  1773  0E90                     _UIR	set	3728
  1774  0E90                     _UIRbits	set	3728
  1775  0E8F                     _USTAT	set	3727
  1776  0E98                     _UEP0	set	3736
  1777  0E99                     _UEP1	set	3737
  1778                           
  1779                           ; #config settings
  1780  0000                     
  1781                           	psect	cinit
  1782  0012                     start_initialization:	
  1783  0012                     __initialization:	
  1784                           
  1785                           ; Clear objects allocated to BANK0
  1786  0012  3064               	movlw	low __pbssBANK0
  1787  0013  0084               	movwf	4
  1788  0014  3000               	movlw	high __pbssBANK0
  1789  0015  0085               	movwf	5
  1790  0016  300C               	movlw	12
  1791  0017  3187  27F8  3180   	fcall	clear_ram0
  1792                           
  1793                           ; Clear objects allocated to BANK1
  1794  001A  30A3               	movlw	low __pbssBANK1
  1795  001B  0084               	movwf	4
  1796  001C  3000               	movlw	high __pbssBANK1
  1797  001D  0085               	movwf	5
  1798  001E  302D               	movlw	45
  1799  001F  3187  27F8         	fcall	clear_ram0
  1800  0021                     end_of_initialization:	
  1801                           ;End of C runtime variable initialization code
  1802                           
  1803  0021                     __end_of__initialization:	
  1804  0021  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1805  0022  0020               	movlb	0
  1806  0023  318B  2B38         	ljmp	_main	;jump to C main() function
  1807                           
  1808                           	psect	bssBANK0
  1809  0064                     __pbssBANK0:	
  1810  0064                     APP_LEDUpdateUSBStatus@ledCount:	
  1811  0064                     	ds	2
  1812  0066                     _USBDeferStatusStagePacket:	
  1813  0066                     	ds	1
  1814  0067                     _USBStatusStageTimeoutCounter:	
  1815  0067                     	ds	1
  1816  0068                     _controlTransferState:	
  1817  0068                     	ds	1
  1818  0069                     _endpoint_number:	
  1819  0069                     	ds	1
  1820  006A                     _pBDTEntryEP0OutCurrent:	
  1821  006A                     	ds	1
  1822  006B                     _pBDTEntryEP0OutNext:	
  1823  006B                     	ds	1
  1824  006C                     _shortPacketStatus:	
  1825  006C                     	ds	1
  1826  006D                     _USBActiveConfiguration:	
  1827  006D                     	ds	1
  1828  006E                     _USBAlternateInterface:	
  1829  006E                     	ds	1
  1830  006F                     _USTATcopy:	
  1831  006F                     	ds	1
  1832                           
  1833                           	psect	bssBANK1
  1834  00A3                     __pbssBANK1:	
  1835  00A3                     _mouse:	
  1836  00A3                     	ds	9
  1837  00AC                     _outPipes:	
  1838  00AC                     	ds	7
  1839  00B3                     _inPipes:	
  1840  00B3                     	ds	5
  1841  00B8                     _USB1msTickCount:	
  1842  00B8                     	ds	4
  1843  00BC                     _ep_data_in:	
  1844  00BC                     	ds	2
  1845  00BE                     _ep_data_out:	
  1846  00BE                     	ds	2
  1847  00C0                     _pBDTEntryIn:	
  1848  00C0                     	ds	2
  1849  00C2                     _pBDTEntryOut:	
  1850  00C2                     	ds	2
  1851  00C4                     _BothEP0OutUOWNsSet:	
  1852  00C4                     	ds	1
  1853  00C5                     _RemoteWakeup:	
  1854  00C5                     	ds	1
  1855  00C6                     _USBBusIsSuspended:	
  1856  00C6                     	ds	1
  1857  00C7                     _USBDeferINDataStagePackets:	
  1858  00C7                     	ds	1
  1859  00C8                     _USBDeferOUTDataStagePackets:	
  1860  00C8                     	ds	1
  1861  00C9                     _USBDeviceState:	
  1862  00C9                     	ds	1
  1863  00CA                     _USBStatusStageEnabledFlag1:	
  1864  00CA                     	ds	1
  1865  00CB                     _USBStatusStageEnabledFlag2:	
  1866  00CB                     	ds	1
  1867  00CC                     _USBTicksSinceSuspendEnd:	
  1868  00CC                     	ds	1
  1869  00CD                     _pDst:	
  1870  00CD                     	ds	1
  1871  00CE                     _active_protocol:	
  1872  00CE                     	ds	1
  1873  00CF                     _idle_rate:	
  1874  00CF                     	ds	1
  1875                           
  1876                           	psect	clrtext
  1877  07F8                     clear_ram0:	
  1878                           ;	Called with FSR0 containing the base address, and
  1879                           ;	WREG with the size to clear
  1880                           
  1881  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1882  07F9                     clrloop0:	
  1883  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1884  07FA  3101               	addfsr 0,1
  1885  07FB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1886  07FC  2FF9               	goto	clrloop0	;have we reached the end yet?
  1887  07FD  3400               	retlw	0	;all done for this memory range, return
  1888                           
  1889                           	psect	cstackBANK1
  1890  00D0                     __pcstackBANK1:	
  1891  00D0                     ??_LED_Enable:	
  1892  00D0                     ??_BUTTON_Enable:	
  1893                           ; 0 bytes @ 0x0
  1894                           
  1895  00D0                     ??_BUTTON_IsPressed:	
  1896                           ; 0 bytes @ 0x0
  1897                           
  1898  00D0                     ??_USBDeviceInit:	
  1899                           ; 0 bytes @ 0x0
  1900                           
  1901  00D0                     ??_USBDeviceAttach:	
  1902                           ; 0 bytes @ 0x0
  1903                           
  1904  00D0                     BUTTON_IsPressed@button:	
  1905                           ; 0 bytes @ 0x0
  1906                           
  1907  00D0                     BUTTON_Enable@button:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910  00D0                     LED_Enable@led:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913                           
  1914                           ; 1 bytes @ 0x0
  1915  00D0                     	ds	1
  1916  00D1                     ??_SYSTEM_Initialize:	
  1917  00D1                     ??_APP_DeviceMouseTasks:	
  1918                           ; 0 bytes @ 0x1
  1919                           
  1920  00D1                     SYSTEM_Initialize@state:	
  1921                           ; 0 bytes @ 0x1
  1922                           
  1923  00D1                     USBDeviceInit@p:	
  1924                           ; 1 bytes @ 0x1
  1925                           
  1926                           
  1927                           ; 2 bytes @ 0x1
  1928  00D1                     	ds	1
  1929  00D2                     APP_DeviceMouseTasks@currentButtonState:	
  1930                           
  1931                           ; 1 bytes @ 0x2
  1932  00D2                     	ds	1
  1933  00D3                     USBDeviceInit@i_1231:	
  1934                           
  1935                           ; 1 bytes @ 0x3
  1936  00D3                     	ds	1
  1937  00D4                     USBDeviceInit@i:	
  1938                           
  1939                           ; 1 bytes @ 0x4
  1940  00D4                     	ds	1
  1941  00D5                     ??_main:	
  1942                           
  1943                           	psect	cstackCOMMON
  1944  0070                     __pcstackCOMMON:	
  1945                           ; 0 bytes @ 0x5
  1946                           
  1947  0070                     ?_LED_Enable:	
  1948  0070                     ?_BUTTON_Enable:	
  1949                           ; 0 bytes @ 0x0
  1950                           
  1951  0070                     ?_USBDeviceTasks:	
  1952                           ; 0 bytes @ 0x0
  1953                           
  1954  0070                     ?_USBDeviceInit:	
  1955                           ; 0 bytes @ 0x0
  1956                           
  1957  0070                     ?_USBDeviceAttach:	
  1958                           ; 0 bytes @ 0x0
  1959                           
  1960  0070                     ?_APP_LEDUpdateUSBStatus:	
  1961                           ; 0 bytes @ 0x0
  1962                           
  1963  0070                     ?_USBCheckHIDRequest:	
  1964                           ; 0 bytes @ 0x0
  1965                           
  1966  0070                     ?_LED_Off:	
  1967                           ; 0 bytes @ 0x0
  1968                           
  1969  0070                     ??_LED_Off:	
  1970                           ; 0 bytes @ 0x0
  1971                           
  1972  0070                     ?_LED_On:	
  1973                           ; 0 bytes @ 0x0
  1974                           
  1975  0070                     ??_LED_On:	
  1976                           ; 0 bytes @ 0x0
  1977                           
  1978  0070                     ?_USBWakeFromSuspend:	
  1979                           ; 0 bytes @ 0x0
  1980                           
  1981  0070                     ?_USBSuspend:	
  1982                           ; 0 bytes @ 0x0
  1983                           
  1984  0070                     ?_USBIncrement1msInternalTimers:	
  1985                           ; 0 bytes @ 0x0
  1986                           
  1987  0070                     ??_USBIncrement1msInternalTimers:	
  1988                           ; 0 bytes @ 0x0
  1989                           
  1990  0070                     ?_USBCtrlEPAllowStatusStage:	
  1991                           ; 0 bytes @ 0x0
  1992                           
  1993  0070                     ??_USBCtrlEPAllowStatusStage:	
  1994                           ; 0 bytes @ 0x0
  1995                           
  1996  0070                     ?_USBStallHandler:	
  1997                           ; 0 bytes @ 0x0
  1998                           
  1999  0070                     ??_USBStallHandler:	
  2000                           ; 0 bytes @ 0x0
  2001                           
  2002  0070                     ?_USBCtrlEPService:	
  2003                           ; 0 bytes @ 0x0
  2004                           
  2005  0070                     ?_USBConfigureEndpoint:	
  2006                           ; 0 bytes @ 0x0
  2007                           
  2008  0070                     ?_USBCtrlTrfTxService:	
  2009                           ; 0 bytes @ 0x0
  2010                           
  2011  0070                     ??_USBCtrlTrfTxService:	
  2012                           ; 0 bytes @ 0x0
  2013                           
  2014  0070                     ?_USBCtrlTrfSetupHandler:	
  2015                           ; 0 bytes @ 0x0
  2016                           
  2017  0070                     ?_USBCtrlTrfOutHandler:	
  2018                           ; 0 bytes @ 0x0
  2019                           
  2020  0070                     ?_USBCtrlTrfInHandler:	
  2021                           ; 0 bytes @ 0x0
  2022                           
  2023  0070                     ?_USBCheckStdRequest:	
  2024                           ; 0 bytes @ 0x0
  2025                           
  2026  0070                     ?_USBStdFeatureReqHandler:	
  2027                           ; 0 bytes @ 0x0
  2028                           
  2029  0070                     ?_SYSTEM_Initialize:	
  2030                           ; 0 bytes @ 0x0
  2031                           
  2032  0070                     ?_SYS_InterruptHigh:	
  2033                           ; 0 bytes @ 0x0
  2034                           
  2035  0070                     ?_APP_DeviceMouseInitialize:	
  2036                           ; 0 bytes @ 0x0
  2037                           
  2038  0070                     ?_APP_DeviceMouseTasks:	
  2039                           ; 0 bytes @ 0x0
  2040                           
  2041  0070                     ?_APP_DeviceMouseSOFHandler:	
  2042                           ; 0 bytes @ 0x0
  2043                           
  2044  0070                     ?_main:	
  2045                           ; 0 bytes @ 0x0
  2046                           
  2047  0070                     ?_USBCtrlEPAllowDataStage:	
  2048                           ; 0 bytes @ 0x0
  2049                           
  2050  0070                     ?_USBCtrlEPServiceComplete:	
  2051                           ; 0 bytes @ 0x0
  2052                           
  2053  0070                     ?_USBCtrlTrfRxService:	
  2054                           ; 0 bytes @ 0x0
  2055                           
  2056  0070                     ?_USBStdSetCfgHandler:	
  2057                           ; 0 bytes @ 0x0
  2058                           
  2059  0070                     ?_USBStdGetDscHandler:	
  2060                           ; 0 bytes @ 0x0
  2061                           
  2062  0070                     ??_USBStdGetDscHandler:	
  2063                           ; 0 bytes @ 0x0
  2064                           
  2065  0070                     ?_USBStdGetStatusHandler:	
  2066                           ; 0 bytes @ 0x0
  2067                           
  2068  0070                     ??_USBStdGetStatusHandler:	
  2069                           ; 0 bytes @ 0x0
  2070                           
  2071  0070                     ?i1_SYSTEM_Initialize:	
  2072                           ; 0 bytes @ 0x0
  2073                           
  2074  0070                     ?i1_BUTTON_Enable:	
  2075                           ; 0 bytes @ 0x0
  2076                           
  2077  0070                     ??i1_BUTTON_Enable:	
  2078                           ; 0 bytes @ 0x0
  2079                           
  2080  0070                     ?i1_LED_Enable:	
  2081                           ; 0 bytes @ 0x0
  2082                           
  2083  0070                     ??i1_LED_Enable:	
  2084                           ; 0 bytes @ 0x0
  2085                           
  2086  0070                     ?i1_USBDeviceInit:	
  2087                           ; 0 bytes @ 0x0
  2088                           
  2089  0070                     ??i1_USBDeviceInit:	
  2090                           ; 0 bytes @ 0x0
  2091                           
  2092  0070                     ?_BUTTON_IsPressed:	
  2093                           ; 0 bytes @ 0x0
  2094                           
  2095  0070                     ?_USBTransferOnePacket:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098  0070                     ?_memset:	
  2099                           ; 1 bytes @ 0x0
  2100                           
  2101  0070                     ?___bmul:	
  2102                           ; 1 bytes @ 0x0
  2103                           
  2104  0070                     LED_On@led:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107  0070                     LED_Off@led:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110  0070                     USBTransferOnePacket@dir:	
  2111                           ; 1 bytes @ 0x0
  2112                           
  2113  0070                     USBConfigureEndpoint@direction:	
  2114                           ; 1 bytes @ 0x0
  2115                           
  2116  0070                     ___bmul@multiplicand:	
  2117                           ; 1 bytes @ 0x0
  2118                           
  2119  0070                     i1BUTTON_Enable@button:	
  2120                           ; 1 bytes @ 0x0
  2121                           
  2122  0070                     i1LED_Enable@led:	
  2123                           ; 1 bytes @ 0x0
  2124                           
  2125  0070                     memset@c:	
  2126                           ; 1 bytes @ 0x0
  2127                           
  2128                           
  2129                           ; 2 bytes @ 0x0
  2130  0070                     	ds	1
  2131  0071                     ??_APP_LEDUpdateUSBStatus:	
  2132  0071                     ??_USBConfigureEndpoint:	
  2133                           ; 0 bytes @ 0x1
  2134                           
  2135  0071                     ??___bmul:	
  2136                           ; 0 bytes @ 0x1
  2137                           
  2138  0071                     ??i1_SYSTEM_Initialize:	
  2139                           ; 0 bytes @ 0x1
  2140                           
  2141  0071                     USBTransferOnePacket@data:	
  2142                           ; 0 bytes @ 0x1
  2143                           
  2144  0071                     USBStdGetStatusHandler@p:	
  2145                           ; 1 bytes @ 0x1
  2146                           
  2147  0071                     i1SYSTEM_Initialize@state:	
  2148                           ; 1 bytes @ 0x1
  2149                           
  2150  0071                     i1USBDeviceInit@p:	
  2151                           ; 1 bytes @ 0x1
  2152                           
  2153                           
  2154                           ; 2 bytes @ 0x1
  2155  0071                     	ds	1
  2156  0072                     ??_USBCtrlTrfRxService:	
  2157  0072                     USBTransferOnePacket@len:	
  2158                           ; 0 bytes @ 0x2
  2159                           
  2160  0072                     USBCtrlTrfTxService@byteToSend:	
  2161                           ; 1 bytes @ 0x2
  2162                           
  2163  0072                     ___bmul@product:	
  2164                           ; 1 bytes @ 0x2
  2165                           
  2166  0072                     memset@n:	
  2167                           ; 1 bytes @ 0x2
  2168                           
  2169                           
  2170                           ; 2 bytes @ 0x2
  2171  0072                     	ds	1
  2172  0073                     ??_USBTransferOnePacket:	
  2173  0073                     ??_USBCtrlTrfInHandler:	
  2174                           ; 0 bytes @ 0x3
  2175                           
  2176  0073                     ??_USBCtrlEPAllowDataStage:	
  2177                           ; 0 bytes @ 0x3
  2178                           
  2179  0073                     ___bmul@multiplier:	
  2180                           ; 0 bytes @ 0x3
  2181                           
  2182  0073                     i1USBDeviceInit@i_1231:	
  2183                           ; 1 bytes @ 0x3
  2184                           
  2185                           
  2186                           ; 1 bytes @ 0x3
  2187  0073                     	ds	1
  2188  0074                     ??_memset:	
  2189  0074                     ?_APP_DeviceMouseIdleRateCallback:	
  2190                           ; 0 bytes @ 0x4
  2191                           
  2192  0074                     APP_DeviceMouseIdleRateCallback@idleRate:	
  2193                           ; 0 bytes @ 0x4
  2194                           
  2195  0074                     USBCtrlTrfRxService@i:	
  2196                           ; 1 bytes @ 0x4
  2197                           
  2198  0074                     i1USBDeviceInit@i:	
  2199                           ; 1 bytes @ 0x4
  2200                           
  2201                           
  2202                           ; 1 bytes @ 0x4
  2203  0074                     	ds	1
  2204  0075                     ??_APP_DeviceMouseIdleRateCallback:	
  2205  0075                     ??_USBCtrlEPServiceComplete:	
  2206                           ; 0 bytes @ 0x5
  2207                           
  2208  0075                     USBTransferOnePacket@ep:	
  2209                           ; 0 bytes @ 0x5
  2210                           
  2211  0075                     USBConfigureEndpoint@EPNum:	
  2212                           ; 1 bytes @ 0x5
  2213                           
  2214  0075                     USBCtrlTrfRxService@byteToRead:	
  2215                           ; 1 bytes @ 0x5
  2216                           
  2217  0075                     USBCtrlTrfInHandler@lastDTS:	
  2218                           ; 1 bytes @ 0x5
  2219                           
  2220  0075                     memset@p:	
  2221                           ; 1 bytes @ 0x5
  2222                           
  2223                           
  2224                           ; 1 bytes @ 0x5
  2225  0075                     	ds	1
  2226  0076                     ??_USBCtrlTrfOutHandler:	
  2227  0076                     USBTransferOnePacket@handle:	
  2228                           ; 0 bytes @ 0x6
  2229                           
  2230  0076                     USBConfigureEndpoint@handle:	
  2231                           ; 1 bytes @ 0x6
  2232                           
  2233  0076                     memset@p1:	
  2234                           ; 1 bytes @ 0x6
  2235                           
  2236                           
  2237                           ; 1 bytes @ 0x6
  2238  0076                     	ds	1
  2239  0077                     ?_USBEnableEndpoint:	
  2240  0077                     ??_APP_DeviceMouseSOFHandler:	
  2241                           ; 0 bytes @ 0x7
  2242                           
  2243  0077                     USBEnableEndpoint@options:	
  2244                           ; 0 bytes @ 0x7
  2245                           
  2246                           
  2247                           ; 1 bytes @ 0x7
  2248  0077                     	ds	1
  2249  0078                     ??_USBEnableEndpoint:	
  2250  0078                     APP_DeviceMouseIdleRateCallback@reportId:	
  2251                           ; 0 bytes @ 0x8
  2252                           
  2253                           
  2254                           ; 1 bytes @ 0x8
  2255  0078                     	ds	1
  2256  0079                     ??_USBCheckHIDRequest:	
  2257                           
  2258                           ; 0 bytes @ 0x9
  2259  0079                     	ds	1
  2260  007A                     USBEnableEndpoint@p:	
  2261                           
  2262                           ; 2 bytes @ 0xA
  2263  007A                     	ds	2
  2264  007C                     USBEnableEndpoint@ep:	
  2265                           
  2266                           ; 1 bytes @ 0xC
  2267  007C                     	ds	1
  2268  007D                     ??_APP_DeviceMouseInitialize:	
  2269                           
  2270                           ; 0 bytes @ 0xD
  2271  007D                     	ds	1
  2272  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2273                           
  2274                           	psect	cstackBANK0
  2275  0050                     __pcstackBANK0:	
  2276                           ; 0 bytes @ 0xE
  2277                           
  2278  0050                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2279  0050                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282                           
  2283                           ; 2 bytes @ 0x0
  2284  0050                     	ds	2
  2285  0052                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2286                           
  2287                           ; 1 bytes @ 0x2
  2288  0052                     	ds	1
  2289  0053                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2290                           
  2291                           ; 2 bytes @ 0x3
  2292  0053                     	ds	2
  2293  0055                     ??_USBWakeFromSuspend:	
  2294  0055                     ??_USBSuspend:	
  2295                           ; 0 bytes @ 0x5
  2296                           
  2297  0055                     ??_USBStdFeatureReqHandler:	
  2298                           ; 0 bytes @ 0x5
  2299                           
  2300  0055                     ??_USBStdSetCfgHandler:	
  2301                           ; 0 bytes @ 0x5
  2302                           
  2303                           
  2304                           ; 0 bytes @ 0x5
  2305  0055                     	ds	1
  2306  0056                     USBStdSetCfgHandler@p:	
  2307                           
  2308                           ; 2 bytes @ 0x6
  2309  0056                     	ds	1
  2310  0057                     USBStdFeatureReqHandler@pUEP:	
  2311                           
  2312                           ; 2 bytes @ 0x7
  2313  0057                     	ds	1
  2314  0058                     USBStdSetCfgHandler@i_1573:	
  2315                           
  2316                           ; 1 bytes @ 0x8
  2317  0058                     	ds	1
  2318  0059                     USBStdSetCfgHandler@i:	
  2319  0059                     USBStdFeatureReqHandler@current_ep_data:	
  2320                           ; 1 bytes @ 0x9
  2321                           
  2322                           
  2323                           ; 1 bytes @ 0x9
  2324  0059                     	ds	1
  2325  005A                     USBStdFeatureReqHandler@p:	
  2326                           
  2327                           ; 1 bytes @ 0xA
  2328  005A                     	ds	1
  2329  005B                     ??_USBCheckStdRequest:	
  2330                           
  2331                           ; 0 bytes @ 0xB
  2332  005B                     	ds	1
  2333  005C                     ??_USBCtrlTrfSetupHandler:	
  2334                           
  2335                           ; 0 bytes @ 0xC
  2336  005C                     	ds	1
  2337  005D                     ??_USBCtrlEPService:	
  2338                           
  2339                           ; 0 bytes @ 0xD
  2340  005D                     	ds	3
  2341  0060                     ??_USBDeviceTasks:	
  2342                           
  2343                           ; 0 bytes @ 0x10
  2344  0060                     	ds	2
  2345  0062                     USBDeviceTasks@i:	
  2346                           
  2347                           ; 1 bytes @ 0x12
  2348  0062                     	ds	1
  2349  0063                     ??_SYS_InterruptHigh:	
  2350                           
  2351                           ; 0 bytes @ 0x13
  2352  0063                     	ds	1
  2353                           
  2354                           	psect	maintext
  2355  0B38                     __pmaintext:	
  2356 ;;
  2357 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2358 ;;
  2359 ;; *************** function _main *****************
  2360 ;; Defined at:
  2361 ;;		line 49 in file "../src/main.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;		None               void
  2368 ;; Registers used:
  2369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : B1F/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2379 ;;Total ram usage:        0 bytes
  2380 ;; Hardware stack levels required when called:   12
  2381 ;; This function calls:
  2382 ;;		_APP_DeviceMouseTasks
  2383 ;;		_SYSTEM_Initialize
  2384 ;;		_USBDeviceAttach
  2385 ;;		_USBDeviceInit
  2386 ;; This function is called by:
  2387 ;;		Startup code after reset
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function _main
  2393  0B38                     _main:	
  2394                           
  2395                           ;main.c: 51: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2396                           
  2397                           ;incstack = 0
  2398                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2399  0B38  3000               	movlw	0
  2400  0B39  318B  237D  318B   	fcall	_SYSTEM_Initialize
  2401                           
  2402                           ;main.c: 53: USBDeviceInit();
  2403  0B3C  3182  22DC  318B   	fcall	_USBDeviceInit
  2404                           
  2405                           ;main.c: 54: USBDeviceAttach();
  2406  0B3F  318C  2416  318B   	fcall	_USBDeviceAttach
  2407  0B42                     l3800:	
  2408                           ;main.c: 56: while(1)
  2409                           
  2410                           ;main.c: 90: {
  2411                           ;main.c: 92: continue;
  2412                           
  2413                           ;main.c: 80: {
  2414                           ;main.c: 82: continue;
  2415                           
  2416                           
  2417                           ;main.c: 57: {
  2418                           ;main.c: 58: ;
  2419                           ;main.c: 79: if( USBDeviceState < CONFIGURED_STATE )
  2420  0B42  3020               	movlw	32
  2421  0B43  0021               	movlb	1	; select bank1
  2422  0B44  0249               	subwf	_USBDeviceState^(0+128),w	;volatile
  2423  0B45  1C03               	btfss	3,0
  2424  0B46  2B42               	goto	l3800
  2425                           
  2426                           ;main.c: 83: }
  2427                           ;main.c: 89: if( UCONbits.SUSPND == 1 )
  2428  0B47  003D               	movlb	29	; select bank29
  2429  0B48  188E               	btfsc	14,1	;volatile
  2430  0B49  2B42               	goto	l3800
  2431                           
  2432                           ;main.c: 93: }
  2433                           ;main.c: 96: APP_DeviceMouseTasks();
  2434  0B4A  318C  244F  318B   	fcall	_APP_DeviceMouseTasks
  2435  0B4D  2B42               	goto	l3800
  2436  0B4E                     __end_of_main:	
  2437                           
  2438                           	psect	text1
  2439  02DC                     __ptext1:	
  2440 ;; *************** function _USBDeviceInit *****************
  2441 ;; Defined at:
  2442 ;;		line 295 in file "../../../../../../framework/usb/src/usb_device.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  p               2    1[BANK1 ] PTR unsigned char 
  2447 ;;		 -> UEP1(1), 
  2448 ;;  i               1    3[BANK1 ] unsigned char 
  2449 ;;  i               1    4[BANK1 ] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;		None               void
  2452 ;; Registers used:
  2453 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2460 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2461 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;Total ram usage:        5 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:   10
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           
  2474                           ;psect for function _USBDeviceInit
  2475  02DC                     _USBDeviceInit:	
  2476                           
  2477                           ;usb_device.c: 297: uint8_t i;
  2478                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2482  02DC  0021               	movlb	1	; select bank1
  2483  02DD  1112               	bcf	18,2	;volatile
  2484                           
  2485                           ;usb_device.c: 303: ;
  2486                           ;usb_device.c: 306: {UEIR = 0;};
  2487  02DE  003D               	movlb	29	; select bank29
  2488  02DF  0193               	clrf	19	;volatile
  2489                           
  2490                           ;usb_device.c: 309: {UIR = 0;};
  2491  02E0  0190               	clrf	16	;volatile
  2492                           
  2493                           ;usb_device.c: 312: UEP0 = 0;
  2494  02E1  0198               	clrf	24	;volatile
  2495                           
  2496                           ;usb_device.c: 314: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  2497  02E2  300E               	movlw	14
  2498  02E3  0021               	movlb	1	; select bank1
  2499  02E4  00D2               	movwf	(USBDeviceInit@p+1)^(0+128)
  2500  02E5  3099               	movlw	153
  2501  02E6  00D1               	movwf	USBDeviceInit@p^(0+128)
  2502  02E7  01D3               	clrf	USBDeviceInit@i_1231^(0+128)
  2503  02E8  0853               	movf	USBDeviceInit@i_1231^(0+128),w
  2504  02E9  1D03               	btfss	3,2
  2505  02EA  2AFB               	goto	l3714
  2506  02EB                     l3706:	
  2507  02EB  0851               	movf	USBDeviceInit@p^(0+128),w
  2508  02EC  0086               	movwf	6
  2509  02ED  0852               	movf	(USBDeviceInit@p+1)^(0+128),w
  2510  02EE  0087               	movwf	7
  2511  02EF  0181               	clrf	1
  2512  02F0  3001               	movlw	1
  2513  02F1  07D1               	addwf	USBDeviceInit@p^(0+128),f
  2514  02F2  3000               	movlw	0
  2515  02F3  3DD2               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  2516  02F4  3001               	movlw	1
  2517  02F5  00D0               	movwf	??_USBDeviceInit^(0+128)
  2518  02F6  0850               	movf	??_USBDeviceInit^(0+128),w
  2519  02F7  07D3               	addwf	USBDeviceInit@i_1231^(0+128),f
  2520  02F8  0853               	movf	USBDeviceInit@i_1231^(0+128),w
  2521  02F9  1903               	btfsc	3,2
  2522  02FA  2AEB               	goto	l3706
  2523  02FB                     l3714:	
  2524                           
  2525                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2526  02FB  3016               	movlw	22
  2527  02FC  003D               	movlb	29	; select bank29
  2528  02FD  0091               	movwf	17	;volatile
  2529  02FE  309F               	movlw	159
  2530  02FF  0097               	movwf	23	;volatile
  2531  0300  307B               	movlw	123
  2532  0301  0092               	movwf	18	;volatile
  2533                           
  2534                           ;usb_device.c: 319: ;
  2535                           ;usb_device.c: 322: ;
  2536                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  2537  0302  0021               	movlb	1	; select bank1
  2538  0303  01D4               	clrf	USBDeviceInit@i^(0+128)
  2539  0304  3008               	movlw	8
  2540  0305  0254               	subwf	USBDeviceInit@i^(0+128),w
  2541  0306  1803               	btfsc	3,0
  2542  0307  2B21               	goto	l401
  2543  0308                     l3722:	
  2544                           
  2545                           ;usb_device.c: 326: {
  2546                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  2547  0308  0854               	movf	USBDeviceInit@i^(0+128),w
  2548  0309  00D0               	movwf	??_USBDeviceInit^(0+128)
  2549  030A  3001               	movlw	1
  2550  030B                     u3215:	
  2551  030B  35D0               	lslf	??_USBDeviceInit^(0+128),f
  2552  030C  3EFF               	addlw	-1
  2553  030D  1D03               	skipz
  2554  030E  2B0B               	goto	u3215
  2555  030F  3550               	lslf	??_USBDeviceInit^(0+128),w
  2556  0310  3E20               	addlw	32
  2557  0311  0086               	movwf	6
  2558  0312  0187               	clrf	7
  2559  0313  3000               	movlw	0
  2560  0314  3FC0               	movwi [0]fsr1
  2561  0315  3000               	movlw	0
  2562  0316  3FC1               	movwi [1]fsr1
  2563  0317  3FC2               	movwi [2]fsr1
  2564  0318  3FC3               	movwi [3]fsr1
  2565  0319  3001               	movlw	1
  2566  031A  00D0               	movwf	??_USBDeviceInit^(0+128)
  2567  031B  0850               	movf	??_USBDeviceInit^(0+128),w
  2568  031C  07D4               	addwf	USBDeviceInit@i^(0+128),f
  2569  031D  3008               	movlw	8
  2570  031E  0254               	subwf	USBDeviceInit@i^(0+128),w
  2571  031F  1C03               	skipc
  2572  0320  2B08               	goto	l3722
  2573  0321                     l401:	
  2574                           
  2575                           ;usb_device.c: 328: }
  2576                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  2577  0321  003D               	movlb	29	; select bank29
  2578  0322  170E               	bsf	14,6	;volatile
  2579                           
  2580                           ;usb_device.c: 334: UADDR = 0x00;
  2581  0323  0196               	clrf	22	;volatile
  2582                           
  2583                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  2584  0324  120E               	bcf	14,4	;volatile
  2585                           
  2586                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  2587  0325  130E               	bcf	14,6	;volatile
  2588  0326                     l3734:	
  2589                           ;usb_device.c: 343: do
  2590                           
  2591                           
  2592                           ;usb_device.c: 344: {
  2593                           ;usb_device.c: 345: (UIR &= 0xF7);
  2594  0326  30F7               	movlw	247
  2595  0327  0021               	movlb	1	; select bank1
  2596  0328  00D0               	movwf	??_USBDeviceInit^(0+128)
  2597  0329  0850               	movf	??_USBDeviceInit^(0+128),w
  2598  032A  003D               	movlb	29	; select bank29
  2599  032B  0590               	andwf	16,f	;volatile
  2600                           
  2601                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  2602  032C  0021               	movlb	1	; select bank1
  2603  032D  01B5               	clrf	(_inPipes^(0+128)+2)	;volatile
  2604                           
  2605                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  2606  032E  01AE               	clrf	(_outPipes^(0+128)+2)	;volatile
  2607                           
  2608                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  2609  032F  01AF               	clrf	(_outPipes^(0+128)+3)	;volatile
  2610  0330  01B0               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  2611                           
  2612                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  2613  0331  003D               	movlb	29	; select bank29
  2614  0332  1990               	btfsc	16,3	;volatile
  2615  0333  2B26               	goto	l3734
  2616                           
  2617                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  2618  0334  3001               	movlw	1
  2619  0335  0021               	movlb	1	; select bank1
  2620  0336  00D0               	movwf	??_USBDeviceInit^(0+128)
  2621  0337  0850               	movf	??_USBDeviceInit^(0+128),w
  2622  0338  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  2623                           
  2624                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  2625  0339  3001               	movlw	1
  2626  033A  00D0               	movwf	??_USBDeviceInit^(0+128)
  2627  033B  0850               	movf	??_USBDeviceInit^(0+128),w
  2628  033C  00CB               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  2629                           
  2630                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  2631  033D  01C7               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  2632                           
  2633                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  2634  033E  01C8               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  2635                           
  2636                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  2637  033F  01C6               	clrf	_USBBusIsSuspended^(0+128)	;volatile
  2638                           
  2639                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(1+1u); i++)
  2640  0340  01D4               	clrf	USBDeviceInit@i^(0+128)
  2641  0341  3002               	movlw	2
  2642  0342  0254               	subwf	USBDeviceInit@i^(0+128),w
  2643  0343  1803               	btfsc	3,0
  2644  0344  2B61               	goto	l3762
  2645  0345                     l3756:	
  2646                           
  2647                           ;usb_device.c: 364: {
  2648                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  2649  0345  0854               	movf	USBDeviceInit@i^(0+128),w
  2650  0346  3EC0               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2651  0347  0086               	movwf	6
  2652  0348  0187               	clrf	7
  2653  0349  0181               	clrf	1
  2654                           
  2655                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  2656  034A  0854               	movf	USBDeviceInit@i^(0+128),w
  2657  034B  3EC2               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  2658  034C  0086               	movwf	6
  2659  034D  0187               	clrf	7
  2660  034E  0181               	clrf	1
  2661                           
  2662                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  2663  034F  0854               	movf	USBDeviceInit@i^(0+128),w
  2664  0350  3EBC               	addlw	(low (_ep_data_in| 0))& (0+255)
  2665  0351  0086               	movwf	6
  2666  0352  0187               	clrf	7
  2667  0353  0181               	clrf	1
  2668                           
  2669                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  2670  0354  0854               	movf	USBDeviceInit@i^(0+128),w
  2671  0355  3EBE               	addlw	(low (_ep_data_out| 0))& (0+255)
  2672  0356  0086               	movwf	6
  2673  0357  0187               	clrf	7
  2674  0358  0181               	clrf	1
  2675  0359  3001               	movlw	1
  2676  035A  00D0               	movwf	??_USBDeviceInit^(0+128)
  2677  035B  0850               	movf	??_USBDeviceInit^(0+128),w
  2678  035C  07D4               	addwf	USBDeviceInit@i^(0+128),f
  2679  035D  3002               	movlw	2
  2680  035E  0254               	subwf	USBDeviceInit@i^(0+128),w
  2681  035F  1C03               	skipc
  2682  0360  2B45               	goto	l3756
  2683  0361                     l3762:	
  2684                           
  2685                           ;usb_device.c: 369: }
  2686                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2687  0361  3028               	movlw	40
  2688  0362  00D0               	movwf	??_USBDeviceInit^(0+128)
  2689  0363  0850               	movf	??_USBDeviceInit^(0+128),w
  2690  0364  00C0               	movwf	_pBDTEntryIn^(0+128)
  2691                           
  2692                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  2693  0365  3016               	movlw	22
  2694  0366  003D               	movlb	29	; select bank29
  2695  0367  0098               	movwf	24	;volatile
  2696                           
  2697                           ;usb_device.c: 376: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  2698  0368  3000               	movlw	0
  2699  0369  0020               	movlb	0	; select bank0
  2700  036A  00A3               	movwf	35	;volatile
  2701  036B  3040               	movlw	64
  2702  036C  00A2               	movwf	34	;volatile
  2703                           
  2704                           ;usb_device.c: 377: BDT[0].CNT = 8;
  2705  036D  3008               	movlw	8
  2706  036E  00A1               	movwf	33	;volatile
  2707                           
  2708                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  2709  036F  3004               	movlw	4
  2710  0370  0021               	movlb	1	; select bank1
  2711  0371  00D0               	movwf	??_USBDeviceInit^(0+128)
  2712  0372  0850               	movf	??_USBDeviceInit^(0+128),w
  2713  0373  0020               	movlb	0	; select bank0
  2714  0374  00A0               	movwf	32	;volatile
  2715                           
  2716                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  2717  0375  17A0               	bsf	32,7	;volatile
  2718                           
  2719                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  2720  0376  01ED               	clrf	_USBActiveConfiguration	;volatile
  2721                           
  2722                           ;usb_device.c: 384: USB1msTickCount = 0;
  2723  0377  3000               	movlw	0
  2724  0378  0021               	movlb	1	; select bank1
  2725  0379  00BB               	movwf	(_USB1msTickCount+3)^(0+128)	;volatile
  2726  037A  3000               	movlw	0
  2727  037B  00BA               	movwf	(_USB1msTickCount+2)^(0+128)	;volatile
  2728  037C  3000               	movlw	0
  2729  037D  00B9               	movwf	(_USB1msTickCount+1)^(0+128)	;volatile
  2730  037E  3000               	movlw	0
  2731  037F  00B8               	movwf	_USB1msTickCount^(0+128)	;volatile
  2732                           
  2733                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  2734  0380  01CC               	clrf	_USBTicksSinceSuspendEnd^(0+128)	;volatile
  2735                           
  2736                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  2737  0381  01C9               	clrf	_USBDeviceState^(0+128)	;volatile
  2738  0382  0008               	return
  2739  0383                     __end_of_USBDeviceInit:	
  2740                           
  2741                           	psect	text2
  2742  0C16                     __ptext2:	
  2743 ;; *************** function _USBDeviceAttach *****************
  2744 ;; Defined at:
  2745 ;;		line 1370 in file "../../../../../../framework/usb/src/usb_device.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;		None               void
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2762 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2763 ;;Total ram usage:        1 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:   10
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function _USBDeviceAttach
  2775  0C16                     _USBDeviceAttach:	
  2776                           
  2777                           ;usb_device.c: 1374: {
  2778                           ;usb_device.c: 1375: if(1 == 1)
  2779                           
  2780                           ;incstack = 0
  2781                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  2782  0C16  0021               	movlb	1	; select bank1
  2783  0C17  0849               	movf	_USBDeviceState^(0+128),w	;volatile
  2784  0C18  1D03               	btfss	3,2
  2785  0C19  0008               	return
  2786                           
  2787                           ;usb_device.c: 1376: {
  2788                           ;usb_device.c: 1378: UCON = 0;
  2789  0C1A  003D               	movlb	29	; select bank29
  2790  0C1B  018E               	clrf	14	;volatile
  2791                           
  2792                           ;usb_device.c: 1381: UIE = 0;
  2793  0C1C  0192               	clrf	18	;volatile
  2794                           
  2795                           ;usb_device.c: 1385: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  2796  0C1D  3016               	movlw	22
  2797  0C1E  0091               	movwf	17	;volatile
  2798  0C1F  309F               	movlw	159
  2799  0C20  0097               	movwf	23	;volatile
  2800  0C21  307B               	movlw	123
  2801  0C22  0092               	movwf	18	;volatile
  2802                           
  2803                           ;usb_device.c: 1387: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  2804  0C23  0021               	movlb	1	; select bank1
  2805  0C24  1512               	bsf	18,2	;volatile
  2806  0C25  170B               	bsf	11,6	;volatile
  2807  0C26  178B               	bsf	11,7	;volatile
  2808  0C27                     l461:	
  2809                           ;usb_device.c: 1390: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2810                           
  2811  0C27  003D               	movlb	29	; select bank29
  2812  0C28  198E               	btfsc	14,3	;volatile
  2813  0C29  2C2C               	goto	l3790
  2814  0C2A  158E               	bsf	14,3	;volatile
  2815  0C2B  2C27               	goto	l461
  2816  0C2C                     l3790:	
  2817                           
  2818                           ;usb_device.c: 1393: USBDeviceState = ATTACHED_STATE;
  2819  0C2C  3001               	movlw	1
  2820  0C2D  0021               	movlb	1	; select bank1
  2821  0C2E  00D0               	movwf	??_USBDeviceAttach^(0+128)
  2822  0C2F  0850               	movf	??_USBDeviceAttach^(0+128),w
  2823  0C30  00C9               	movwf	_USBDeviceState^(0+128)	;volatile
  2824  0C31  0008               	return
  2825  0C32                     __end_of_USBDeviceAttach:	
  2826                           
  2827                           	psect	text3
  2828  0B7D                     __ptext3:	
  2829 ;; *************** function _SYSTEM_Initialize *****************
  2830 ;; Defined at:
  2831 ;;		line 87 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1459/system.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  state           1    wreg     enum E2864
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  state           1    1[BANK1 ] enum E2864
  2836 ;; Return value:  Size  Location     Type
  2837 ;;		None               void
  2838 ;; Registers used:
  2839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2849 ;;Total ram usage:        1 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:   11
  2852 ;; This function calls:
  2853 ;;		_BUTTON_Enable
  2854 ;;		_LED_Enable
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function _SYSTEM_Initialize
  2862  0B7D                     _SYSTEM_Initialize:	
  2863                           
  2864                           ;incstack = 0
  2865                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2866                           ;SYSTEM_Initialize@state stored from wreg
  2867  0B7D  0021               	movlb	1	; select bank1
  2868  0B7E  00D1               	movwf	SYSTEM_Initialize@state^(0+128)
  2869                           
  2870                           ;system.c: 89: switch(state)
  2871  0B7F  2B88               	goto	l3578
  2872  0B80                     l3574:	
  2873                           ;system.c: 90: {
  2874                           ;system.c: 91: case SYSTEM_STATE_USB_START:
  2875                           
  2876                           
  2877                           ;system.c: 98: LED_Enable(LED_D1);
  2878  0B80  3001               	movlw	1
  2879  0B81  318B  2322  318B   	fcall	_LED_Enable
  2880                           
  2881                           ;system.c: 99: BUTTON_Enable(BUTTON_S1);
  2882  0B84  3001               	movlw	1
  2883  0B85  318A  22CB         	fcall	_BUTTON_Enable
  2884                           
  2885                           ;system.c: 107: }
  2886                           
  2887                           ;system.c: 106: break;
  2888                           
  2889                           ;system.c: 105: case SYSTEM_STATE_USB_RESUME:
  2890                           
  2891                           ;system.c: 103: break;
  2892                           
  2893                           ;system.c: 102: case SYSTEM_STATE_USB_SUSPEND:
  2894                           
  2895                           ;system.c: 100: break;
  2896  0B87  0008               	return
  2897  0B88                     l3578:	
  2898  0B88  0021               	movlb	1	; select bank1
  2899  0B89  0851               	movf	SYSTEM_Initialize@state^(0+128),w
  2900                           
  2901                           ; Switch size 1, requested type "space"
  2902                           ; Number of cases is 3, Range of values is 0 to 2
  2903                           ; switch strategies available:
  2904                           ; Name         Instructions Cycles
  2905                           ; simple_byte           10     6 (average)
  2906                           ; direct_byte           12     6 (fixed)
  2907                           ; jumptable            260     6 (fixed)
  2908                           ;	Chosen strategy is simple_byte
  2909  0B8A  3A00               	xorlw	0	; case 0
  2910  0B8B  1903               	skipnz
  2911  0B8C  2B80               	goto	l3574
  2912  0B8D  3A01               	xorlw	1	; case 1
  2913  0B8E  1903               	skipnz
  2914  0B8F  2B94               	goto	l14
  2915  0B90  3A03               	xorlw	3	; case 2
  2916  0B91  1903               	skipnz
  2917  0B92  2B94               	goto	l14
  2918  0B93  2B94               	goto	l14
  2919  0B94                     l14:	
  2920  0B94  0008               	return
  2921  0B95                     __end_of_SYSTEM_Initialize:	
  2922                           
  2923                           	psect	text4
  2924  0B22                     __ptext4:	
  2925 ;; *************** function _LED_Enable *****************
  2926 ;; Defined at:
  2927 ;;		line 220 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  led             1    wreg     enum E2
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  led             1    0[BANK1 ] enum E2
  2932 ;; Return value:  Size  Location     Type
  2933 ;;		None               void
  2934 ;; Registers used:
  2935 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2944 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2945 ;;Total ram usage:        1 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:   10
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_SYSTEM_Initialize
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _LED_Enable
  2957  0B22                     _LED_Enable:	
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  2961                           ;LED_Enable@led stored from wreg
  2962  0B22  0021               	movlb	1	; select bank1
  2963  0B23  00D0               	movwf	LED_Enable@led^(0+128)
  2964                           
  2965                           ;leds.c: 222: switch(led)
  2966  0B24  2B2D               	goto	l3394
  2967  0B25                     l257:	
  2968                           ;leds.c: 223: {
  2969                           ;leds.c: 224: case LED_D1:
  2970                           
  2971                           
  2972                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  2973  0B25  100E               	bcf	14,0	;volatile
  2974                           
  2975                           ;leds.c: 226: break;
  2976  0B26  0008               	return
  2977  0B27                     l259:	
  2978                           ;leds.c: 228: case LED_D2:
  2979                           
  2980                           
  2981                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  2982  0B27  108E               	bcf	14,1	;volatile
  2983                           
  2984                           ;leds.c: 230: break;
  2985  0B28  0008               	return
  2986  0B29                     l260:	
  2987                           ;leds.c: 232: case LED_D3:
  2988                           
  2989                           
  2990                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  2991  0B29  110E               	bcf	14,2	;volatile
  2992                           
  2993                           ;leds.c: 234: break;
  2994  0B2A  0008               	return
  2995  0B2B                     l261:	
  2996                           ;leds.c: 236: case LED_D4:
  2997                           
  2998                           
  2999                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  3000  0B2B  118E               	bcf	14,3	;volatile
  3001                           
  3002                           ;leds.c: 242: }
  3003                           
  3004                           ;leds.c: 241: break;
  3005                           
  3006                           ;leds.c: 240: case LED_NONE:
  3007                           
  3008                           ;leds.c: 238: break;
  3009  0B2C  0008               	return
  3010  0B2D                     l3394:	
  3011  0B2D  0850               	movf	LED_Enable@led^(0+128),w
  3012                           
  3013                           ; Switch size 1, requested type "space"
  3014                           ; Number of cases is 5, Range of values is 0 to 4
  3015                           ; switch strategies available:
  3016                           ; Name         Instructions Cycles
  3017                           ; direct_byte           16     6 (fixed)
  3018                           ; simple_byte           16     9 (average)
  3019                           ; jumptable            260     6 (fixed)
  3020                           ;	Chosen strategy is direct_byte
  3021  0B2E  0084               	movwf	4
  3022  0B2F  3005               	movlw	5
  3023  0B30  0204               	subwf	4,w
  3024  0B31  1803               	skipnc
  3025  0B32  0008               	return
  3026  0B33  3188               	movlp	high S3992
  3027  0B34  3504               	lslf	4,w
  3028  0B35  3E1A               	addlw	low S3992
  3029  0B36  0082               	movwf	2
  3030  0B37                     l263:	
  3031  0B37  0008               	return
  3032  0B38                     __end_of_LED_Enable:	
  3033                           
  3034                           	psect	swtext1
  3035  081A                     __pswtext1:	
  3036  081A                     S3992:	
  3037  081A  318B  2B37         	ljmp	l263
  3038  081C  318B  2B25         	ljmp	l257
  3039  081E  318B  2B27         	ljmp	l259
  3040  0820  318B  2B29         	ljmp	l260
  3041  0822  318B  2B2B         	ljmp	l261
  3042                           
  3043                           	psect	text5
  3044  0ACB                     __ptext5:	
  3045 ;; *************** function _BUTTON_Enable *****************
  3046 ;; Defined at:
  3047 ;;		line 85 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/buttons.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  button          1    wreg     enum E2613
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  button          1    0[BANK1 ] enum E2613
  3052 ;; Return value:  Size  Location     Type
  3053 ;;		None               void
  3054 ;; Registers used:
  3055 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3064 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3065 ;;Total ram usage:        1 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:   10
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_SYSTEM_Initialize
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           
  3076                           ;psect for function _BUTTON_Enable
  3077  0ACB                     _BUTTON_Enable:	
  3078                           
  3079                           ;incstack = 0
  3080                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  3081                           ;BUTTON_Enable@button stored from wreg
  3082  0ACB  0021               	movlb	1	; select bank1
  3083  0ACC  00D0               	movwf	BUTTON_Enable@button^(0+128)
  3084                           
  3085                           ;buttons.c: 94: }
  3086                           
  3087                           ;buttons.c: 93: break;
  3088                           
  3089                           ;buttons.c: 92: case BUTTON_NONE:
  3090                           
  3091                           ;buttons.c: 90: break;
  3092                           
  3093                           ;buttons.c: 88: {
  3094                           ;buttons.c: 89: case BUTTON_S1:
  3095                           
  3096                           ;buttons.c: 87: switch(button)
  3097  0ACD  0850               	movf	BUTTON_Enable@button^(0+128),w
  3098                           
  3099                           ; Switch size 1, requested type "space"
  3100                           ; Number of cases is 2, Range of values is 0 to 1
  3101                           ; switch strategies available:
  3102                           ; Name         Instructions Cycles
  3103                           ; simple_byte            7     4 (average)
  3104                           ; direct_byte           10     6 (fixed)
  3105                           ; jumptable            260     6 (fixed)
  3106                           ;	Chosen strategy is simple_byte
  3107  0ACE  3A00               	xorlw	0	; case 0
  3108  0ACF  1903               	skipnz
  3109  0AD0  2AD5               	goto	l209
  3110  0AD1  3A01               	xorlw	1	; case 1
  3111  0AD2  1903               	skipnz
  3112  0AD3  2AD5               	goto	l209
  3113  0AD4  2AD5               	goto	l209
  3114  0AD5                     l209:	
  3115  0AD5  0008               	return
  3116  0AD6                     __end_of_BUTTON_Enable:	
  3117                           
  3118                           	psect	text6
  3119  0C4F                     __ptext6:	
  3120 ;; *************** function _APP_DeviceMouseTasks *****************
  3121 ;; Defined at:
  3122 ;;		line 239 in file "../src/app_device_mouse.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  currentButto    1    2[BANK1 ] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;		None               void
  3129 ;; Registers used:
  3130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3137 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3138 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3139 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3140 ;;Total ram usage:        2 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:   11
  3143 ;; This function calls:
  3144 ;;		_BUTTON_IsPressed
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           
  3151                           ;psect for function _APP_DeviceMouseTasks
  3152  0C4F                     _APP_DeviceMouseTasks:	
  3153                           
  3154                           ;app_device_mouse.c: 241: bool currentButtonState;
  3155                           ;app_device_mouse.c: 244: currentButtonState = BUTTON_IsPressed(BUTTON_S1);
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _APP_DeviceMouseTasks: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3159  0C4F  3001               	movlw	1
  3160  0C50  318B  234E  318C   	fcall	_BUTTON_IsPressed
  3161  0C53  0021               	movlb	1	; select bank1
  3162  0C54  00D1               	movwf	??_APP_DeviceMouseTasks^(0+128)
  3163  0C55  0851               	movf	??_APP_DeviceMouseTasks^(0+128),w
  3164  0C56  00D2               	movwf	APP_DeviceMouseTasks@currentButtonState^(0+128)
  3165                           
  3166                           ;app_device_mouse.c: 249: if(mouse.lastButtonState != currentButtonState)
  3167  0C57  0824               	movf	(_mouse^(0+128)+1),w
  3168  0C58  0652               	xorwf	APP_DeviceMouseTasks@currentButtonState^(0+128),w
  3169  0C59  1903               	skipnz
  3170  0C5A  0008               	return
  3171                           
  3172                           ;app_device_mouse.c: 250: {
  3173                           ;app_device_mouse.c: 251: mouse.lastButtonState = currentButtonState;
  3174  0C5B  0852               	movf	APP_DeviceMouseTasks@currentButtonState^(0+128),w
  3175  0C5C  00D1               	movwf	??_APP_DeviceMouseTasks^(0+128)
  3176  0C5D  0851               	movf	??_APP_DeviceMouseTasks^(0+128),w
  3177  0C5E  00A4               	movwf	(_mouse^(0+128)+1)
  3178                           
  3179                           ;app_device_mouse.c: 253: if(currentButtonState == 0)
  3180  0C5F  0852               	movf	APP_DeviceMouseTasks@currentButtonState^(0+128),w
  3181  0C60  1D03               	btfss	3,2
  3182  0C61  0008               	return
  3183                           
  3184                           ;app_device_mouse.c: 254: {
  3185                           ;app_device_mouse.c: 255: mouse.movementMode = !mouse.movementMode;
  3186  0C62  0828               	movf	(_mouse^(0+128)+5),w
  3187  0C63  1D03               	btfss	3,2
  3188  0C64  2C67               	goto	u3160
  3189  0C65  3001               	movlw	1
  3190  0C66  2C68               	goto	u3170
  3191  0C67                     u3160:	
  3192  0C67  3000               	movlw	0
  3193  0C68                     u3170:	
  3194  0C68  00D1               	movwf	??_APP_DeviceMouseTasks^(0+128)
  3195  0C69  0851               	movf	??_APP_DeviceMouseTasks^(0+128),w
  3196  0C6A  00A8               	movwf	(_mouse^(0+128)+5)
  3197                           
  3198                           ;app_device_mouse.c: 257: mouse.inputReport[0].idleRateSofCount = 0;
  3199  0C6B  01AB               	clrf	(_mouse^(0+128)+8)
  3200                           
  3201                           ;app_device_mouse.c: 258: mouse.sentStop = 0;
  3202  0C6C  01A3               	clrf	_mouse^(0+128)
  3203  0C6D  0008               	return
  3204  0C6E                     __end_of_APP_DeviceMouseTasks:	
  3205                           
  3206                           	psect	text7
  3207  0B4E                     __ptext7:	
  3208 ;; *************** function _BUTTON_IsPressed *****************
  3209 ;; Defined at:
  3210 ;;		line 55 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/buttons.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  button          1    wreg     enum E2613
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  button          1    0[BANK1 ] enum E2613
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      unsigned char 
  3217 ;; Registers used:
  3218 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3228 ;;Total ram usage:        1 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:   10
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_APP_DeviceMouseTasks
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _BUTTON_IsPressed
  3240  0B4E                     _BUTTON_IsPressed:	
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
  3244                           ;BUTTON_IsPressed@button stored from wreg
  3245  0B4E  0021               	movlb	1	; select bank1
  3246  0B4F  00D0               	movwf	BUTTON_IsPressed@button^(0+128)
  3247                           
  3248                           ;buttons.c: 57: switch(button)
  3249  0B50  2B5A               	goto	l3420
  3250  0B51                     l3410:	
  3251                           ;buttons.c: 58: {
  3252                           ;buttons.c: 59: case BUTTON_S1:
  3253                           
  3254                           
  3255                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  3256  0B51  1003               	clrc
  3257  0B52  0020               	movlb	0	; select bank0
  3258  0B53  1D8C               	btfss	12,3	;volatile
  3259  0B54  1403               	setc
  3260  0B55  3000               	movlw	0
  3261  0B56  3D09               	addwfc	9,w
  3262  0B57  0008               	return
  3263  0B58                     l3414:	
  3264                           ;buttons.c: 62: case BUTTON_NONE:
  3265                           
  3266                           
  3267                           ;buttons.c: 63: return 0;
  3268  0B58  3000               	movlw	0
  3269  0B59  0008               	return
  3270  0B5A                     l3420:	
  3271                           ;buttons.c: 64: }
  3272                           
  3273  0B5A  0021               	movlb	1	; select bank1
  3274  0B5B  0850               	movf	BUTTON_IsPressed@button^(0+128),w
  3275                           
  3276                           ; Switch size 1, requested type "space"
  3277                           ; Number of cases is 2, Range of values is 0 to 1
  3278                           ; switch strategies available:
  3279                           ; Name         Instructions Cycles
  3280                           ; simple_byte            7     4 (average)
  3281                           ; direct_byte           10     6 (fixed)
  3282                           ; jumptable            260     6 (fixed)
  3283                           ;	Chosen strategy is simple_byte
  3284  0B5C  3A00               	xorlw	0	; case 0
  3285  0B5D  1903               	skipnz
  3286  0B5E  2B58               	goto	l3414
  3287  0B5F  3A01               	xorlw	1	; case 1
  3288  0B60  1903               	skipnz
  3289  0B61  2B51               	goto	l3410
  3290  0B62  2B63               	goto	l3422
  3291  0B63                     l3422:	
  3292                           
  3293                           ;buttons.c: 66: return 0;
  3294  0B63  3000               	movlw	0
  3295  0B64  0008               	return
  3296  0B65                     __end_of_BUTTON_IsPressed:	
  3297                           
  3298                           	psect	intentry
  3299  0004                     __pintentry:	
  3300 ;; *************** function _SYS_InterruptHigh *****************
  3301 ;; Defined at:
  3302 ;;		line 112 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1459/system.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;		None               void
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3319 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3320 ;;Total ram usage:        1 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    9
  3323 ;; This function calls:
  3324 ;;		_USBDeviceTasks
  3325 ;; This function is called by:
  3326 ;;		Interrupt level 1
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330  0004                     _SYS_InterruptHigh:	
  3331                           
  3332                           ;incstack = 0
  3333                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3334  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3335  0005  3180               	pagesel	$
  3336  0006  0020               	movlb	0	; select bank0
  3337  0007  087F               	movf	127,w
  3338  0008  00E3               	movwf	??_SYS_InterruptHigh
  3339                           
  3340                           ;system.c: 115: USBDeviceTasks();
  3341  0009  3182  2202         	fcall	_USBDeviceTasks
  3342  000B  0020               	movlb	0	; select bank0
  3343  000C  0863               	movf	??_SYS_InterruptHigh,w
  3344  000D  00FF               	movwf	127
  3345  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3346  000F  0009               	retfie
  3347  0010                     __end_of_SYS_InterruptHigh:	
  3348                           
  3349                           	psect	text9
  3350  0202                     __ptext9:	
  3351 ;; *************** function _USBDeviceTasks *****************
  3352 ;; Defined at:
  3353 ;;		line 495 in file "../../../../../../framework/usb/src/usb_device.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  i               1   18[BANK0 ] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;Total ram usage:        3 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    8
  3374 ;; This function calls:
  3375 ;;		_USBCtrlEPAllowStatusStage
  3376 ;;		_USBCtrlEPService
  3377 ;;		_USBIncrement1msInternalTimers
  3378 ;;		_USBStallHandler
  3379 ;;		_USBSuspend
  3380 ;;		_USBWakeFromSuspend
  3381 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3382 ;;		i1_USBDeviceInit
  3383 ;; This function is called by:
  3384 ;;		_SYS_InterruptHigh
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           
  3389                           ;psect for function _USBDeviceTasks
  3390  0202                     _USBDeviceTasks:	
  3391                           
  3392                           ;usb_device.c: 497: uint8_t i;
  3393                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  3394                           
  3395                           ;incstack = 0
  3396                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3397  0202  0021               	movlb	1	; select bank1
  3398  0203  0349               	decf	_USBDeviceState^(0+128),w	;volatile
  3399  0204  1D03               	btfss	3,2
  3400  0205  2A12               	goto	i1l3592
  3401                           
  3402                           ;usb_device.c: 609: {
  3403                           ;usb_device.c: 619: if(!UCONbits.SE0)
  3404  0206  003D               	movlb	29	; select bank29
  3405  0207  1A8E               	btfsc	14,5	;volatile
  3406  0208  2A12               	goto	i1l3592
  3407                           
  3408                           ;usb_device.c: 620: {
  3409                           ;usb_device.c: 626: {UIR = 0;};
  3410  0209  0190               	clrf	16	;volatile
  3411                           
  3412                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  3413  020A  1412               	bsf	18,0	;volatile
  3414                           
  3415                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  3416  020B  1612               	bsf	18,4	;volatile
  3417                           
  3418                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  3419  020C  3002               	movlw	2
  3420  020D  0020               	movlb	0	; select bank0
  3421  020E  00E0               	movwf	??_USBDeviceTasks
  3422  020F  0860               	movf	??_USBDeviceTasks,w
  3423  0210  0021               	movlb	1	; select bank1
  3424  0211  00C9               	movwf	_USBDeviceState^(0+128)	;volatile
  3425  0212                     i1l3592:	
  3426                           
  3427                           ;usb_device.c: 635: }
  3428                           ;usb_device.c: 636: }
  3429                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3430  0212  003D               	movlb	29	; select bank29
  3431  0213  1910               	btfsc	16,2	;volatile
  3432  0214  1D12               	btfss	18,2	;volatile
  3433  0215  2A1F               	goto	i1l3600
  3434                           
  3435                           ;usb_device.c: 653: {
  3436                           ;usb_device.c: 654: (UIR &= 0xFB);
  3437  0216  30FB               	movlw	251
  3438  0217  0020               	movlb	0	; select bank0
  3439  0218  00E0               	movwf	??_USBDeviceTasks
  3440  0219  0860               	movf	??_USBDeviceTasks,w
  3441  021A  003D               	movlb	29	; select bank29
  3442  021B  0590               	andwf	16,f	;volatile
  3443                           
  3444                           ;usb_device.c: 658: USBWakeFromSuspend();
  3445  021C  318C  2432  3182   	fcall	_USBWakeFromSuspend
  3446  021F                     i1l3600:	
  3447                           
  3448                           ;usb_device.c: 660: }
  3449                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  3450  021F  003D               	movlb	29	; select bank29
  3451  0220  1C8E               	btfss	14,1	;volatile
  3452  0221  2A25               	goto	i1l412
  3453                           
  3454                           ;usb_device.c: 666: {
  3455                           ;usb_device.c: 667: PIR2bits.USBIF = 0;;
  3456  0222  0020               	movlb	0	; select bank0
  3457  0223  1112               	bcf	18,2	;volatile
  3458                           
  3459                           ;usb_device.c: 668: return;
  3460  0224  0008               	return
  3461  0225                     i1l412:	
  3462                           
  3463                           ;usb_device.c: 669: }
  3464                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3465  0225  1810               	btfsc	16,0	;volatile
  3466  0226  1C12               	btfss	18,0	;volatile
  3467  0227  2A39               	goto	i1l3614
  3468                           
  3469                           ;usb_device.c: 682: {
  3470                           ;usb_device.c: 683: USBDeviceInit();
  3471  0228  3183  2383  3182   	fcall	i1_USBDeviceInit
  3472                           
  3473                           ;usb_device.c: 687: {PIE2bits.USBIE = 1;};
  3474  022B  0021               	movlb	1	; select bank1
  3475  022C  1512               	bsf	18,2	;volatile
  3476                           
  3477                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  3478  022D  3004               	movlw	4
  3479  022E  0020               	movlb	0	; select bank0
  3480  022F  00E0               	movwf	??_USBDeviceTasks
  3481  0230  0860               	movf	??_USBDeviceTasks,w
  3482  0231  0021               	movlb	1	; select bank1
  3483  0232  00C9               	movwf	_USBDeviceState^(0+128)	;volatile
  3484                           
  3485                           ;usb_device.c: 699: (UIR &= 0xFE);
  3486  0233  30FE               	movlw	254
  3487  0234  0020               	movlb	0	; select bank0
  3488  0235  00E0               	movwf	??_USBDeviceTasks
  3489  0236  0860               	movf	??_USBDeviceTasks,w
  3490  0237  003D               	movlb	29	; select bank29
  3491  0238  0590               	andwf	16,f	;volatile
  3492  0239                     i1l3614:	
  3493                           
  3494                           ;usb_device.c: 700: }
  3495                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3496  0239  1A10               	btfsc	16,4	;volatile
  3497  023A  1E12               	btfss	18,4	;volatile
  3498  023B  2A3F               	goto	i1l3620
  3499                           
  3500                           ;usb_device.c: 706: {
  3501                           ;usb_device.c: 712: USBSuspend();
  3502  023C  318B  23FA  3182   	fcall	_USBSuspend
  3503  023F                     i1l3620:	
  3504                           
  3505                           ;usb_device.c: 714: }
  3506                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  3507  023F  003D               	movlb	29	; select bank29
  3508  0240  1F10               	btfss	16,6	;volatile
  3509  0241  2A66               	goto	i1l3636
  3510                           
  3511                           ;usb_device.c: 727: {
  3512                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  3513  0242  1F12               	btfss	18,6	;volatile
  3514  0243  2A51               	goto	i1l3626
  3515                           
  3516                           ;usb_device.c: 730: {
  3517                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3518  0244  3073               	movlw	115
  3519  0245  0020               	movlb	0	; select bank0
  3520  0246  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3521  0247  3000               	movlw	0
  3522  0248  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3523  0249  01D2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3524  024A  3001               	movlw	1
  3525  024B  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3526  024C  3000               	movlw	0
  3527  024D  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3528  024E  318D  2521  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3529  0251                     i1l3626:	
  3530                           
  3531                           ;usb_device.c: 732: }
  3532                           ;usb_device.c: 733: (UIR &= 0xBF);
  3533  0251  30BF               	movlw	191
  3534  0252  0020               	movlb	0	; select bank0
  3535  0253  00E0               	movwf	??_USBDeviceTasks
  3536  0254  0860               	movf	??_USBDeviceTasks,w
  3537  0255  003D               	movlb	29	; select bank29
  3538  0256  0590               	andwf	16,f	;volatile
  3539                           
  3540                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  3541  0257  318B  2365  3182   	fcall	_USBIncrement1msInternalTimers
  3542                           
  3543                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  3544  025A  0020               	movlb	0	; select bank0
  3545  025B  0867               	movf	_USBStatusStageTimeoutCounter,w	;volatile
  3546  025C  1903               	btfsc	3,2
  3547  025D  2A60               	goto	i1l418
  3548                           
  3549                           ;usb_device.c: 754: {
  3550                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  3551  025E  3001               	movlw	1
  3552  025F  02E7               	subwf	_USBStatusStageTimeoutCounter,f	;volatile
  3553  0260                     i1l418:	
  3554                           
  3555                           ;usb_device.c: 756: }
  3556                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  3557  0260  0867               	movf	_USBStatusStageTimeoutCounter,w	;volatile
  3558  0261  1D03               	btfss	3,2
  3559  0262  2A66               	goto	i1l3636
  3560                           
  3561                           ;usb_device.c: 763: {
  3562                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  3563  0263  3186  26CD  3182   	fcall	_USBCtrlEPAllowStatusStage
  3564  0266                     i1l3636:	
  3565                           
  3566                           ;usb_device.c: 765: }
  3567                           ;usb_device.c: 767: }
  3568                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3569  0266  003D               	movlb	29	; select bank29
  3570  0267  1A90               	btfsc	16,5	;volatile
  3571  0268  1E92               	btfss	18,5	;volatile
  3572  0269  2A6D               	goto	i1l3642
  3573                           
  3574                           ;usb_device.c: 770: {
  3575                           ;usb_device.c: 771: USBStallHandler();
  3576  026A  318C  248E  3182   	fcall	_USBStallHandler
  3577  026D                     i1l3642:	
  3578                           
  3579                           ;usb_device.c: 772: }
  3580                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3581  026D  003D               	movlb	29	; select bank29
  3582  026E  1890               	btfsc	16,1	;volatile
  3583  026F  1C92               	btfss	18,1	;volatile
  3584  0270  2A80               	goto	i1l3650
  3585                           
  3586                           ;usb_device.c: 775: {
  3587                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3588  0271  30FF               	movlw	255
  3589  0272  0020               	movlb	0	; select bank0
  3590  0273  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3591  0274  307F               	movlw	127
  3592  0275  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3593  0276  01D2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3594  0277  3001               	movlw	1
  3595  0278  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3596  0279  3000               	movlw	0
  3597  027A  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3598  027B  318D  2521  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3599                           
  3600                           ;usb_device.c: 777: {UEIR = 0;};
  3601  027E  003D               	movlb	29	; select bank29
  3602  027F  0193               	clrf	19	;volatile
  3603  0280                     i1l3650:	
  3604                           
  3605                           ;usb_device.c: 785: }
  3606                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  3607  0280  3004               	movlw	4
  3608  0281  0021               	movlb	1	; select bank1
  3609  0282  0249               	subwf	_USBDeviceState^(0+128),w	;volatile
  3610  0283  1803               	skipnc
  3611  0284  2A88               	goto	i1l422
  3612                           
  3613                           ;usb_device.c: 793: {
  3614                           ;usb_device.c: 794: PIR2bits.USBIF = 0;;
  3615  0285  0020               	movlb	0	; select bank0
  3616  0286  1112               	bcf	18,2	;volatile
  3617                           
  3618                           ;usb_device.c: 795: return;
  3619  0287  0008               	return
  3620  0288                     i1l422:	
  3621                           
  3622                           ;usb_device.c: 796: }
  3623                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  3624  0288  003D               	movlb	29	; select bank29
  3625  0289  1D92               	btfss	18,3	;volatile
  3626  028A  2AD9               	goto	i1l423
  3627                           
  3628                           ;usb_device.c: 802: {
  3629                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  3630  028B  0020               	movlb	0	; select bank0
  3631  028C  01E2               	clrf	USBDeviceTasks@i
  3632  028D  3004               	movlw	4
  3633  028E  0262               	subwf	USBDeviceTasks@i,w
  3634  028F  1803               	btfsc	3,0
  3635  0290  2AD9               	goto	i1l423
  3636  0291                     i1l424:	
  3637                           
  3638                           ;usb_device.c: 804: {
  3639                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  3640  0291  003D               	movlb	29	; select bank29
  3641  0292  1D90               	btfss	16,3	;volatile
  3642  0293  2AD9               	goto	i1l423
  3643                           
  3644                           ;usb_device.c: 806: {
  3645                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  3646  0294  080F               	movf	15,w	;volatile
  3647  0295  0020               	movlb	0	; select bank0
  3648  0296  00E0               	movwf	??_USBDeviceTasks
  3649  0297  0860               	movf	??_USBDeviceTasks,w
  3650  0298  00EF               	movwf	_USTATcopy	;volatile
  3651                           
  3652                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  3653  0299  0C6F               	rrf	_USTATcopy,w	;volatile
  3654  029A  00E0               	movwf	??_USBDeviceTasks
  3655  029B  0CE0               	rrf	??_USBDeviceTasks,f
  3656  029C  0C60               	rrf	??_USBDeviceTasks,w
  3657  029D  390F               	andlw	15
  3658  029E  00E1               	movwf	??_USBDeviceTasks+1
  3659  029F  0861               	movf	??_USBDeviceTasks+1,w
  3660  02A0  00E9               	movwf	_endpoint_number	;volatile
  3661                           
  3662                           ;usb_device.c: 811: (UIR &= 0xF7);
  3663  02A1  30F7               	movlw	247
  3664  02A2  00E0               	movwf	??_USBDeviceTasks
  3665  02A3  0860               	movf	??_USBDeviceTasks,w
  3666  02A4  003D               	movlb	29	; select bank29
  3667  02A5  0590               	andwf	16,f	;volatile
  3668                           
  3669                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  3670  02A6  0020               	movlb	0	; select bank0
  3671  02A7  196F               	btfsc	_USTATcopy,2	;volatile
  3672  02A8  2AAC               	goto	i1l3670
  3673                           
  3674                           ;usb_device.c: 817: {
  3675                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  3676  02A9  0869               	movf	_endpoint_number,w	;volatile
  3677  02AA  3EBE               	addlw	(low (_ep_data_out| 0))& (0+255)
  3678  02AB  2AAE               	goto	L1
  3679  02AC                     i1l3670:	
  3680                           ;usb_device.c: 819: }
  3681                           
  3682                           
  3683                           ;usb_device.c: 820: else
  3684                           ;usb_device.c: 821: {
  3685                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  3686  02AC  0869               	movf	_endpoint_number,w	;volatile
  3687  02AD  3EBC               	addlw	(low (_ep_data_in| 0))& (0+255)
  3688  02AE                     L1:	
  3689  02AE  0086               	movwf	6
  3690  02AF  0187               	clrf	7
  3691  02B0  0801               	movf	1,w
  3692  02B1  3901               	andlw	1
  3693  02B2  00E0               	movwf	??_USBDeviceTasks
  3694  02B3  3001               	movlw	1
  3695  02B4  06E0               	xorwf	??_USBDeviceTasks,f
  3696  02B5  0801               	movf	1,w
  3697  02B6  0660               	xorwf	??_USBDeviceTasks,w
  3698  02B7  39FE               	andlw	-2
  3699  02B8  0660               	xorwf	??_USBDeviceTasks,w
  3700  02B9  0081               	movwf	1
  3701                           
  3702                           ;usb_device.c: 823: }
  3703                           ;usb_device.c: 828: if(endpoint_number == 0)
  3704  02BA  0869               	movf	_endpoint_number,w	;volatile
  3705  02BB  1D03               	btfss	3,2
  3706  02BC  2AC1               	goto	i1l3676
  3707                           
  3708                           ;usb_device.c: 829: {
  3709                           ;usb_device.c: 830: USBCtrlEPService();
  3710  02BD  318E  268B  3182   	fcall	_USBCtrlEPService
  3711                           
  3712                           ;usb_device.c: 831: }
  3713  02C0  2AD0               	goto	i1l3678
  3714  02C1                     i1l3676:	
  3715                           
  3716                           ;usb_device.c: 832: else
  3717                           ;usb_device.c: 833: {
  3718                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  3719  02C1  3072               	movlw	114
  3720  02C2  0020               	movlb	0	; select bank0
  3721  02C3  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3722  02C4  3000               	movlw	0
  3723  02C5  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3724  02C6  306F               	movlw	(low (_USTATcopy| 0))& (0+255)
  3725  02C7  00E0               	movwf	??_USBDeviceTasks
  3726  02C8  0860               	movf	??_USBDeviceTasks,w
  3727  02C9  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3728  02CA  3000               	movlw	0
  3729  02CB  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3730  02CC  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3731  02CD  318D  2521  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3732  02D0                     i1l3678:	
  3733                           ;usb_device.c: 837: else
  3734                           ;usb_device.c: 838: {
  3735                           ;usb_device.c: 839: break;
  3736                           
  3737                           ;usb_device.c: 835: }
  3738                           ;usb_device.c: 836: }
  3739                           
  3740  02D0  3001               	movlw	1
  3741  02D1  0020               	movlb	0	; select bank0
  3742  02D2  00E0               	movwf	??_USBDeviceTasks
  3743  02D3  0860               	movf	??_USBDeviceTasks,w
  3744  02D4  07E2               	addwf	USBDeviceTasks@i,f
  3745  02D5  3004               	movlw	4
  3746  02D6  0262               	subwf	USBDeviceTasks@i,w
  3747  02D7  1C03               	skipc
  3748  02D8  2A91               	goto	i1l424
  3749  02D9                     i1l423:	
  3750                           
  3751                           ;usb_device.c: 840: }
  3752                           ;usb_device.c: 841: }
  3753                           ;usb_device.c: 842: }
  3754                           ;usb_device.c: 844: PIR2bits.USBIF = 0;;
  3755  02D9  0020               	movlb	0	; select bank0
  3756  02DA  1112               	bcf	18,2	;volatile
  3757  02DB  0008               	return
  3758  02DC                     __end_of_USBDeviceTasks:	
  3759                           
  3760                           	psect	text10
  3761  0383                     __ptext10:	
  3762 ;; *************** function i1_USBDeviceInit *****************
  3763 ;; Defined at:
  3764 ;;		line 295 in file "../../../../../../framework/usb/src/usb_device.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  3769 ;;		 -> UEP1(1), 
  3770 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  3771 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;		None               void
  3774 ;; Registers used:
  3775 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3784 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;Total ram usage:        5 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_USBDeviceTasks
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           
  3795                           ;psect for function i1_USBDeviceInit
  3796  0383                     i1_USBDeviceInit:	
  3797                           
  3798                           ;usb_device.c: 297: uint8_t i;
  3799                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  3800                           
  3801                           ;incstack = 0
  3802                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3803  0383  0021               	movlb	1	; select bank1
  3804  0384  1112               	bcf	18,2	;volatile
  3805                           
  3806                           ;usb_device.c: 303: ;
  3807                           ;usb_device.c: 306: {UEIR = 0;};
  3808  0385  003D               	movlb	29	; select bank29
  3809  0386  0193               	clrf	19	;volatile
  3810                           
  3811                           ;usb_device.c: 309: {UIR = 0;};
  3812  0387  0190               	clrf	16	;volatile
  3813                           
  3814                           ;usb_device.c: 312: UEP0 = 0;
  3815  0388  0198               	clrf	24	;volatile
  3816                           
  3817                           ;usb_device.c: 314: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  3818  0389  300E               	movlw	14
  3819  038A  00F2               	movwf	i1USBDeviceInit@p+1
  3820  038B  3099               	movlw	153
  3821  038C  00F1               	movwf	i1USBDeviceInit@p
  3822  038D  01F3               	clrf	i1USBDeviceInit@i_1231
  3823  038E  0873               	movf	i1USBDeviceInit@i_1231,w
  3824  038F  1D03               	btfss	3,2
  3825  0390  2BA1               	goto	i1l3512
  3826  0391                     i1l3504:	
  3827  0391  0871               	movf	i1USBDeviceInit@p,w
  3828  0392  0086               	movwf	6
  3829  0393  0872               	movf	i1USBDeviceInit@p+1,w
  3830  0394  0087               	movwf	7
  3831  0395  0181               	clrf	1
  3832  0396  3001               	movlw	1
  3833  0397  07F1               	addwf	i1USBDeviceInit@p,f
  3834  0398  3000               	movlw	0
  3835  0399  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  3836  039A  3001               	movlw	1
  3837  039B  00F0               	movwf	??i1_USBDeviceInit
  3838  039C  0870               	movf	??i1_USBDeviceInit,w
  3839  039D  07F3               	addwf	i1USBDeviceInit@i_1231,f
  3840  039E  0873               	movf	i1USBDeviceInit@i_1231,w
  3841  039F  1903               	btfsc	3,2
  3842  03A0  2B91               	goto	i1l3504
  3843  03A1                     i1l3512:	
  3844                           
  3845                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3846  03A1  3016               	movlw	22
  3847  03A2  003D               	movlb	29	; select bank29
  3848  03A3  0091               	movwf	17	;volatile
  3849  03A4  309F               	movlw	159
  3850  03A5  0097               	movwf	23	;volatile
  3851  03A6  307B               	movlw	123
  3852  03A7  0092               	movwf	18	;volatile
  3853                           
  3854                           ;usb_device.c: 319: ;
  3855                           ;usb_device.c: 322: ;
  3856                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  3857  03A8  01F4               	clrf	i1USBDeviceInit@i
  3858  03A9  3008               	movlw	8
  3859  03AA  0274               	subwf	i1USBDeviceInit@i,w
  3860  03AB  1803               	btfsc	3,0
  3861  03AC  2BC6               	goto	i1l401
  3862  03AD                     i1l3520:	
  3863                           
  3864                           ;usb_device.c: 326: {
  3865                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  3866  03AD  0874               	movf	i1USBDeviceInit@i,w
  3867  03AE  00F0               	movwf	??i1_USBDeviceInit
  3868  03AF  3001               	movlw	1
  3869  03B0                     u285_25:	
  3870  03B0  35F0               	lslf	??i1_USBDeviceInit,f
  3871  03B1  3EFF               	addlw	-1
  3872  03B2  1D03               	skipz
  3873  03B3  2BB0               	goto	u285_25
  3874  03B4  3570               	lslf	??i1_USBDeviceInit,w
  3875  03B5  3E20               	addlw	32
  3876  03B6  0086               	movwf	6
  3877  03B7  0187               	clrf	7
  3878  03B8  3000               	movlw	0
  3879  03B9  3FC0               	movwi [0]fsr1
  3880  03BA  3000               	movlw	0
  3881  03BB  3FC1               	movwi [1]fsr1
  3882  03BC  3FC2               	movwi [2]fsr1
  3883  03BD  3FC3               	movwi [3]fsr1
  3884  03BE  3001               	movlw	1
  3885  03BF  00F0               	movwf	??i1_USBDeviceInit
  3886  03C0  0870               	movf	??i1_USBDeviceInit,w
  3887  03C1  07F4               	addwf	i1USBDeviceInit@i,f
  3888  03C2  3008               	movlw	8
  3889  03C3  0274               	subwf	i1USBDeviceInit@i,w
  3890  03C4  1C03               	skipc
  3891  03C5  2BAD               	goto	i1l3520
  3892  03C6                     i1l401:	
  3893                           
  3894                           ;usb_device.c: 328: }
  3895                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  3896  03C6  003D               	movlb	29	; select bank29
  3897  03C7  170E               	bsf	14,6	;volatile
  3898                           
  3899                           ;usb_device.c: 334: UADDR = 0x00;
  3900  03C8  0196               	clrf	22	;volatile
  3901                           
  3902                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  3903  03C9  120E               	bcf	14,4	;volatile
  3904                           
  3905                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  3906  03CA  130E               	bcf	14,6	;volatile
  3907  03CB                     i1l3532:	
  3908                           ;usb_device.c: 343: do
  3909                           
  3910                           
  3911                           ;usb_device.c: 344: {
  3912                           ;usb_device.c: 345: (UIR &= 0xF7);
  3913  03CB  30F7               	movlw	247
  3914  03CC  00F0               	movwf	??i1_USBDeviceInit
  3915  03CD  0870               	movf	??i1_USBDeviceInit,w
  3916  03CE  0590               	andwf	16,f	;volatile
  3917                           
  3918                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  3919  03CF  0021               	movlb	1	; select bank1
  3920  03D0  01B5               	clrf	(_inPipes^(0+128)+2)	;volatile
  3921                           
  3922                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  3923  03D1  01AE               	clrf	(_outPipes^(0+128)+2)	;volatile
  3924                           
  3925                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  3926  03D2  01AF               	clrf	(_outPipes^(0+128)+3)	;volatile
  3927  03D3  01B0               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  3928                           
  3929                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  3930  03D4  003D               	movlb	29	; select bank29
  3931  03D5  1990               	btfsc	16,3	;volatile
  3932  03D6  2BCB               	goto	i1l3532
  3933                           
  3934                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  3935  03D7  3001               	movlw	1
  3936  03D8  00F0               	movwf	??i1_USBDeviceInit
  3937  03D9  0870               	movf	??i1_USBDeviceInit,w
  3938  03DA  0021               	movlb	1	; select bank1
  3939  03DB  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  3940                           
  3941                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  3942  03DC  3001               	movlw	1
  3943  03DD  00F0               	movwf	??i1_USBDeviceInit
  3944  03DE  0870               	movf	??i1_USBDeviceInit,w
  3945  03DF  00CB               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  3946                           
  3947                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  3948  03E0  01C7               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  3949                           
  3950                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  3951  03E1  01C8               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  3952                           
  3953                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  3954  03E2  01C6               	clrf	_USBBusIsSuspended^(0+128)	;volatile
  3955                           
  3956                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(1+1u); i++)
  3957  03E3  01F4               	clrf	i1USBDeviceInit@i
  3958  03E4  3002               	movlw	2
  3959  03E5  0274               	subwf	i1USBDeviceInit@i,w
  3960  03E6  1803               	btfsc	3,0
  3961  03E7  2C04               	goto	i1l3560
  3962  03E8                     i1l3554:	
  3963                           
  3964                           ;usb_device.c: 364: {
  3965                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  3966  03E8  0874               	movf	i1USBDeviceInit@i,w
  3967  03E9  3EC0               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3968  03EA  0086               	movwf	6
  3969  03EB  0187               	clrf	7
  3970  03EC  0181               	clrf	1
  3971                           
  3972                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  3973  03ED  0874               	movf	i1USBDeviceInit@i,w
  3974  03EE  3EC2               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  3975  03EF  0086               	movwf	6
  3976  03F0  0187               	clrf	7
  3977  03F1  0181               	clrf	1
  3978                           
  3979                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  3980  03F2  0874               	movf	i1USBDeviceInit@i,w
  3981  03F3  3EBC               	addlw	(low (_ep_data_in| 0))& (0+255)
  3982  03F4  0086               	movwf	6
  3983  03F5  0187               	clrf	7
  3984  03F6  0181               	clrf	1
  3985                           
  3986                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  3987  03F7  0874               	movf	i1USBDeviceInit@i,w
  3988  03F8  3EBE               	addlw	(low (_ep_data_out| 0))& (0+255)
  3989  03F9  0086               	movwf	6
  3990  03FA  0187               	clrf	7
  3991  03FB  0181               	clrf	1
  3992  03FC  3001               	movlw	1
  3993  03FD  00F0               	movwf	??i1_USBDeviceInit
  3994  03FE  0870               	movf	??i1_USBDeviceInit,w
  3995  03FF  07F4               	addwf	i1USBDeviceInit@i,f
  3996  0400  3002               	movlw	2
  3997  0401  0274               	subwf	i1USBDeviceInit@i,w
  3998  0402  1C03               	skipc
  3999  0403  2BE8               	goto	i1l3554
  4000  0404                     i1l3560:	
  4001                           
  4002                           ;usb_device.c: 369: }
  4003                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4004  0404  3028               	movlw	40
  4005  0405  00F0               	movwf	??i1_USBDeviceInit
  4006  0406  0870               	movf	??i1_USBDeviceInit,w
  4007  0407  0021               	movlb	1	; select bank1
  4008  0408  00C0               	movwf	_pBDTEntryIn^(0+128)
  4009                           
  4010                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  4011  0409  3016               	movlw	22
  4012  040A  003D               	movlb	29	; select bank29
  4013  040B  0098               	movwf	24	;volatile
  4014                           
  4015                           ;usb_device.c: 376: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4016  040C  3000               	movlw	0
  4017  040D  0020               	movlb	0	; select bank0
  4018  040E  00A3               	movwf	35	;volatile
  4019  040F  3040               	movlw	64
  4020  0410  00A2               	movwf	34	;volatile
  4021                           
  4022                           ;usb_device.c: 377: BDT[0].CNT = 8;
  4023  0411  3008               	movlw	8
  4024  0412  00A1               	movwf	33	;volatile
  4025                           
  4026                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  4027  0413  3004               	movlw	4
  4028  0414  00F0               	movwf	??i1_USBDeviceInit
  4029  0415  0870               	movf	??i1_USBDeviceInit,w
  4030  0416  00A0               	movwf	32	;volatile
  4031                           
  4032                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  4033  0417  17A0               	bsf	32,7	;volatile
  4034                           
  4035                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  4036  0418  01ED               	clrf	_USBActiveConfiguration	;volatile
  4037                           
  4038                           ;usb_device.c: 384: USB1msTickCount = 0;
  4039  0419  3000               	movlw	0
  4040  041A  0021               	movlb	1	; select bank1
  4041  041B  00BB               	movwf	(_USB1msTickCount+3)^(0+128)	;volatile
  4042  041C  3000               	movlw	0
  4043  041D  00BA               	movwf	(_USB1msTickCount+2)^(0+128)	;volatile
  4044  041E  3000               	movlw	0
  4045  041F  00B9               	movwf	(_USB1msTickCount+1)^(0+128)	;volatile
  4046  0420  3000               	movlw	0
  4047  0421  00B8               	movwf	_USB1msTickCount^(0+128)	;volatile
  4048                           
  4049                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  4050  0422  01CC               	clrf	_USBTicksSinceSuspendEnd^(0+128)	;volatile
  4051                           
  4052                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  4053  0423  01C9               	clrf	_USBDeviceState^(0+128)	;volatile
  4054  0424  0008               	return
  4055  0425                     __end_ofi1_USBDeviceInit:	
  4056                           
  4057                           	psect	text11
  4058  0C32                     __ptext11:	
  4059 ;; *************** function _USBWakeFromSuspend *****************
  4060 ;; Defined at:
  4061 ;;		line 2321 in file "../../../../../../framework/usb/src/usb_device.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;Total ram usage:        1 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    4
  4082 ;; This function calls:
  4083 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4084 ;; This function is called by:
  4085 ;;		_USBDeviceTasks
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function _USBWakeFromSuspend
  4091  0C32                     _USBWakeFromSuspend:	
  4092                           
  4093                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  4094                           
  4095                           ;incstack = 0
  4096                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4097  0C32  0021               	movlb	1	; select bank1
  4098  0C33  01C6               	clrf	_USBBusIsSuspended^(0+128)	;volatile
  4099                           
  4100                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4101  0C34  3074               	movlw	116
  4102  0C35  0020               	movlb	0	; select bank0
  4103  0C36  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4104  0C37  3000               	movlw	0
  4105  0C38  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4106  0C39  01D2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4107  0C3A  3000               	movlw	0
  4108  0C3B  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4109  0C3C  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4110  0C3D  318D  2521  318C   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4111                           
  4112                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  4113  0C40  003D               	movlb	29	; select bank29
  4114  0C41  108E               	bcf	14,1	;volatile
  4115                           
  4116                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  4117  0C42  1112               	bcf	18,2	;volatile
  4118  0C43                     i1l3436:	
  4119                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  4120                           
  4121  0C43  1D10               	btfss	16,2	;volatile
  4122  0C44  2C4C               	goto	i1l3438
  4123                           
  4124                           ;usb_device.c: 2361: {
  4125                           ;usb_device.c: 2362: (UIR &= 0xFB);
  4126  0C45  30FB               	movlw	251
  4127  0C46  0020               	movlb	0	; select bank0
  4128  0C47  00D5               	movwf	??_USBWakeFromSuspend
  4129  0C48  0855               	movf	??_USBWakeFromSuspend,w
  4130  0C49  003D               	movlb	29	; select bank29
  4131  0C4A  0590               	andwf	16,f	;volatile
  4132  0C4B  2C43               	goto	i1l3436
  4133  0C4C                     i1l3438:	
  4134                           
  4135                           ;usb_device.c: 2363: }
  4136                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  4137  0C4C  0021               	movlb	1	; select bank1
  4138  0C4D  01CC               	clrf	_USBTicksSinceSuspendEnd^(0+128)	;volatile
  4139  0C4E  0008               	return
  4140  0C4F                     __end_of_USBWakeFromSuspend:	
  4141                           
  4142                           	psect	text12
  4143  0BFA                     __ptext12:	
  4144 ;; *************** function _USBSuspend *****************
  4145 ;; Defined at:
  4146 ;;		line 2263 in file "../../../../../../framework/usb/src/usb_device.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;		None               void
  4153 ;; Registers used:
  4154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;Total ram usage:        1 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    4
  4167 ;; This function calls:
  4168 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4169 ;; This function is called by:
  4170 ;;		_USBDeviceTasks
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           
  4175                           ;psect for function _USBSuspend
  4176  0BFA                     _USBSuspend:	
  4177                           
  4178                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  4179                           
  4180                           ;incstack = 0
  4181                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4182  0BFA  003D               	movlb	29	; select bank29
  4183  0BFB  1512               	bsf	18,2	;volatile
  4184                           
  4185                           ;usb_device.c: 2289: (UIR &= 0xEF);
  4186  0BFC  30EF               	movlw	239
  4187  0BFD  0020               	movlb	0	; select bank0
  4188  0BFE  00D5               	movwf	??_USBSuspend
  4189  0BFF  0855               	movf	??_USBSuspend,w
  4190  0C00  003D               	movlb	29	; select bank29
  4191  0C01  0590               	andwf	16,f	;volatile
  4192                           
  4193                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  4194  0C02  148E               	bsf	14,1	;volatile
  4195                           
  4196                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  4197  0C03  3001               	movlw	1
  4198  0C04  0020               	movlb	0	; select bank0
  4199  0C05  00D5               	movwf	??_USBSuspend
  4200  0C06  0855               	movf	??_USBSuspend,w
  4201  0C07  0021               	movlb	1	; select bank1
  4202  0C08  00C6               	movwf	_USBBusIsSuspended^(0+128)	;volatile
  4203                           
  4204                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  4205  0C09  01CC               	clrf	_USBTicksSinceSuspendEnd^(0+128)	;volatile
  4206                           
  4207                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4208  0C0A  3075               	movlw	117
  4209  0C0B  0020               	movlb	0	; select bank0
  4210  0C0C  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4211  0C0D  3000               	movlw	0
  4212  0C0E  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4213  0C0F  01D2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4214  0C10  3000               	movlw	0
  4215  0C11  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4216  0C12  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4217  0C13  318D  2521         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4218  0C15  0008               	return
  4219  0C16                     __end_of_USBSuspend:	
  4220                           
  4221                           	psect	text13
  4222  0C8E                     __ptext13:	
  4223 ;; *************** function _USBStallHandler *****************
  4224 ;; Defined at:
  4225 ;;		line 2220 in file "../../../../../../framework/usb/src/usb_device.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;		None               void
  4232 ;; Registers used:
  4233 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4243 ;;Total ram usage:        1 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_USBDeviceTasks
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function _USBStallHandler
  4254  0C8E                     _USBStallHandler:	
  4255                           
  4256                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  4257                           
  4258                           ;incstack = 0
  4259                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4260  0C8E  003D               	movlb	29	; select bank29
  4261  0C8F  1C18               	btfss	24,0	;volatile
  4262  0C90  2CAF               	goto	i1l3470
  4263                           
  4264                           ;usb_device.c: 2233: {
  4265                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4266  0C91  0020               	movlb	0	; select bank0
  4267  0C92  086A               	movf	_pBDTEntryEP0OutCurrent,w
  4268  0C93  0086               	movwf	6
  4269  0C94  0187               	clrf	7
  4270  0C95  3080               	movlw	128
  4271  0C96  0601               	xorwf	1,w
  4272  0C97  1D03               	btfss	3,2
  4273  0C98  2CAD               	goto	i1l3468
  4274  0C99  0021               	movlb	1	; select bank1
  4275  0C9A  0840               	movf	_pBDTEntryIn^(0+128),w
  4276  0C9B  0086               	movwf	6
  4277  0C9C  0187               	clrf	7
  4278  0C9D  3084               	movlw	132
  4279  0C9E  0601               	xorwf	1,w
  4280  0C9F  1D03               	btfss	3,2
  4281  0CA0  2CAD               	goto	i1l3468
  4282                           
  4283                           ;usb_device.c: 2236: {
  4284                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4285  0CA1  300C               	movlw	12
  4286  0CA2  00F0               	movwf	??_USBStallHandler
  4287  0CA3  0020               	movlb	0	; select bank0
  4288  0CA4  086A               	movf	_pBDTEntryEP0OutCurrent,w
  4289  0CA5  0086               	movwf	6
  4290  0CA6  0187               	clrf	7
  4291  0CA7  0870               	movf	??_USBStallHandler,w
  4292  0CA8  0081               	movwf	1
  4293                           
  4294                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4295  0CA9  086A               	movf	_pBDTEntryEP0OutCurrent,w
  4296  0CAA  0086               	movwf	6
  4297  0CAB  0187               	clrf	7
  4298  0CAC  1781               	bsf	1,7
  4299  0CAD                     i1l3468:	
  4300                           
  4301                           ;usb_device.c: 2240: }
  4302                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  4303  0CAD  003D               	movlb	29	; select bank29
  4304  0CAE  1018               	bcf	24,0	;volatile
  4305  0CAF                     i1l3470:	
  4306                           
  4307                           ;usb_device.c: 2242: }
  4308                           ;usb_device.c: 2244: (UIR &= 0xDF);
  4309  0CAF  30DF               	movlw	223
  4310  0CB0  00F0               	movwf	??_USBStallHandler
  4311  0CB1  0870               	movf	??_USBStallHandler,w
  4312  0CB2  0590               	andwf	16,f	;volatile
  4313  0CB3  0008               	return
  4314  0CB4                     __end_of_USBStallHandler:	
  4315                           
  4316                           	psect	text14
  4317  0B65                     __ptext14:	
  4318 ;; *************** function _USBIncrement1msInternalTimers *****************
  4319 ;; Defined at:
  4320 ;;		line 3042 in file "../../../../../../framework/usb/src/usb_device.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;		None               void
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;Total ram usage:        1 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_USBDeviceTasks
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _USBIncrement1msInternalTimers
  4349  0B65                     _USBIncrement1msInternalTimers:	
  4350                           
  4351                           ;usb_device.c: 3050: USB1msTickCount++;
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  4355  0B65  3001               	movlw	1
  4356  0B66  0021               	movlb	1	; select bank1
  4357  0B67  07B8               	addwf	_USB1msTickCount^(0+128),f	;volatile
  4358  0B68  3000               	movlw	0
  4359  0B69  3DB9               	addwfc	(_USB1msTickCount+1)^(0+128),f	;volatile
  4360  0B6A  3000               	movlw	0
  4361  0B6B  3DBA               	addwfc	(_USB1msTickCount+2)^(0+128),f	;volatile
  4362  0B6C  3000               	movlw	0
  4363  0B6D  3DBB               	addwfc	(_USB1msTickCount+3)^(0+128),f	;volatile
  4364                           
  4365                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  4366  0B6E  0846               	movf	_USBBusIsSuspended^(0+128),w	;volatile
  4367  0B6F  1D03               	btfss	3,2
  4368  0B70  0008               	return
  4369                           
  4370                           ;usb_device.c: 3052: {
  4371                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  4372  0B71  3001               	movlw	1
  4373  0B72  00F0               	movwf	??_USBIncrement1msInternalTimers
  4374  0B73  0870               	movf	??_USBIncrement1msInternalTimers,w
  4375  0B74  07CC               	addwf	_USBTicksSinceSuspendEnd^(0+128),f	;volatile
  4376                           
  4377                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  4378  0B75  084C               	movf	_USBTicksSinceSuspendEnd^(0+128),w	;volatile
  4379  0B76  1D03               	btfss	3,2
  4380  0B77  0008               	return
  4381                           
  4382                           ;usb_device.c: 3056: {
  4383                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  4384  0B78  30FF               	movlw	255
  4385  0B79  00F0               	movwf	??_USBIncrement1msInternalTimers
  4386  0B7A  0870               	movf	??_USBIncrement1msInternalTimers,w
  4387  0B7B  00CC               	movwf	_USBTicksSinceSuspendEnd^(0+128)	;volatile
  4388  0B7C  0008               	return
  4389  0B7D                     __end_of_USBIncrement1msInternalTimers:	
  4390                           
  4391                           	psect	text15
  4392  0E8B                     __ptext15:	
  4393 ;; *************** function _USBCtrlEPService *****************
  4394 ;; Defined at:
  4395 ;;		line 2390 in file "../../../../../../framework/usb/src/usb_device.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;		None
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;		None               void
  4402 ;; Registers used:
  4403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;Total ram usage:        3 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    7
  4416 ;; This function calls:
  4417 ;;		_USBCtrlTrfInHandler
  4418 ;;		_USBCtrlTrfOutHandler
  4419 ;;		_USBCtrlTrfSetupHandler
  4420 ;; This function is called by:
  4421 ;;		_USBDeviceTasks
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           
  4426                           ;psect for function _USBCtrlEPService
  4427  0E8B                     _USBCtrlEPService:	
  4428                           
  4429                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  4430                           
  4431                           ;incstack = 0
  4432                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4433  0E8B  302D               	movlw	45
  4434  0E8C  0020               	movlb	0	; select bank0
  4435  0E8D  00DD               	movwf	??_USBCtrlEPService
  4436  0E8E  085D               	movf	??_USBCtrlEPService,w
  4437  0E8F  00E7               	movwf	_USBStatusStageTimeoutCounter	;volatile
  4438                           
  4439                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  4440  0E90  086F               	movf	_USTATcopy,w	;volatile
  4441  0E91  39FD               	andlw	253
  4442  0E92  1D03               	btfss	3,2
  4443  0E93  2ECE               	goto	i1l3490
  4444                           
  4445                           ;usb_device.c: 2401: {
  4446                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  4447  0E94  366F               	lsrf	_USTATcopy,w	;volatile
  4448  0E95  393F               	andlw	63
  4449  0E96  00DD               	movwf	??_USBCtrlEPService
  4450  0E97  3001               	movlw	1
  4451  0E98                     u278_25:	
  4452  0E98  35DD               	lslf	??_USBCtrlEPService,f
  4453  0E99  3EFF               	addlw	-1
  4454  0E9A  1D03               	skipz
  4455  0E9B  2E98               	goto	u278_25
  4456  0E9C  355D               	lslf	??_USBCtrlEPService,w
  4457  0E9D  3E20               	addlw	32
  4458  0E9E  00DE               	movwf	??_USBCtrlEPService+1
  4459  0E9F  085E               	movf	??_USBCtrlEPService+1,w
  4460  0EA0  00EA               	movwf	_pBDTEntryEP0OutCurrent
  4461                           
  4462                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4463  0EA1  086A               	movf	_pBDTEntryEP0OutCurrent,w
  4464  0EA2  00DD               	movwf	??_USBCtrlEPService
  4465  0EA3  085D               	movf	??_USBCtrlEPService,w
  4466  0EA4  00EB               	movwf	_pBDTEntryEP0OutNext
  4467                           
  4468                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  4469  0EA5  3004               	movlw	4
  4470  0EA6  00DD               	movwf	??_USBCtrlEPService
  4471  0EA7  085D               	movf	??_USBCtrlEPService,w
  4472  0EA8  06EB               	xorwf	_pBDTEntryEP0OutNext,f
  4473                           
  4474                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4475  0EA9  086A               	movf	_pBDTEntryEP0OutCurrent,w
  4476  0EAA  0086               	movwf	6
  4477  0EAB  0187               	clrf	7
  4478  0EAC  0C01               	rrf	1,w
  4479  0EAD  0C89               	rrf	9,f
  4480  0EAE  390F               	andlw	15
  4481  0EAF  3A0D               	xorlw	13
  4482  0EB0  1D03               	skipz
  4483  0EB1  2ECB               	goto	i1l3488
  4484                           
  4485                           ;usb_device.c: 2418: {
  4486                           ;usb_device.c: 2423: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  4487  0EB2  3040               	movlw	64
  4488  0EB3  0086               	movwf	6
  4489  0EB4  0187               	clrf	7
  4490  0EB5  0020               	movlb	0	; select bank0
  4491  0EB6  086A               	movf	_pBDTEntryEP0OutCurrent,w
  4492  0EB7  3E02               	addlw	2
  4493  0EB8  0084               	movwf	4
  4494  0EB9  0185               	clrf	5
  4495  0EBA  3F00               	moviw [0]fsr0
  4496  0EBB  00DD               	movwf	??_USBCtrlEPService
  4497  0EBC  3F01               	moviw [1]fsr0
  4498  0EBD  00DE               	movwf	??_USBCtrlEPService+1
  4499  0EBE  085D               	movf	??_USBCtrlEPService,w
  4500  0EBF  0084               	movwf	4
  4501  0EC0  085E               	movf	??_USBCtrlEPService+1,w
  4502  0EC1  0085               	movwf	5
  4503  0EC2  3008               	movlw	8
  4504  0EC3  00DF               	movwf	??_USBCtrlEPService+2
  4505  0EC4                     u280_2m0:	
  4506  0EC4  0012               	moviw fsr0++
  4507  0EC5  001E               	movwi fsr1++
  4508  0EC6  0BDF               	decfsz	??_USBCtrlEPService+2,f
  4509  0EC7  2EC4               	goto	u280_2m0
  4510                           
  4511                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  4512  0EC8  318D  2565         	fcall	_USBCtrlTrfSetupHandler
  4513                           
  4514                           ;usb_device.c: 2427: }
  4515  0ECA  0008               	return
  4516  0ECB                     i1l3488:	
  4517                           
  4518                           ;usb_device.c: 2428: else
  4519                           ;usb_device.c: 2429: {
  4520                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  4521  0ECB  318C  24B4         	fcall	_USBCtrlTrfOutHandler
  4522                           
  4523                           ;usb_device.c: 2432: }
  4524                           ;usb_device.c: 2433: }
  4525  0ECD  0008               	return
  4526  0ECE                     i1l3490:	
  4527                           
  4528                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  4529  0ECE  30FD               	movlw	253
  4530  0ECF  0020               	movlb	0	; select bank0
  4531  0ED0  056F               	andwf	_USTATcopy,w	;volatile
  4532  0ED1  00DD               	movwf	??_USBCtrlEPService
  4533  0ED2  3004               	movlw	4
  4534  0ED3  065D               	xorwf	??_USBCtrlEPService,w
  4535  0ED4  1D03               	btfss	3,2
  4536  0ED5  0008               	return
  4537                           
  4538                           ;usb_device.c: 2435: {
  4539                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  4540  0ED6  3187  2738         	fcall	_USBCtrlTrfInHandler
  4541  0ED8  0008               	return
  4542  0ED9                     __end_of_USBCtrlEPService:	
  4543                           
  4544                           	psect	text16
  4545  0D65                     __ptext16:	
  4546 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4547 ;; Defined at:
  4548 ;;		line 2483 in file "../../../../../../framework/usb/src/usb_device.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;		None               void
  4555 ;; Registers used:
  4556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4566 ;;Total ram usage:        1 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    6
  4569 ;; This function calls:
  4570 ;;		_USBCheckStdRequest
  4571 ;;		_USBCtrlEPServiceComplete
  4572 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4573 ;; This function is called by:
  4574 ;;		_USBCtrlEPService
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           
  4579                           ;psect for function _USBCtrlTrfSetupHandler
  4580  0D65                     _USBCtrlTrfSetupHandler:	
  4581                           
  4582                           ;usb_device.c: 2488: shortPacketStatus = 0;
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4586  0D65  0020               	movlb	0	; select bank0
  4587  0D66  01EC               	clrf	_shortPacketStatus	;volatile
  4588                           
  4589                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  4590  0D67  01E6               	clrf	_USBDeferStatusStagePacket	;volatile
  4591                           
  4592                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  4593  0D68  0021               	movlb	1	; select bank1
  4594  0D69  01C7               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  4595                           
  4596                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  4597  0D6A  01C8               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  4598                           
  4599                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  4600  0D6B  01C4               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  4601                           
  4602                           ;usb_device.c: 2493: controlTransferState = 0;
  4603  0D6C  0020               	movlb	0	; select bank0
  4604  0D6D  01E8               	clrf	_controlTransferState	;volatile
  4605                           
  4606                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4607  0D6E  307F               	movlw	127
  4608  0D6F  00DC               	movwf	??_USBCtrlTrfSetupHandler
  4609  0D70  0021               	movlb	1	; select bank1
  4610  0D71  0840               	movf	_pBDTEntryIn^(0+128),w
  4611  0D72  0086               	movwf	6
  4612  0D73  0187               	clrf	7
  4613  0D74  0020               	movlb	0	; select bank0
  4614  0D75  085C               	movf	??_USBCtrlTrfSetupHandler,w
  4615  0D76  0581               	andwf	1,f
  4616                           
  4617                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4618  0D77  3004               	movlw	4
  4619  0D78  00DC               	movwf	??_USBCtrlTrfSetupHandler
  4620  0D79  085C               	movf	??_USBCtrlTrfSetupHandler,w
  4621  0D7A  0021               	movlb	1	; select bank1
  4622  0D7B  06C0               	xorwf	_pBDTEntryIn^(0+128),f
  4623                           
  4624                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4625  0D7C  307F               	movlw	127
  4626  0D7D  0020               	movlb	0	; select bank0
  4627  0D7E  00DC               	movwf	??_USBCtrlTrfSetupHandler
  4628  0D7F  0021               	movlb	1	; select bank1
  4629  0D80  0840               	movf	_pBDTEntryIn^(0+128),w
  4630  0D81  0086               	movwf	6
  4631  0D82  0187               	clrf	7
  4632  0D83  0020               	movlb	0	; select bank0
  4633  0D84  085C               	movf	??_USBCtrlTrfSetupHandler,w
  4634  0D85  0581               	andwf	1,f
  4635                           
  4636                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4637  0D86  3004               	movlw	4
  4638  0D87  00DC               	movwf	??_USBCtrlTrfSetupHandler
  4639  0D88  085C               	movf	??_USBCtrlTrfSetupHandler,w
  4640  0D89  0021               	movlb	1	; select bank1
  4641  0D8A  06C0               	xorwf	_pBDTEntryIn^(0+128),f
  4642                           
  4643                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4644  0D8B  307F               	movlw	127
  4645  0D8C  0020               	movlb	0	; select bank0
  4646  0D8D  00DC               	movwf	??_USBCtrlTrfSetupHandler
  4647  0D8E  086B               	movf	_pBDTEntryEP0OutNext,w
  4648  0D8F  0086               	movwf	6
  4649  0D90  0187               	clrf	7
  4650  0D91  085C               	movf	??_USBCtrlTrfSetupHandler,w
  4651  0D92  0581               	andwf	1,f
  4652                           
  4653                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  4654  0D93  0021               	movlb	1	; select bank1
  4655  0D94  01B5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4656                           
  4657                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  4658  0D95  01B6               	clrf	(_inPipes^(0+128)+3)	;volatile
  4659  0D96  01B7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4660                           
  4661                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  4662  0D97  01AE               	clrf	(_outPipes^(0+128)+2)	;volatile
  4663                           
  4664                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  4665  0D98  01AF               	clrf	(_outPipes^(0+128)+3)	;volatile
  4666  0D99  01B0               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  4667                           
  4668                           ;usb_device.c: 2517: USBCheckStdRequest();
  4669  0D9A  318E  26D9  318D   	fcall	_USBCheckStdRequest
  4670                           
  4671                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4672  0D9D  3000               	movlw	0
  4673  0D9E  0020               	movlb	0	; select bank0
  4674  0D9F  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4675  0DA0  3003               	movlw	3
  4676  0DA1  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4677  0DA2  01D2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4678  0DA3  3000               	movlw	0
  4679  0DA4  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4680  0DA5  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4681  0DA6  318D  2521  318D   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4682                           
  4683                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  4684  0DA9  3185  2548         	fcall	_USBCtrlEPServiceComplete
  4685  0DAB  0008               	return
  4686  0DAC                     __end_of_USBCtrlTrfSetupHandler:	
  4687                           
  4688                           	psect	text17
  4689  0548                     __ptext17:	
  4690 ;; *************** function _USBCtrlEPServiceComplete *****************
  4691 ;; Defined at:
  4692 ;;		line 1634 in file "../../../../../../framework/usb/src/usb_device.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;		None               void
  4699 ;; Registers used:
  4700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;Total ram usage:        2 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    2
  4713 ;; This function calls:
  4714 ;;		_USBCtrlEPAllowDataStage
  4715 ;;		_USBCtrlEPAllowStatusStage
  4716 ;; This function is called by:
  4717 ;;		_USBCtrlTrfSetupHandler
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           
  4722                           ;psect for function _USBCtrlEPServiceComplete
  4723  0548                     _USBCtrlEPServiceComplete:	
  4724                           
  4725                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  4726                           
  4727                           ;incstack = 0
  4728                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4729  0548  003D               	movlb	29	; select bank29
  4730  0549  120E               	bcf	14,4	;volatile
  4731                           
  4732                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  4733  054A  0021               	movlb	1	; select bank1
  4734  054B  1BB5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  4735  054C  2D8A               	goto	i1l486
  4736                           
  4737                           ;usb_device.c: 1647: {
  4738                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  4739  054D  1FAE               	btfss	(_outPipes^(0+128)+2),7	;volatile
  4740  054E  2D5E               	goto	i1l3186
  4741                           
  4742                           ;usb_device.c: 1649: {
  4743                           ;usb_device.c: 1650: controlTransferState = 2;
  4744  054F  3002               	movlw	2
  4745  0550  00F5               	movwf	??_USBCtrlEPServiceComplete
  4746  0551  0875               	movf	??_USBCtrlEPServiceComplete,w
  4747  0552  0020               	movlb	0	; select bank0
  4748  0553  00E8               	movwf	_controlTransferState	;volatile
  4749                           
  4750                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  4751  0554  0021               	movlb	1	; select bank1
  4752  0555  0848               	movf	_USBDeferOUTDataStagePackets^(0+128),w	;volatile
  4753  0556  1D03               	btfss	3,2
  4754  0557  2D5A               	goto	i1l3182
  4755                           
  4756                           ;usb_device.c: 1662: {
  4757                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  4758  0558  3187  27A3         	fcall	_USBCtrlEPAllowDataStage
  4759  055A                     i1l3182:	
  4760                           
  4761                           ;usb_device.c: 1664: }
  4762                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  4763  055A  0021               	movlb	1	; select bank1
  4764  055B  01CB               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  4765                           
  4766                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  4767  055C  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  4768                           
  4769                           ;usb_device.c: 1670: }
  4770  055D  0008               	return
  4771  055E                     i1l3186:	
  4772                           
  4773                           ;usb_device.c: 1671: else
  4774                           ;usb_device.c: 1672: {
  4775                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  4776  055E  3008               	movlw	8
  4777  055F  00F5               	movwf	??_USBCtrlEPServiceComplete
  4778  0560  0020               	movlb	0	; select bank0
  4779  0561  0A6B               	incf	_pBDTEntryEP0OutNext,w
  4780  0562  0086               	movwf	6
  4781  0563  0187               	clrf	7
  4782  0564  0875               	movf	??_USBCtrlEPServiceComplete,w
  4783  0565  0081               	movwf	1
  4784                           
  4785                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4786  0566  3040               	movlw	64
  4787  0567  00F5               	movwf	??_USBCtrlEPServiceComplete
  4788  0568  3000               	movlw	0
  4789  0569  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  4790  056A  086B               	movf	_pBDTEntryEP0OutNext,w
  4791  056B  3E02               	addlw	2
  4792  056C  0086               	movwf	6
  4793  056D  0187               	clrf	7
  4794  056E  0875               	movf	??_USBCtrlEPServiceComplete,w
  4795  056F  3FC0               	movwi [0]fsr1
  4796  0570  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  4797  0571  3FC1               	movwi [1]fsr1
  4798                           
  4799                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4800  0572  300C               	movlw	12
  4801  0573  00F5               	movwf	??_USBCtrlEPServiceComplete
  4802  0574  086B               	movf	_pBDTEntryEP0OutNext,w
  4803  0575  0086               	movwf	6
  4804  0576  0187               	clrf	7
  4805  0577  0875               	movf	??_USBCtrlEPServiceComplete,w
  4806  0578  0081               	movwf	1
  4807                           
  4808                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4809  0579  086B               	movf	_pBDTEntryEP0OutNext,w
  4810  057A  0086               	movwf	6
  4811  057B  0187               	clrf	7
  4812  057C  1781               	bsf	1,7
  4813                           
  4814                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  4815  057D  3004               	movlw	4
  4816  057E  00F5               	movwf	??_USBCtrlEPServiceComplete
  4817  057F  0021               	movlb	1	; select bank1
  4818  0580  0840               	movf	_pBDTEntryIn^(0+128),w
  4819  0581  0086               	movwf	6
  4820  0582  0187               	clrf	7
  4821  0583  0875               	movf	??_USBCtrlEPServiceComplete,w
  4822  0584  0081               	movwf	1
  4823                           
  4824                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4825  0585  0840               	movf	_pBDTEntryIn^(0+128),w
  4826  0586  0086               	movwf	6
  4827  0587  0187               	clrf	7
  4828  0588  1781               	bsf	1,7
  4829                           
  4830                           ;usb_device.c: 1683: }
  4831                           ;usb_device.c: 1684: }
  4832  0589  0008               	return
  4833  058A                     i1l486:	
  4834                           
  4835                           ;usb_device.c: 1685: else
  4836                           ;usb_device.c: 1686: {
  4837                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  4838  058A  0020               	movlb	0	; select bank0
  4839  058B  1FC0               	btfss	64,7	;volatile
  4840  058C  2DA2               	goto	i1l3212
  4841                           
  4842                           ;usb_device.c: 1688: {
  4843                           ;usb_device.c: 1689: controlTransferState = 1;
  4844  058D  3001               	movlw	1
  4845  058E  00F5               	movwf	??_USBCtrlEPServiceComplete
  4846  058F  0875               	movf	??_USBCtrlEPServiceComplete,w
  4847  0590  00E8               	movwf	_controlTransferState	;volatile
  4848                           
  4849                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  4850  0591  0021               	movlb	1	; select bank1
  4851  0592  0847               	movf	_USBDeferINDataStagePackets^(0+128),w	;volatile
  4852  0593  1D03               	btfss	3,2
  4853  0594  2D98               	goto	i1l3204
  4854                           
  4855                           ;usb_device.c: 1704: {
  4856                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  4857  0595  3187  27A3  3185   	fcall	_USBCtrlEPAllowDataStage
  4858  0598                     i1l3204:	
  4859                           
  4860                           ;usb_device.c: 1706: }
  4861                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  4862  0598  0021               	movlb	1	; select bank1
  4863  0599  01CB               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  4864                           
  4865                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  4866  059A  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  4867                           
  4868                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  4869  059B  0020               	movlb	0	; select bank0
  4870  059C  0866               	movf	_USBDeferStatusStagePacket,w	;volatile
  4871  059D  1D03               	btfss	3,2
  4872  059E  0008               	return
  4873                           
  4874                           ;usb_device.c: 1731: {
  4875                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  4876  059F  3186  26CD         	fcall	_USBCtrlEPAllowStatusStage
  4877                           
  4878                           ;usb_device.c: 1733: }
  4879                           ;usb_device.c: 1734: }
  4880  05A1  0008               	return
  4881  05A2                     i1l3212:	
  4882                           
  4883                           ;usb_device.c: 1735: else
  4884                           ;usb_device.c: 1736: {
  4885                           ;usb_device.c: 1747: controlTransferState = 2;
  4886  05A2  3002               	movlw	2
  4887  05A3  00F5               	movwf	??_USBCtrlEPServiceComplete
  4888  05A4  0875               	movf	??_USBCtrlEPServiceComplete,w
  4889  05A5  0020               	movlb	0	; select bank0
  4890  05A6  00E8               	movwf	_controlTransferState	;volatile
  4891                           
  4892                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  4893  05A7  3008               	movlw	8
  4894  05A8  00F5               	movwf	??_USBCtrlEPServiceComplete
  4895  05A9  0A6B               	incf	_pBDTEntryEP0OutNext,w
  4896  05AA  0086               	movwf	6
  4897  05AB  0187               	clrf	7
  4898  05AC  0875               	movf	??_USBCtrlEPServiceComplete,w
  4899  05AD  0081               	movwf	1
  4900                           
  4901                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4902  05AE  3040               	movlw	64
  4903  05AF  00F5               	movwf	??_USBCtrlEPServiceComplete
  4904  05B0  3000               	movlw	0
  4905  05B1  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  4906  05B2  086B               	movf	_pBDTEntryEP0OutNext,w
  4907  05B3  3E02               	addlw	2
  4908  05B4  0086               	movwf	6
  4909  05B5  0187               	clrf	7
  4910  05B6  0875               	movf	??_USBCtrlEPServiceComplete,w
  4911  05B7  3FC0               	movwi [0]fsr1
  4912  05B8  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  4913  05B9  3FC1               	movwi [1]fsr1
  4914                           
  4915                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  4916  05BA  3004               	movlw	4
  4917  05BB  00F5               	movwf	??_USBCtrlEPServiceComplete
  4918  05BC  086B               	movf	_pBDTEntryEP0OutNext,w
  4919  05BD  0086               	movwf	6
  4920  05BE  0187               	clrf	7
  4921  05BF  0875               	movf	??_USBCtrlEPServiceComplete,w
  4922  05C0  0081               	movwf	1
  4923                           
  4924                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4925  05C1  086B               	movf	_pBDTEntryEP0OutNext,w
  4926  05C2  0086               	movwf	6
  4927  05C3  0187               	clrf	7
  4928  05C4  1781               	bsf	1,7
  4929                           
  4930                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  4931  05C5  0021               	movlb	1	; select bank1
  4932  05C6  01CB               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  4933                           
  4934                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  4935  05C7  01CA               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  4936                           
  4937                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  4938  05C8  0020               	movlb	0	; select bank0
  4939  05C9  0866               	movf	_USBDeferStatusStagePacket,w	;volatile
  4940  05CA  1D03               	btfss	3,2
  4941  05CB  0008               	return
  4942                           
  4943                           ;usb_device.c: 1759: {
  4944                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  4945  05CC  3186  26CD         	fcall	_USBCtrlEPAllowStatusStage
  4946  05CE  0008               	return
  4947  05CF                     __end_of_USBCtrlEPServiceComplete:	
  4948                           
  4949                           	psect	text18
  4950  07A3                     __ptext18:	
  4951 ;; *************** function _USBCtrlEPAllowDataStage *****************
  4952 ;; Defined at:
  4953 ;;		line 1506 in file "../../../../../../framework/usb/src/usb_device.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;		None               void
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4971 ;;Total ram usage:        2 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    1
  4974 ;; This function calls:
  4975 ;;		_USBCtrlTrfTxService
  4976 ;; This function is called by:
  4977 ;;		_USBCtrlEPServiceComplete
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function _USBCtrlEPAllowDataStage
  4983  07A3                     _USBCtrlEPAllowDataStage:	
  4984                           
  4985                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  4986                           
  4987                           ;incstack = 0
  4988                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4989  07A3  0021               	movlb	1	; select bank1
  4990  07A4  01C7               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  4991                           
  4992                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  4993  07A5  01C8               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  4994                           
  4995                           ;usb_device.c: 1511: if(controlTransferState == 2)
  4996  07A6  3002               	movlw	2
  4997  07A7  0020               	movlb	0	; select bank0
  4998  07A8  0668               	xorwf	_controlTransferState,w	;volatile
  4999  07A9  1D03               	btfss	3,2
  5000  07AA  2FCA               	goto	i1l2968
  5001                           
  5002                           ;usb_device.c: 1512: {
  5003                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  5004  07AB  3008               	movlw	8
  5005  07AC  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5006  07AD  0A6B               	incf	_pBDTEntryEP0OutNext,w
  5007  07AE  0086               	movwf	6
  5008  07AF  0187               	clrf	7
  5009  07B0  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5010  07B1  0081               	movwf	1
  5011                           
  5012                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5013  07B2  3048               	movlw	72
  5014  07B3  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5015  07B4  3000               	movlw	0
  5016  07B5  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5017  07B6  086B               	movf	_pBDTEntryEP0OutNext,w
  5018  07B7  3E02               	addlw	2
  5019  07B8  0086               	movwf	6
  5020  07B9  0187               	clrf	7
  5021  07BA  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5022  07BB  3FC0               	movwi [0]fsr1
  5023  07BC  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5024  07BD  3FC1               	movwi [1]fsr1
  5025                           
  5026                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5027  07BE  3048               	movlw	72
  5028  07BF  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5029  07C0  086B               	movf	_pBDTEntryEP0OutNext,w
  5030  07C1  0086               	movwf	6
  5031  07C2  0187               	clrf	7
  5032  07C3  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5033  07C4  0081               	movwf	1
  5034                           
  5035                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5036  07C5  086B               	movf	_pBDTEntryEP0OutNext,w
  5037  07C6  0086               	movwf	6
  5038  07C7  0187               	clrf	7
  5039  07C8  1781               	bsf	1,7
  5040                           
  5041                           ;usb_device.c: 1518: }
  5042  07C9  0008               	return
  5043  07CA                     i1l2968:	
  5044                           
  5045                           ;usb_device.c: 1519: else
  5046                           ;usb_device.c: 1520: {
  5047                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5048  07CA  0021               	movlb	1	; select bank1
  5049  07CB  0837               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  5050  07CC  0020               	movlb	0	; select bank0
  5051  07CD  0247               	subwf	71,w	;volatile
  5052  07CE  1D03               	skipz
  5053  07CF  2FD4               	goto	u218_25
  5054  07D0  0021               	movlb	1	; select bank1
  5055  07D1  0836               	movf	(_inPipes^(0+128)+3),w	;volatile
  5056  07D2  0020               	movlb	0	; select bank0
  5057  07D3  0246               	subwf	70,w	;volatile
  5058  07D4                     u218_25:	
  5059  07D4  1803               	skipnc
  5060  07D5  2FDD               	goto	i1l2972
  5061                           
  5062                           ;usb_device.c: 1524: {
  5063                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  5064  07D6  0847               	movf	71,w	;volatile
  5065  07D7  0021               	movlb	1	; select bank1
  5066  07D8  00B7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5067  07D9  0020               	movlb	0	; select bank0
  5068  07DA  0846               	movf	70,w	;volatile
  5069  07DB  0021               	movlb	1	; select bank1
  5070  07DC  00B6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5071  07DD                     i1l2972:	
  5072                           
  5073                           ;usb_device.c: 1526: }
  5074                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  5075  07DD  318F  279B         	fcall	_USBCtrlTrfTxService
  5076                           
  5077                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5078  07DF  3048               	movlw	72
  5079  07E0  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5080  07E1  3000               	movlw	0
  5081  07E2  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  5082  07E3  0021               	movlb	1	; select bank1
  5083  07E4  0840               	movf	_pBDTEntryIn^(0+128),w
  5084  07E5  3E02               	addlw	2
  5085  07E6  0086               	movwf	6
  5086  07E7  0187               	clrf	7
  5087  07E8  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5088  07E9  3FC0               	movwi [0]fsr1
  5089  07EA  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  5090  07EB  3FC1               	movwi [1]fsr1
  5091                           
  5092                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5093  07EC  3048               	movlw	72
  5094  07ED  00F3               	movwf	??_USBCtrlEPAllowDataStage
  5095  07EE  0840               	movf	_pBDTEntryIn^(0+128),w
  5096  07EF  0086               	movwf	6
  5097  07F0  0187               	clrf	7
  5098  07F1  0873               	movf	??_USBCtrlEPAllowDataStage,w
  5099  07F2  0081               	movwf	1
  5100                           
  5101                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5102  07F3  0840               	movf	_pBDTEntryIn^(0+128),w
  5103  07F4  0086               	movwf	6
  5104  07F5  0187               	clrf	7
  5105  07F6  1781               	bsf	1,7
  5106  07F7  0008               	return
  5107  07F8                     __end_of_USBCtrlEPAllowDataStage:	
  5108                           
  5109                           	psect	text19
  5110  0ED9                     __ptext19:	
  5111 ;; *************** function _USBCheckStdRequest *****************
  5112 ;; Defined at:
  5113 ;;		line 2703 in file "../../../../../../framework/usb/src/usb_device.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;		None               void
  5120 ;; Registers used:
  5121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;Total ram usage:        1 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    5
  5134 ;; This function calls:
  5135 ;;		_USBStdFeatureReqHandler
  5136 ;;		_USBStdGetDscHandler
  5137 ;;		_USBStdGetStatusHandler
  5138 ;;		_USBStdSetCfgHandler
  5139 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5140 ;; This function is called by:
  5141 ;;		_USBCtrlTrfSetupHandler
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           
  5146                           ;psect for function _USBCheckStdRequest
  5147  0ED9                     _USBCheckStdRequest:	
  5148                           
  5149                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  5150                           
  5151                           ;incstack = 0
  5152                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5153  0ED9  0020               	movlb	0	; select bank0
  5154  0EDA  0E40               	swapf	64,w	;volatile
  5155  0EDB  0C89               	rrf	9,f
  5156  0EDC  3903               	andlw	3
  5157  0EDD  3A00               	xorlw	0
  5158  0EDE  1D03               	btfss	3,2
  5159  0EDF  0008               	return
  5160  0EE0  2F2B               	goto	i1l3306
  5161  0EE1                     i1l613:	
  5162                           ;usb_device.c: 2708: {
  5163                           ;usb_device.c: 2709: case 5:
  5164                           
  5165                           ;usb_device.c: 2707: switch(SetupPkt.bRequest)
  5166                           
  5167                           
  5168                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  5169  0EE1  0021               	movlb	1	; select bank1
  5170  0EE2  17B5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5171                           
  5172                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  5173  0EE3  3008               	movlw	8
  5174  0EE4  0020               	movlb	0	; select bank0
  5175  0EE5  00DB               	movwf	??_USBCheckStdRequest
  5176  0EE6  085B               	movf	??_USBCheckStdRequest,w
  5177  0EE7  0021               	movlb	1	; select bank1
  5178  0EE8  00C9               	movwf	_USBDeviceState^(0+128)	;volatile
  5179                           
  5180                           ;usb_device.c: 2713: break;
  5181  0EE9  0008               	return
  5182  0EEA                     i1l3276:	
  5183                           ;usb_device.c: 2714: case 6:
  5184                           
  5185                           
  5186                           ;usb_device.c: 2715: USBStdGetDscHandler();
  5187  0EEA  3186  264E         	fcall	_USBStdGetDscHandler
  5188                           
  5189                           ;usb_device.c: 2716: break;
  5190  0EEC  0008               	return
  5191  0EED                     i1l3278:	
  5192                           ;usb_device.c: 2717: case 9:
  5193                           
  5194                           
  5195                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  5196  0EED  3185  25CF         	fcall	_USBStdSetCfgHandler
  5197                           
  5198                           ;usb_device.c: 2719: break;
  5199  0EEF  0008               	return
  5200  0EF0                     i1l3280:	
  5201                           ;usb_device.c: 2720: case 8:
  5202                           
  5203                           
  5204                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5205  0EF0  306D               	movlw	low _USBActiveConfiguration
  5206  0EF1  0021               	movlb	1	; select bank1
  5207  0EF2  00B3               	movwf	_inPipes^(0+128)	;volatile
  5208  0EF3  3000               	movlw	high _USBActiveConfiguration
  5209  0EF4  00B4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5210                           
  5211                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5212  0EF5  1435               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5213                           
  5214                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  5215  0EF6  3001               	movlw	1
  5216  0EF7  0020               	movlb	0	; select bank0
  5217  0EF8  00DB               	movwf	??_USBCheckStdRequest
  5218  0EF9  085B               	movf	??_USBCheckStdRequest,w
  5219  0EFA  0021               	movlb	1	; select bank1
  5220  0EFB  00B6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5221                           
  5222                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  5223  0EFC  17B5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5224                           
  5225                           ;usb_device.c: 2725: break;
  5226  0EFD  0008               	return
  5227  0EFE                     i1l3288:	
  5228                           ;usb_device.c: 2726: case 0:
  5229                           
  5230                           
  5231                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  5232  0EFE  318D  25F4         	fcall	_USBStdGetStatusHandler
  5233                           
  5234                           ;usb_device.c: 2728: break;
  5235  0F00  0008               	return
  5236  0F01                     i1l3290:	
  5237                           ;usb_device.c: 2729: case 1:
  5238                           
  5239                           
  5240                           ;usb_device.c: 2730: case 3:
  5241                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  5242  0F01  3180  2025         	fcall	_USBStdFeatureReqHandler
  5243                           
  5244                           ;usb_device.c: 2732: break;
  5245  0F03  0008               	return
  5246  0F04                     i1l3292:	
  5247                           ;usb_device.c: 2733: case 10:
  5248                           
  5249                           
  5250                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5251  0F04  0020               	movlb	0	; select bank0
  5252  0F05  0844               	movf	68,w	;volatile
  5253  0F06  3E6E               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  5254  0F07  0021               	movlb	1	; select bank1
  5255  0F08  00B3               	movwf	_inPipes^(0+128)	;volatile
  5256  0F09  3000               	movlw	0
  5257  0F0A  00B4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5258                           
  5259                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5260  0F0B  1435               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5261                           
  5262                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  5263  0F0C  3001               	movlw	1
  5264  0F0D  0020               	movlb	0	; select bank0
  5265  0F0E  00DB               	movwf	??_USBCheckStdRequest
  5266  0F0F  085B               	movf	??_USBCheckStdRequest,w
  5267  0F10  0021               	movlb	1	; select bank1
  5268  0F11  00B6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5269                           
  5270                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  5271  0F12  17B5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5272                           
  5273                           ;usb_device.c: 2738: break;
  5274  0F13  0008               	return
  5275  0F14                     i1l622:	
  5276                           ;usb_device.c: 2739: case 11:
  5277                           
  5278                           
  5279                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  5280  0F14  0021               	movlb	1	; select bank1
  5281  0F15  17B5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5282                           
  5283                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5284  0F16  0020               	movlb	0	; select bank0
  5285  0F17  0842               	movf	66,w	;volatile
  5286  0F18  00DB               	movwf	??_USBCheckStdRequest
  5287  0F19  0844               	movf	68,w	;volatile
  5288  0F1A  3E6E               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  5289  0F1B  0086               	movwf	6
  5290  0F1C  0187               	clrf	7
  5291  0F1D  085B               	movf	??_USBCheckStdRequest,w
  5292  0F1E  0081               	movwf	1
  5293                           
  5294                           ;usb_device.c: 2742: break;
  5295  0F1F  0008               	return
  5296  0F20                     i1l3302:	
  5297                           ;usb_device.c: 2743: case 7:
  5298                           
  5299                           
  5300                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5301  0F20  3000               	movlw	0
  5302  0F21  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5303  0F22  3002               	movlw	2
  5304  0F23  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5305  0F24  01D2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5306  0F25  3000               	movlw	0
  5307  0F26  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5308  0F27  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5309  0F28  318D  2521         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5310                           
  5311                           ;usb_device.c: 2749: }
  5312                           
  5313                           ;usb_device.c: 2748: break;
  5314                           
  5315                           ;usb_device.c: 2747: default:
  5316                           
  5317                           ;usb_device.c: 2746: case 12:
  5318                           
  5319                           ;usb_device.c: 2745: break;
  5320  0F2A  0008               	return
  5321  0F2B                     i1l3306:	
  5322  0F2B  0020               	movlb	0	; select bank0
  5323  0F2C  0841               	movf	65,w	;volatile
  5324                           
  5325                           ; Switch size 1, requested type "space"
  5326                           ; Number of cases is 11, Range of values is 0 to 12
  5327                           ; switch strategies available:
  5328                           ; Name         Instructions Cycles
  5329                           ; direct_byte           32     6 (fixed)
  5330                           ; simple_byte           34    18 (average)
  5331                           ; jumptable            260     6 (fixed)
  5332                           ;	Chosen strategy is direct_byte
  5333  0F2D  0084               	movwf	4
  5334  0F2E  300D               	movlw	13
  5335  0F2F  0204               	subwf	4,w
  5336  0F30  1803               	skipnc
  5337  0F31  0008               	return
  5338  0F32  3188               	movlp	high i1S3994
  5339  0F33  3504               	lslf	4,w
  5340  0F34  3E00               	addlw	low i1S3994
  5341  0F35  0082               	movwf	2
  5342  0F36                     i1l611:	
  5343  0F36  0008               	return
  5344  0F37                     __end_of_USBCheckStdRequest:	
  5345                           
  5346                           	psect	swtext2
  5347  0800                     __pswtext2:	
  5348  0800                     i1S3994:	
  5349  0800  318E  2EFE         	ljmp	i1l3288
  5350  0802  318F  2F01         	ljmp	i1l3290
  5351  0804  318F  2F36         	ljmp	i1l611
  5352  0806  318F  2F01         	ljmp	i1l3290
  5353  0808  318F  2F36         	ljmp	i1l611
  5354  080A  318E  2EE1         	ljmp	i1l613
  5355  080C  318E  2EEA         	ljmp	i1l3276
  5356  080E  318F  2F20         	ljmp	i1l3302
  5357  0810  318E  2EF0         	ljmp	i1l3280
  5358  0812  318E  2EED         	ljmp	i1l3278
  5359  0814  318F  2F04         	ljmp	i1l3292
  5360  0816  318F  2F14         	ljmp	i1l622
  5361  0818  318F  2F36         	ljmp	i1l611
  5362                           
  5363                           	psect	text20
  5364  05CF                     __ptext20:	
  5365 ;; *************** function _USBStdSetCfgHandler *****************
  5366 ;; Defined at:
  5367 ;;		line 1986 in file "../../../../../../framework/usb/src/usb_device.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  p               2    6[BANK0 ] PTR unsigned char 
  5372 ;;		 -> UEP1(1), 
  5373 ;;  i               1    8[BANK0 ] unsigned char 
  5374 ;;  i               1    9[BANK0 ] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;		None               void
  5377 ;; Registers used:
  5378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5385 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;Total ram usage:        5 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:    4
  5391 ;; This function calls:
  5392 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5393 ;;		_memset
  5394 ;; This function is called by:
  5395 ;;		_USBCheckStdRequest
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           
  5400                           ;psect for function _USBStdSetCfgHandler
  5401  05CF                     _USBStdSetCfgHandler:	
  5402                           
  5403                           ;usb_device.c: 1988: uint8_t i;
  5404                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  5405                           
  5406                           ;incstack = 0
  5407                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5408  05CF  0021               	movlb	1	; select bank1
  5409  05D0  17B5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5410                           
  5411                           ;usb_device.c: 1994: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  5412  05D1  300E               	movlw	14
  5413  05D2  0020               	movlb	0	; select bank0
  5414  05D3  00D7               	movwf	USBStdSetCfgHandler@p+1
  5415  05D4  3099               	movlw	153
  5416  05D5  00D6               	movwf	USBStdSetCfgHandler@p
  5417  05D6  01D8               	clrf	USBStdSetCfgHandler@i_1573
  5418  05D7  0858               	movf	USBStdSetCfgHandler@i_1573,w
  5419  05D8  1D03               	btfss	3,2
  5420  05D9  2DEA               	goto	i1l2996
  5421  05DA                     i1l2988:	
  5422  05DA  0856               	movf	USBStdSetCfgHandler@p,w
  5423  05DB  0086               	movwf	6
  5424  05DC  0857               	movf	USBStdSetCfgHandler@p+1,w
  5425  05DD  0087               	movwf	7
  5426  05DE  0181               	clrf	1
  5427  05DF  3001               	movlw	1
  5428  05E0  07D6               	addwf	USBStdSetCfgHandler@p,f
  5429  05E1  3000               	movlw	0
  5430  05E2  3DD7               	addwfc	USBStdSetCfgHandler@p+1,f
  5431  05E3  3001               	movlw	1
  5432  05E4  00D5               	movwf	??_USBStdSetCfgHandler
  5433  05E5  0855               	movf	??_USBStdSetCfgHandler,w
  5434  05E6  07D8               	addwf	USBStdSetCfgHandler@i_1573,f
  5435  05E7  0858               	movf	USBStdSetCfgHandler@i_1573,w
  5436  05E8  1903               	btfsc	3,2
  5437  05E9  2DDA               	goto	i1l2988
  5438  05EA                     i1l2996:	
  5439                           
  5440                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5441  05EA  3000               	movlw	0
  5442  05EB  00F0               	movwf	memset@c
  5443  05EC  00F1               	movwf	memset@c+1
  5444  05ED  3020               	movlw	32
  5445  05EE  00F2               	movwf	memset@n
  5446  05EF  3000               	movlw	0
  5447  05F0  00F3               	movwf	memset@n+1
  5448  05F1  3020               	movlw	32
  5449  05F2  318B  23E0  3185   	fcall	_memset
  5450                           
  5451                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  5452  05F5  003D               	movlb	29	; select bank29
  5453  05F6  170E               	bsf	14,6	;volatile
  5454                           
  5455                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(1+1u); i++)
  5456  05F7  0020               	movlb	0	; select bank0
  5457  05F8  01D9               	clrf	USBStdSetCfgHandler@i
  5458  05F9  3002               	movlw	2
  5459  05FA  0259               	subwf	USBStdSetCfgHandler@i,w
  5460  05FB  1803               	btfsc	3,0
  5461  05FC  2E0F               	goto	i1l3012
  5462  05FD                     i1l3006:	
  5463                           
  5464                           ;usb_device.c: 2006: {
  5465                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  5466  05FD  0859               	movf	USBStdSetCfgHandler@i,w
  5467  05FE  3EBC               	addlw	(low (_ep_data_in| 0))& (0+255)
  5468  05FF  0086               	movwf	6
  5469  0600  0187               	clrf	7
  5470  0601  0181               	clrf	1
  5471                           
  5472                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  5473  0602  0859               	movf	USBStdSetCfgHandler@i,w
  5474  0603  3EBE               	addlw	(low (_ep_data_out| 0))& (0+255)
  5475  0604  0086               	movwf	6
  5476  0605  0187               	clrf	7
  5477  0606  0181               	clrf	1
  5478  0607  3001               	movlw	1
  5479  0608  00D5               	movwf	??_USBStdSetCfgHandler
  5480  0609  0855               	movf	??_USBStdSetCfgHandler,w
  5481  060A  07D9               	addwf	USBStdSetCfgHandler@i,f
  5482  060B  3002               	movlw	2
  5483  060C  0259               	subwf	USBStdSetCfgHandler@i,w
  5484  060D  1C03               	skipc
  5485  060E  2DFD               	goto	i1l3006
  5486  060F                     i1l3012:	
  5487                           
  5488                           ;usb_device.c: 2009: }
  5489                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,1);
  5490  060F  3000               	movlw	0
  5491  0610  00F0               	movwf	memset@c
  5492  0611  00F1               	movwf	memset@c+1
  5493  0612  3001               	movlw	1
  5494  0613  00F2               	movwf	memset@n
  5495  0614  3000               	movlw	0
  5496  0615  00F3               	movwf	memset@n+1
  5497  0616  306E               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  5498  0617  318B  23E0  3185   	fcall	_memset
  5499                           
  5500                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  5501  061A  003D               	movlb	29	; select bank29
  5502  061B  130E               	bcf	14,6	;volatile
  5503                           
  5504                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5505  061C  3028               	movlw	40
  5506  061D  0020               	movlb	0	; select bank0
  5507  061E  00D5               	movwf	??_USBStdSetCfgHandler
  5508  061F  0855               	movf	??_USBStdSetCfgHandler,w
  5509  0620  0021               	movlb	1	; select bank1
  5510  0621  00C0               	movwf	_pBDTEntryIn^(0+128)
  5511                           
  5512                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5513  0622  3020               	movlw	32
  5514  0623  0020               	movlb	0	; select bank0
  5515  0624  00D5               	movwf	??_USBStdSetCfgHandler
  5516  0625  0855               	movf	??_USBStdSetCfgHandler,w
  5517  0626  00EA               	movwf	_pBDTEntryEP0OutCurrent
  5518                           
  5519                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5520  0627  086A               	movf	_pBDTEntryEP0OutCurrent,w
  5521  0628  00D5               	movwf	??_USBStdSetCfgHandler
  5522  0629  0855               	movf	??_USBStdSetCfgHandler,w
  5523  062A  00EB               	movwf	_pBDTEntryEP0OutNext
  5524                           
  5525                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5526  062B  0842               	movf	66,w	;volatile
  5527  062C  00D5               	movwf	??_USBStdSetCfgHandler
  5528  062D  0855               	movf	??_USBStdSetCfgHandler,w
  5529  062E  00ED               	movwf	_USBActiveConfiguration	;volatile
  5530                           
  5531                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  5532  062F  086D               	movf	_USBActiveConfiguration,w	;volatile
  5533  0630  1D03               	btfss	3,2
  5534  0631  2E38               	goto	i1l3028
  5535                           
  5536                           ;usb_device.c: 2028: {
  5537                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  5538  0632  3010               	movlw	16
  5539  0633  00D5               	movwf	??_USBStdSetCfgHandler
  5540  0634  0855               	movf	??_USBStdSetCfgHandler,w
  5541  0635  0021               	movlb	1	; select bank1
  5542  0636  00C9               	movwf	_USBDeviceState^(0+128)	;volatile
  5543                           
  5544                           ;usb_device.c: 2031: }
  5545  0637  0008               	return
  5546  0638                     i1l3028:	
  5547                           
  5548                           ;usb_device.c: 2032: else
  5549                           ;usb_device.c: 2033: {
  5550                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5551  0638  3000               	movlw	0
  5552  0639  0020               	movlb	0	; select bank0
  5553  063A  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5554  063B  3001               	movlw	1
  5555  063C  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5556  063D  306D               	movlw	(low (_USBActiveConfiguration| 0))& (0+255)
  5557  063E  00D5               	movwf	??_USBStdSetCfgHandler
  5558  063F  0855               	movf	??_USBStdSetCfgHandler,w
  5559  0640  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5560  0641  3001               	movlw	1
  5561  0642  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5562  0643  3000               	movlw	0
  5563  0644  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5564  0645  318D  2521         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5565                           
  5566                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  5567  0647  3020               	movlw	32
  5568  0648  0020               	movlb	0	; select bank0
  5569  0649  00D5               	movwf	??_USBStdSetCfgHandler
  5570  064A  0855               	movf	??_USBStdSetCfgHandler,w
  5571  064B  0021               	movlb	1	; select bank1
  5572  064C  00C9               	movwf	_USBDeviceState^(0+128)	;volatile
  5573  064D  0008               	return
  5574  064E                     __end_of_USBStdSetCfgHandler:	
  5575                           
  5576                           	psect	text21
  5577  0BE0                     __ptext21:	
  5578 ;; *************** function _memset *****************
  5579 ;; Defined at:
  5580 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/memset.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  p1              1    wreg     PTR void 
  5583 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5584 ;;  c               2    0[COMMON] int 
  5585 ;;  n               2    2[COMMON] unsigned int 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  p1              1    6[COMMON] PTR void 
  5588 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5589 ;;  p               1    5[COMMON] PTR unsigned char 
  5590 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      PTR void 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;Total ram usage:        7 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; This function calls:
  5607 ;;		Nothing
  5608 ;; This function is called by:
  5609 ;;		_USBStdSetCfgHandler
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           
  5614                           ;psect for function _memset
  5615  0BE0                     _memset:	
  5616                           
  5617                           ;incstack = 0
  5618                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5619                           ;memset@p1 stored from wreg
  5620  0BE0  00F6               	movwf	memset@p1
  5621  0BE1  0876               	movf	memset@p1,w
  5622  0BE2  00F4               	movwf	??_memset
  5623  0BE3  0874               	movf	??_memset,w
  5624  0BE4  00F5               	movwf	memset@p
  5625  0BE5                     i1l2918:	
  5626  0BE5  3001               	movlw	1
  5627  0BE6  02F2               	subwf	memset@n,f
  5628  0BE7  3000               	movlw	0
  5629  0BE8  3BF3               	subwfb	memset@n+1,f
  5630  0BE9  0A72               	incf	memset@n,w
  5631  0BEA  1903               	btfsc	3,2
  5632  0BEB  0A73               	incf	memset@n+1,w
  5633  0BEC  1903               	btfsc	3,2
  5634  0BED  0008               	return
  5635  0BEE  0870               	movf	memset@c,w
  5636  0BEF  00F4               	movwf	??_memset
  5637  0BF0  0875               	movf	memset@p,w
  5638  0BF1  0086               	movwf	6
  5639  0BF2  0187               	clrf	7
  5640  0BF3  0874               	movf	??_memset,w
  5641  0BF4  0081               	movwf	1
  5642  0BF5  3001               	movlw	1
  5643  0BF6  00F4               	movwf	??_memset
  5644  0BF7  0874               	movf	??_memset,w
  5645  0BF8  07F5               	addwf	memset@p,f
  5646  0BF9  2BE5               	goto	i1l2918
  5647  0BFA                     __end_of_memset:	
  5648                           ;	Return value of _memset is never used
  5649                           
  5650                           
  5651                           	psect	text22
  5652  0DF4                     __ptext22:	
  5653 ;; *************** function _USBStdGetStatusHandler *****************
  5654 ;; Defined at:
  5655 ;;		line 2147 in file "../../../../../../framework/usb/src/usb_device.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  p               1    1[COMMON] PTR struct __BDT
  5660 ;;		 -> BDT(32), NULL(0), 
  5661 ;; Return value:  Size  Location     Type
  5662 ;;		None               void
  5663 ;; Registers used:
  5664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5674 ;;Total ram usage:        2 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_USBCheckStdRequest
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           
  5684                           ;psect for function _USBStdGetStatusHandler
  5685  0DF4                     _USBStdGetStatusHandler:	
  5686                           
  5687                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  5688                           
  5689                           ;incstack = 0
  5690                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  5691  0DF4  0020               	movlb	0	; select bank0
  5692  0DF5  01C8               	clrf	72	;volatile
  5693                           
  5694                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  5695  0DF6  01C9               	clrf	73	;volatile
  5696                           
  5697                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  5698  0DF7  2E25               	goto	i1l3084
  5699  0DF8                     i1l551:	
  5700                           ;usb_device.c: 2153: {
  5701                           ;usb_device.c: 2154: case (0x00):
  5702                           
  5703                           
  5704                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  5705  0DF8  0021               	movlb	1	; select bank1
  5706  0DF9  17B5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5707                           
  5708                           ;usb_device.c: 2163: }
  5709                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  5710                           
  5711                           ;usb_device.c: 2161: {
  5712                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  5713                           
  5714                           ;usb_device.c: 2160: if(0 == 1)
  5715  0DFA  0021               	movlb	1	; select bank1
  5716  0DFB  0345               	decf	_RemoteWakeup^(0+128),w	;volatile
  5717  0DFC  1D03               	btfss	3,2
  5718  0DFD  2E31               	goto	i1l554
  5719                           
  5720                           ;usb_device.c: 2166: {
  5721                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  5722  0DFE  0020               	movlb	0	; select bank0
  5723  0DFF  14C8               	bsf	72,1	;volatile
  5724                           
  5725                           ;usb_device.c: 2168: }
  5726                           ;usb_device.c: 2169: break;
  5727  0E00  2E31               	goto	i1l554
  5728  0E01                     i1l555:	
  5729                           ;usb_device.c: 2170: case (0x01):
  5730                           
  5731                           
  5732                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  5733  0E01  0021               	movlb	1	; select bank1
  5734  0E02  17B5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5735                           
  5736                           ;usb_device.c: 2172: break;
  5737  0E03  2E31               	goto	i1l554
  5738  0E04                     i1l556:	
  5739                           ;usb_device.c: 2173: case (0x02):
  5740                           
  5741                           
  5742                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  5743  0E04  0021               	movlb	1	; select bank1
  5744  0E05  17B5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5745                           
  5746                           ;usb_device.c: 2178: {
  5747                           ;usb_device.c: 2179: BDT_ENTRY *p;
  5748                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  5749  0E06  0020               	movlb	0	; select bank0
  5750  0E07  1BC4               	btfsc	68,7	;volatile
  5751  0E08  2E0D               	goto	i1l3074
  5752                           
  5753                           ;usb_device.c: 2182: {
  5754                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5755  0E09  0844               	movf	68,w	;volatile
  5756  0E0A  390F               	andlw	15
  5757  0E0B  3EC2               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  5758  0E0C  2E10               	goto	L2
  5759  0E0D                     i1l3074:	
  5760                           ;usb_device.c: 2184: }
  5761                           
  5762                           
  5763                           ;usb_device.c: 2185: else
  5764                           ;usb_device.c: 2186: {
  5765                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5766  0E0D  0844               	movf	68,w	;volatile
  5767  0E0E  390F               	andlw	15
  5768  0E0F  3EC0               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5769  0E10                     L2:	
  5770  0E10  0086               	movwf	6
  5771  0E11  0187               	clrf	7
  5772  0E12  0801               	movf	1,w
  5773  0E13  00F0               	movwf	??_USBStdGetStatusHandler
  5774  0E14  0870               	movf	??_USBStdGetStatusHandler,w
  5775  0E15  00F1               	movwf	USBStdGetStatusHandler@p
  5776                           
  5777                           ;usb_device.c: 2188: }
  5778                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  5779  0E16  0871               	movf	USBStdGetStatusHandler@p,w
  5780  0E17  0086               	movwf	6
  5781  0E18  0187               	clrf	7
  5782  0E19  1F81               	btfss	1,7
  5783  0E1A  2E31               	goto	i1l554
  5784  0E1B  0871               	movf	USBStdGetStatusHandler@p,w
  5785  0E1C  0086               	movwf	6
  5786  0E1D  0187               	clrf	7
  5787  0E1E  1D01               	btfss	1,2
  5788  0E1F  2E31               	goto	i1l554
  5789                           
  5790                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  5791  0E20  3001               	movlw	1
  5792  0E21  00F0               	movwf	??_USBStdGetStatusHandler
  5793  0E22  0870               	movf	??_USBStdGetStatusHandler,w
  5794  0E23  00C8               	movwf	72	;volatile
  5795                           
  5796                           ;usb_device.c: 2193: }
  5797                           ;usb_device.c: 2194: }
  5798                           
  5799                           ;usb_device.c: 2192: break;
  5800  0E24  2E31               	goto	i1l554
  5801  0E25                     i1l3084:	
  5802  0E25  0840               	movf	64,w	;volatile
  5803  0E26  391F               	andlw	31
  5804                           
  5805                           ; Switch size 1, requested type "space"
  5806                           ; Number of cases is 3, Range of values is 0 to 2
  5807                           ; switch strategies available:
  5808                           ; Name         Instructions Cycles
  5809                           ; simple_byte           10     6 (average)
  5810                           ; direct_byte           12     6 (fixed)
  5811                           ; jumptable            260     6 (fixed)
  5812                           ;	Chosen strategy is simple_byte
  5813  0E27  3A00               	xorlw	0	; case 0
  5814  0E28  1903               	skipnz
  5815  0E29  2DF8               	goto	i1l551
  5816  0E2A  3A01               	xorlw	1	; case 1
  5817  0E2B  1903               	skipnz
  5818  0E2C  2E01               	goto	i1l555
  5819  0E2D  3A03               	xorlw	3	; case 2
  5820  0E2E  1903               	skipnz
  5821  0E2F  2E04               	goto	i1l556
  5822  0E30  2E31               	goto	i1l554
  5823  0E31                     i1l554:	
  5824                           
  5825                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  5826  0E31  0021               	movlb	1	; select bank1
  5827  0E32  1FB5               	btfss	(_inPipes^(0+128)+2),7	;volatile
  5828  0E33  0008               	return
  5829                           
  5830                           ;usb_device.c: 2197: {
  5831                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  5832  0E34  3048               	movlw	72
  5833  0E35  00B3               	movwf	_inPipes^(0+128)	;volatile
  5834  0E36  3000               	movlw	0
  5835  0E37  00B4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5836                           
  5837                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5838  0E38  1435               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5839                           
  5840                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
  5841  0E39  3002               	movlw	2
  5842  0E3A  00F0               	movwf	??_USBStdGetStatusHandler
  5843  0E3B  0870               	movf	??_USBStdGetStatusHandler,w
  5844  0E3C  00B6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5845  0E3D  0008               	return
  5846  0E3E                     __end_of_USBStdGetStatusHandler:	
  5847                           
  5848                           	psect	text23
  5849  064E                     __ptext23:	
  5850 ;; *************** function _USBStdGetDscHandler *****************
  5851 ;; Defined at:
  5852 ;;		line 2061 in file "../../../../../../framework/usb/src/usb_device.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;		None
  5857 ;; Return value:  Size  Location     Type
  5858 ;;		None               void
  5859 ;; Registers used:
  5860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;Total ram usage:        3 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_USBCheckStdRequest
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           
  5880                           ;psect for function _USBStdGetDscHandler
  5881  064E                     _USBStdGetDscHandler:	
  5882                           
  5883                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
  5884                           
  5885                           ;incstack = 0
  5886                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  5887  064E  3080               	movlw	128
  5888  064F  0020               	movlb	0	; select bank0
  5889  0650  0640               	xorwf	64,w	;volatile
  5890  0651  1D03               	btfss	3,2
  5891  0652  0008               	return
  5892                           
  5893                           ;usb_device.c: 2064: {
  5894                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  5895  0653  30C0               	movlw	192
  5896  0654  00F0               	movwf	??_USBStdGetDscHandler
  5897  0655  0870               	movf	??_USBStdGetDscHandler,w
  5898  0656  0021               	movlb	1	; select bank1
  5899  0657  00B5               	movwf	(_inPipes^(0+128)+2)	;volatile
  5900                           
  5901                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
  5902  0658  2EC0               	goto	i1l3062
  5903  0659                     i1l3036:	
  5904                           ;usb_device.c: 2068: {
  5905                           ;usb_device.c: 2069: case 0x01:
  5906                           
  5907                           
  5908                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  5909  0659  30EC               	movlw	low (_device_dsc| (0+32768))
  5910  065A  0021               	movlb	1	; select bank1
  5911  065B  00B3               	movwf	_inPipes^(0+128)	;volatile
  5912  065C  3081               	movlw	high (_device_dsc| (0+32768))
  5913  065D  00B4               	movwf	(_inPipes^(0+128)+1)	;volatile
  5914                           
  5915                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
  5916  065E  3000               	movlw	0
  5917  065F  00B7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5918  0660  3012               	movlw	18
  5919  0661  00B6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5920                           
  5921                           ;usb_device.c: 2076: break;
  5922  0662  0008               	return
  5923  0663                     i1l3040:	
  5924                           ;usb_device.c: 2077: case 0x02:
  5925                           
  5926                           
  5927                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
  5928  0663  0020               	movlb	0	; select bank0
  5929  0664  0842               	movf	66,w	;volatile
  5930  0665  1D03               	btfss	3,2
  5931  0666  2E96               	goto	i1l3048
  5932                           
  5933                           ;usb_device.c: 2082: {
  5934                           ;usb_device.c: 2084: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  5935  0667  0842               	movf	66,w	;volatile
  5936  0668  00F0               	movwf	??_USBStdGetDscHandler
  5937  0669  01F1               	clrf	??_USBStdGetDscHandler+1
  5938  066A  35F0               	lslf	??_USBStdGetDscHandler,f
  5939  066B  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  5940  066C  3034               	movlw	low (_USB_CD_Ptr| (0+32768))
  5941  066D  0770               	addwf	??_USBStdGetDscHandler,w
  5942  066E  0084               	movwf	4
  5943  066F  3081               	movlw	high (_USB_CD_Ptr| (0+32768))
  5944  0670  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  5945  0671  0085               	movwf	5
  5946  0672  3F00               	moviw [0]fsr0
  5947  0673  0021               	movlb	1	; select bank1
  5948  0674  00B3               	movwf	_inPipes^(0+128)	;volatile
  5949  0675  3F01               	moviw [1]fsr0
  5950  0676  00B4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5951                           
  5952                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  5953  0677  0834               	movf	(_inPipes+1)^(0+128),w	;volatile
  5954  0678  00F1               	movwf	??_USBStdGetDscHandler+1
  5955  0679  0833               	movf	_inPipes^(0+128),w	;volatile
  5956  067A  00F0               	movwf	??_USBStdGetDscHandler
  5957  067B  3002               	movlw	2
  5958  067C  0770               	addwf	??_USBStdGetDscHandler,w
  5959  067D  0084               	movwf	4
  5960  067E  0871               	movf	??_USBStdGetDscHandler+1,w
  5961  067F  1803               	skipnc
  5962  0680  0A71               	incf	??_USBStdGetDscHandler+1,w
  5963  0681  0085               	movwf	5
  5964  0682  0800               	movf	0,w	;code access
  5965  0683  00F2               	movwf	??_USBStdGetDscHandler+2
  5966  0684  0872               	movf	??_USBStdGetDscHandler+2,w
  5967  0685  00B6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5968                           
  5969                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  5970  0686  0834               	movf	(_inPipes+1)^(0+128),w	;volatile
  5971  0687  00F1               	movwf	??_USBStdGetDscHandler+1
  5972  0688  0833               	movf	_inPipes^(0+128),w	;volatile
  5973  0689  00F0               	movwf	??_USBStdGetDscHandler
  5974  068A  3003               	movlw	3
  5975  068B  0770               	addwf	??_USBStdGetDscHandler,w
  5976  068C  0084               	movwf	4
  5977  068D  0871               	movf	??_USBStdGetDscHandler+1,w
  5978  068E  1803               	skipnc
  5979  068F  0A71               	incf	??_USBStdGetDscHandler+1,w
  5980  0690  0085               	movwf	5
  5981  0691  0800               	movf	0,w	;code access
  5982  0692  00F2               	movwf	??_USBStdGetDscHandler+2
  5983  0693  0872               	movf	??_USBStdGetDscHandler+2,w
  5984  0694  00B7               	movwf	(_inPipes^(0+128)+4)	;volatile
  5985                           
  5986                           ;usb_device.c: 2094: }
  5987  0695  0008               	return
  5988  0696                     i1l3048:	
  5989                           
  5990                           ;usb_device.c: 2095: else
  5991                           ;usb_device.c: 2096: {
  5992                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
  5993  0696  0021               	movlb	1	; select bank1
  5994  0697  01B5               	clrf	(_inPipes^(0+128)+2)	;volatile
  5995                           
  5996                           ;usb_device.c: 2098: }
  5997                           ;usb_device.c: 2099: break;
  5998  0698  0008               	return
  5999  0699                     i1l3050:	
  6000                           ;usb_device.c: 2100: case 0x03:
  6001                           
  6002                           
  6003                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
  6004  0699  3003               	movlw	3
  6005  069A  0020               	movlb	0	; select bank0
  6006  069B  0242               	subwf	66,w	;volatile
  6007  069C  1803               	skipnc
  6008  069D  2EBA               	goto	i1l3056
  6009                           
  6010                           ;usb_device.c: 2105: {
  6011                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6012  069E  0842               	movf	66,w	;volatile
  6013  069F  00F0               	movwf	??_USBStdGetDscHandler
  6014  06A0  01F1               	clrf	??_USBStdGetDscHandler+1
  6015  06A1  35F0               	lslf	??_USBStdGetDscHandler,f
  6016  06A2  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6017  06A3  3026               	movlw	low (_USB_SD_Ptr| (0+32768))
  6018  06A4  0770               	addwf	??_USBStdGetDscHandler,w
  6019  06A5  0084               	movwf	4
  6020  06A6  3081               	movlw	high (_USB_SD_Ptr| (0+32768))
  6021  06A7  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6022  06A8  0085               	movwf	5
  6023  06A9  3F00               	moviw [0]fsr0
  6024  06AA  0021               	movlb	1	; select bank1
  6025  06AB  00B3               	movwf	_inPipes^(0+128)	;volatile
  6026  06AC  3F01               	moviw [1]fsr0
  6027  06AD  00B4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6028                           
  6029                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6030  06AE  0833               	movf	_inPipes^(0+128),w	;volatile
  6031  06AF  0084               	movwf	4
  6032  06B0  0834               	movf	(_inPipes+1)^(0+128),w	;volatile
  6033  06B1  0085               	movwf	5
  6034  06B2  0800               	movf	0,w	;code access
  6035  06B3  00F0               	movwf	??_USBStdGetDscHandler
  6036  06B4  01F1               	clrf	??_USBStdGetDscHandler+1
  6037  06B5  0870               	movf	??_USBStdGetDscHandler,w
  6038  06B6  00B6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6039  06B7  0871               	movf	??_USBStdGetDscHandler+1,w
  6040  06B8  00B7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6041                           
  6042                           ;usb_device.c: 2110: }
  6043  06B9  0008               	return
  6044  06BA                     i1l3056:	
  6045                           
  6046                           ;usb_device.c: 2120: else
  6047                           ;usb_device.c: 2121: {
  6048                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
  6049  06BA  0021               	movlb	1	; select bank1
  6050  06BB  01B5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6051                           
  6052                           ;usb_device.c: 2123: }
  6053                           ;usb_device.c: 2124: break;
  6054  06BC  0008               	return
  6055  06BD                     i1l3058:	
  6056                           ;usb_device.c: 2125: default:
  6057                           
  6058                           
  6059                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
  6060  06BD  0021               	movlb	1	; select bank1
  6061  06BE  01B5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6062                           
  6063                           ;usb_device.c: 2128: }
  6064                           
  6065                           ;usb_device.c: 2127: break;
  6066  06BF  0008               	return
  6067  06C0                     i1l3062:	
  6068  06C0  0020               	movlb	0	; select bank0
  6069  06C1  0843               	movf	67,w	;volatile
  6070                           
  6071                           ; Switch size 1, requested type "space"
  6072                           ; Number of cases is 3, Range of values is 1 to 3
  6073                           ; switch strategies available:
  6074                           ; Name         Instructions Cycles
  6075                           ; simple_byte           10     6 (average)
  6076                           ; direct_byte           15     9 (fixed)
  6077                           ; jumptable            263     9 (fixed)
  6078                           ;	Chosen strategy is simple_byte
  6079  06C2  3A01               	xorlw	1	; case 1
  6080  06C3  1903               	skipnz
  6081  06C4  2E59               	goto	i1l3036
  6082  06C5  3A03               	xorlw	3	; case 2
  6083  06C6  1903               	skipnz
  6084  06C7  2E63               	goto	i1l3040
  6085  06C8  3A01               	xorlw	1	; case 3
  6086  06C9  1903               	skipnz
  6087  06CA  2E99               	goto	i1l3050
  6088  06CB  2EBD               	goto	i1l3058
  6089  06CC  0008               	return
  6090  06CD                     __end_of_USBStdGetDscHandler:	
  6091                           
  6092                           	psect	text24
  6093  0025                     __ptext24:	
  6094 ;; *************** function _USBStdFeatureReqHandler *****************
  6095 ;; Defined at:
  6096 ;;		line 2771 in file "../../../../../../framework/usb/src/usb_device.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;		None
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  pUEP            2    7[BANK0 ] PTR unsigned char 
  6101 ;;		 -> UEP0(1), 
  6102 ;;  p               1   10[BANK0 ] PTR struct __BDT
  6103 ;;		 -> BDT(32), NULL(0), 
  6104 ;;  current_ep_d    1    9[BANK0 ] struct .
  6105 ;; Return value:  Size  Location     Type
  6106 ;;		None               void
  6107 ;; Registers used:
  6108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;Total ram usage:        6 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    4
  6121 ;; This function calls:
  6122 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6123 ;; This function is called by:
  6124 ;;		_USBCheckStdRequest
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           
  6129                           ;psect for function _USBStdFeatureReqHandler
  6130  0025                     _USBStdFeatureReqHandler:	
  6131                           
  6132                           ;usb_device.c: 2773: BDT_ENTRY *p;
  6133                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
  6134                           ;usb_device.c: 2778: unsigned char* pUEP;
  6135                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
  6136                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
  6137                           
  6138                           ;incstack = 0
  6139                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6140  0025  0020               	movlb	0	; select bank0
  6141  0026  0342               	decf	66,w	;volatile
  6142  0027  1D03               	btfss	3,2
  6143  0028  283D               	goto	i1l3104
  6144  0029  0840               	movf	64,w	;volatile
  6145  002A  391F               	andlw	31
  6146  002B  3A00               	xorlw	0
  6147  002C  1D03               	skipz
  6148  002D  283D               	goto	i1l3104
  6149                           
  6150                           ;usb_device.c: 2818: {
  6151                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
  6152  002E  0021               	movlb	1	; select bank1
  6153  002F  17B5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6154                           
  6155                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
  6156  0030  3003               	movlw	3
  6157  0031  0020               	movlb	0	; select bank0
  6158  0032  0641               	xorwf	65,w	;volatile
  6159  0033  1D03               	btfss	3,2
  6160  0034  283B               	goto	i1l3102
  6161                           
  6162                           ;usb_device.c: 2821: RemoteWakeup = 1;
  6163  0035  3001               	movlw	1
  6164  0036  00D5               	movwf	??_USBStdFeatureReqHandler
  6165  0037  0855               	movf	??_USBStdFeatureReqHandler,w
  6166  0038  0021               	movlb	1	; select bank1
  6167  0039  00C5               	movwf	_RemoteWakeup^(0+128)	;volatile
  6168  003A  283D               	goto	i1l3104
  6169  003B                     i1l3102:	
  6170                           
  6171                           ;usb_device.c: 2822: else
  6172                           ;usb_device.c: 2823: RemoteWakeup = 0;
  6173  003B  0021               	movlb	1	; select bank1
  6174  003C  01C5               	clrf	_RemoteWakeup^(0+128)	;volatile
  6175  003D                     i1l3104:	
  6176                           
  6177                           ;usb_device.c: 2824: }
  6178                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
  6179                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
  6180                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  6181                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
  6182  003D  0020               	movlb	0	; select bank0
  6183  003E  0842               	movf	66,w	;volatile
  6184  003F  1D03               	btfss	3,2
  6185  0040  0008               	return
  6186  0041  0840               	movf	64,w	;volatile
  6187  0042  391F               	andlw	31
  6188  0043  3A02               	xorlw	2
  6189  0044  1D03               	skipz
  6190  0045  0008               	return
  6191  0046  0844               	movf	68,w	;volatile
  6192  0047  390F               	andlw	15
  6193  0048  3A00               	xorlw	0
  6194  0049  1903               	skipnz
  6195  004A  0008               	return
  6196  004B  0844               	movf	68,w	;volatile
  6197  004C  390F               	andlw	15
  6198  004D  00D5               	movwf	??_USBStdFeatureReqHandler
  6199  004E  3002               	movlw	2
  6200  004F  0255               	subwf	??_USBStdFeatureReqHandler,w
  6201  0050  1803               	skipnc
  6202  0051  0008               	return
  6203  0052  3020               	movlw	32
  6204  0053  0021               	movlb	1	; select bank1
  6205  0054  0649               	xorwf	_USBDeviceState^(0+128),w	;volatile
  6206  0055  1D03               	btfss	3,2
  6207  0056  0008               	return
  6208                           
  6209                           ;usb_device.c: 2831: {
  6210                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
  6211  0057  17B5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6212                           
  6213                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
  6214  0058  0020               	movlb	0	; select bank0
  6215  0059  1BC4               	btfsc	68,7	;volatile
  6216  005A  2868               	goto	i1l3118
  6217                           
  6218                           ;usb_device.c: 2838: {
  6219                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6220  005B  0844               	movf	68,w	;volatile
  6221  005C  390F               	andlw	15
  6222  005D  3EC2               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  6223  005E  0086               	movwf	6
  6224  005F  0187               	clrf	7
  6225  0060  0801               	movf	1,w
  6226  0061  00D5               	movwf	??_USBStdFeatureReqHandler
  6227  0062  0855               	movf	??_USBStdFeatureReqHandler,w
  6228  0063  00DA               	movwf	USBStdFeatureReqHandler@p
  6229                           
  6230                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6231  0064  0844               	movf	68,w	;volatile
  6232  0065  390F               	andlw	15
  6233  0066  3EBE               	addlw	(low (_ep_data_out| 0))& (0+255)
  6234  0067  2874               	goto	L3
  6235  0068                     i1l3118:	
  6236                           ;usb_device.c: 2841: }
  6237                           
  6238                           
  6239                           ;usb_device.c: 2842: else
  6240                           ;usb_device.c: 2843: {
  6241                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6242  0068  0844               	movf	68,w	;volatile
  6243  0069  390F               	andlw	15
  6244  006A  3EC0               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6245  006B  0086               	movwf	6
  6246  006C  0187               	clrf	7
  6247  006D  0801               	movf	1,w
  6248  006E  00D5               	movwf	??_USBStdFeatureReqHandler
  6249  006F  0855               	movf	??_USBStdFeatureReqHandler,w
  6250  0070  00DA               	movwf	USBStdFeatureReqHandler@p
  6251                           
  6252                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6253  0071  0844               	movf	68,w	;volatile
  6254  0072  390F               	andlw	15
  6255  0073  3EBC               	addlw	(low (_ep_data_in| 0))& (0+255)
  6256  0074                     L3:	
  6257  0074  0086               	movwf	6
  6258  0075  0187               	clrf	7
  6259  0076  0801               	movf	1,w
  6260  0077  00D5               	movwf	??_USBStdFeatureReqHandler
  6261  0078  0855               	movf	??_USBStdFeatureReqHandler,w
  6262  0079  00D9               	movwf	USBStdFeatureReqHandler@current_ep_data
  6263                           
  6264                           ;usb_device.c: 2846: }
  6265                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
  6266  007A  1859               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  6267  007B  2881               	goto	i1l634
  6268                           
  6269                           ;usb_device.c: 2853: {
  6270                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  6271  007C  30FB               	movlw	251
  6272  007D  00D5               	movwf	??_USBStdFeatureReqHandler
  6273  007E  0855               	movf	??_USBStdFeatureReqHandler,w
  6274  007F  05DA               	andwf	USBStdFeatureReqHandler@p,f
  6275                           
  6276                           ;usb_device.c: 2855: }
  6277  0080  2882               	goto	i1l635
  6278  0081                     i1l634:	
  6279                           
  6280                           ;usb_device.c: 2856: else
  6281                           ;usb_device.c: 2857: {
  6282                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  6283  0081  155A               	bsf	USBStdFeatureReqHandler@p,2
  6284  0082                     i1l635:	
  6285                           
  6286                           ;usb_device.c: 2859: }
  6287                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
  6288  0082  1BC4               	btfsc	68,7	;volatile
  6289  0083  288A               	goto	i1l3126
  6290                           
  6291                           ;usb_device.c: 2865: {
  6292                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6293  0084  085A               	movf	USBStdFeatureReqHandler@p,w
  6294  0085  00D5               	movwf	??_USBStdFeatureReqHandler
  6295  0086  0844               	movf	68,w	;volatile
  6296  0087  390F               	andlw	15
  6297  0088  3EC2               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  6298  0089  288F               	goto	L4
  6299  008A                     i1l3126:	
  6300                           ;usb_device.c: 2867: }
  6301                           
  6302                           
  6303                           ;usb_device.c: 2868: else
  6304                           ;usb_device.c: 2869: {
  6305                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6306  008A  085A               	movf	USBStdFeatureReqHandler@p,w
  6307  008B  00D5               	movwf	??_USBStdFeatureReqHandler
  6308  008C  0844               	movf	68,w	;volatile
  6309  008D  390F               	andlw	15
  6310  008E  3EC0               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6311  008F                     L4:	
  6312  008F  0086               	movwf	6
  6313  0090  0187               	clrf	7
  6314  0091  0855               	movf	??_USBStdFeatureReqHandler,w
  6315  0092  0081               	movwf	1
  6316                           
  6317                           ;usb_device.c: 2871: }
  6318                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
  6319  0093  3003               	movlw	3
  6320  0094  0641               	xorwf	65,w	;volatile
  6321  0095  1D03               	btfss	3,2
  6322  0096  28B1               	goto	i1l3142
  6323                           
  6324                           ;usb_device.c: 2875: {
  6325                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
  6326  0097  085A               	movf	USBStdFeatureReqHandler@p,w
  6327  0098  0086               	movwf	6
  6328  0099  0187               	clrf	7
  6329  009A  1F81               	btfss	1,7
  6330  009B  28A8               	goto	i1l3138
  6331                           
  6332                           ;usb_device.c: 2877: {
  6333                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
  6334  009C  1BC4               	btfsc	68,7	;volatile
  6335  009D  28A2               	goto	i1l3136
  6336                           
  6337                           ;usb_device.c: 2881: {
  6338                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6339  009E  0844               	movf	68,w	;volatile
  6340  009F  390F               	andlw	15
  6341  00A0  3EBE               	addlw	(low (_ep_data_out| 0))& (0+255)
  6342  00A1  28A5               	goto	L5
  6343  00A2                     i1l3136:	
  6344                           ;usb_device.c: 2883: }
  6345                           
  6346                           
  6347                           ;usb_device.c: 2884: else
  6348                           ;usb_device.c: 2885: {
  6349                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6350  00A2  0844               	movf	68,w	;volatile
  6351  00A3  390F               	andlw	15
  6352  00A4  3EBC               	addlw	(low (_ep_data_in| 0))& (0+255)
  6353  00A5                     L5:	
  6354  00A5  0086               	movwf	6
  6355  00A6  0187               	clrf	7
  6356  00A7  1481               	bsf	1,1
  6357  00A8                     i1l3138:	
  6358                           
  6359                           ;usb_device.c: 2887: }
  6360                           ;usb_device.c: 2888: }
  6361                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
  6362  00A8  085A               	movf	USBStdFeatureReqHandler@p,w
  6363  00A9  0086               	movwf	6
  6364  00AA  0187               	clrf	7
  6365  00AB  1501               	bsf	1,2
  6366                           
  6367                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
  6368  00AC  085A               	movf	USBStdFeatureReqHandler@p,w
  6369  00AD  0086               	movwf	6
  6370  00AE  0187               	clrf	7
  6371  00AF  1781               	bsf	1,7
  6372                           
  6373                           ;usb_device.c: 2893: }
  6374  00B0  0008               	return
  6375  00B1                     i1l3142:	
  6376                           
  6377                           ;usb_device.c: 2894: else
  6378                           ;usb_device.c: 2895: {
  6379                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6380  00B1  3004               	movlw	4
  6381  00B2  00D5               	movwf	??_USBStdFeatureReqHandler
  6382  00B3  0855               	movf	??_USBStdFeatureReqHandler,w
  6383  00B4  06DA               	xorwf	USBStdFeatureReqHandler@p,f
  6384                           
  6385                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
  6386  00B5  085A               	movf	USBStdFeatureReqHandler@p,w
  6387  00B6  0086               	movwf	6
  6388  00B7  0187               	clrf	7
  6389  00B8  1F81               	btfss	1,7
  6390  00B9  28D5               	goto	i1l3152
  6391                           
  6392                           ;usb_device.c: 2902: {
  6393                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
  6394  00BA  307F               	movlw	127
  6395  00BB  00D5               	movwf	??_USBStdFeatureReqHandler
  6396  00BC  085A               	movf	USBStdFeatureReqHandler@p,w
  6397  00BD  0086               	movwf	6
  6398  00BE  0187               	clrf	7
  6399  00BF  0855               	movf	??_USBStdFeatureReqHandler,w
  6400  00C0  0581               	andwf	1,f
  6401                           
  6402                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
  6403  00C1  085A               	movf	USBStdFeatureReqHandler@p,w
  6404  00C2  0086               	movwf	6
  6405  00C3  0187               	clrf	7
  6406  00C4  1701               	bsf	1,6
  6407                           
  6408                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6409  00C5  3000               	movlw	0
  6410  00C6  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6411  00C7  3005               	movlw	5
  6412  00C8  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6413  00C9  085A               	movf	USBStdFeatureReqHandler@p,w
  6414  00CA  00D5               	movwf	??_USBStdFeatureReqHandler
  6415  00CB  0855               	movf	??_USBStdFeatureReqHandler,w
  6416  00CC  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6417  00CD  3001               	movlw	1
  6418  00CE  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6419  00CF  3000               	movlw	0
  6420  00D0  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6421  00D1  318D  2521  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6422                           
  6423                           ;usb_device.c: 2908: }
  6424  00D4  28DA               	goto	i1l3154
  6425  00D5                     i1l3152:	
  6426                           
  6427                           ;usb_device.c: 2909: else
  6428                           ;usb_device.c: 2910: {
  6429                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
  6430  00D5  0020               	movlb	0	; select bank0
  6431  00D6  085A               	movf	USBStdFeatureReqHandler@p,w
  6432  00D7  0086               	movwf	6
  6433  00D8  0187               	clrf	7
  6434  00D9  1701               	bsf	1,6
  6435  00DA                     i1l3154:	
  6436                           
  6437                           ;usb_device.c: 2913: }
  6438                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6439  00DA  3004               	movlw	4
  6440  00DB  0020               	movlb	0	; select bank0
  6441  00DC  00D5               	movwf	??_USBStdFeatureReqHandler
  6442  00DD  0855               	movf	??_USBStdFeatureReqHandler,w
  6443  00DE  06DA               	xorwf	USBStdFeatureReqHandler@p,f
  6444                           
  6445                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6446  00DF  18D9               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  6447  00E0  28E6               	goto	i1l647
  6448  00E1  085A               	movf	USBStdFeatureReqHandler@p,w
  6449  00E2  0086               	movwf	6
  6450  00E3  0187               	clrf	7
  6451  00E4  1F81               	btfss	1,7
  6452  00E5  2909               	goto	i1l3166
  6453  00E6                     i1l647:	
  6454                           
  6455                           ;usb_device.c: 2924: {
  6456                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
  6457  00E6  1BC4               	btfsc	68,7	;volatile
  6458  00E7  28EC               	goto	i1l3162
  6459                           
  6460                           ;usb_device.c: 2926: {
  6461                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6462  00E8  0844               	movf	68,w	;volatile
  6463  00E9  390F               	andlw	15
  6464  00EA  3EBE               	addlw	(low (_ep_data_out| 0))& (0+255)
  6465  00EB  28EF               	goto	L6
  6466  00EC                     i1l3162:	
  6467                           ;usb_device.c: 2928: }
  6468                           
  6469                           
  6470                           ;usb_device.c: 2929: else
  6471                           ;usb_device.c: 2930: {
  6472                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6473  00EC  0844               	movf	68,w	;volatile
  6474  00ED  390F               	andlw	15
  6475  00EE  3EBC               	addlw	(low (_ep_data_in| 0))& (0+255)
  6476  00EF                     L6:	
  6477  00EF  0086               	movwf	6
  6478  00F0  0187               	clrf	7
  6479  00F1  1081               	bcf	1,1
  6480                           
  6481                           ;usb_device.c: 2932: }
  6482                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6483  00F2  303B               	movlw	59
  6484  00F3  00D5               	movwf	??_USBStdFeatureReqHandler
  6485  00F4  085A               	movf	USBStdFeatureReqHandler@p,w
  6486  00F5  0086               	movwf	6
  6487  00F6  0187               	clrf	7
  6488  00F7  0855               	movf	??_USBStdFeatureReqHandler,w
  6489  00F8  0581               	andwf	1,f
  6490                           
  6491                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6492  00F9  3000               	movlw	0
  6493  00FA  00D1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6494  00FB  3005               	movlw	5
  6495  00FC  00D0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6496  00FD  085A               	movf	USBStdFeatureReqHandler@p,w
  6497  00FE  00D5               	movwf	??_USBStdFeatureReqHandler
  6498  00FF  0855               	movf	??_USBStdFeatureReqHandler,w
  6499  0100  00D2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6500  0101  3001               	movlw	1
  6501  0102  00D3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6502  0103  3000               	movlw	0
  6503  0104  00D4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6504  0105  318D  2521  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6505                           
  6506                           ;usb_device.c: 2938: }
  6507  0108  2911               	goto	i1l3168
  6508  0109                     i1l3166:	
  6509                           
  6510                           ;usb_device.c: 2939: else
  6511                           ;usb_device.c: 2940: {
  6512                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6513  0109  303B               	movlw	59
  6514  010A  0020               	movlb	0	; select bank0
  6515  010B  00D5               	movwf	??_USBStdFeatureReqHandler
  6516  010C  085A               	movf	USBStdFeatureReqHandler@p,w
  6517  010D  0086               	movwf	6
  6518  010E  0187               	clrf	7
  6519  010F  0855               	movf	??_USBStdFeatureReqHandler,w
  6520  0110  0581               	andwf	1,f
  6521  0111                     i1l3168:	
  6522                           
  6523                           ;usb_device.c: 2943: }
  6524                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6525  0111  0020               	movlb	0	; select bank0
  6526  0112  0844               	movf	68,w	;volatile
  6527  0113  390F               	andlw	15
  6528  0114  3E98               	addlw	152
  6529  0115  00D5               	movwf	??_USBStdFeatureReqHandler
  6530  0116  01D6               	clrf	??_USBStdFeatureReqHandler+1
  6531  0117  300E               	movlw	14
  6532  0118  3DD6               	addwfc	??_USBStdFeatureReqHandler+1,f
  6533  0119  0855               	movf	??_USBStdFeatureReqHandler,w
  6534  011A  00D7               	movwf	USBStdFeatureReqHandler@pUEP
  6535  011B  0856               	movf	??_USBStdFeatureReqHandler+1,w
  6536  011C  00D8               	movwf	USBStdFeatureReqHandler@pUEP+1
  6537                           
  6538                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
  6539  011D  30FE               	movlw	254
  6540  011E  00D5               	movwf	??_USBStdFeatureReqHandler
  6541  011F  0857               	movf	USBStdFeatureReqHandler@pUEP,w
  6542  0120  0086               	movwf	6
  6543  0121  0858               	movf	USBStdFeatureReqHandler@pUEP+1,w
  6544  0122  0087               	movwf	7
  6545  0123  0855               	movf	??_USBStdFeatureReqHandler,w
  6546  0124  0581               	andwf	1,f
  6547  0125  0008               	return
  6548  0126                     __end_of_USBStdFeatureReqHandler:	
  6549                           
  6550                           	psect	text25
  6551  0D21                     __ptext25:	
  6552 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  6553 ;; Defined at:
  6554 ;;		line 123 in file "../src/main.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  event           2    0[BANK0 ] enum E2881
  6557 ;;  pdata           1    2[BANK0 ] PTR void 
  6558 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  6559 ;;  size            2    3[BANK0 ] unsigned int 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      unsigned char 
  6564 ;; Registers used:
  6565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6571 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;Total ram usage:        5 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    3
  6578 ;; This function calls:
  6579 ;;		_APP_DeviceMouseInitialize
  6580 ;;		_APP_DeviceMouseSOFHandler
  6581 ;;		_APP_LEDUpdateUSBStatus
  6582 ;;		_USBCheckHIDRequest
  6583 ;;		i1_SYSTEM_Initialize
  6584 ;; This function is called by:
  6585 ;;		_USBDeviceTasks
  6586 ;;		_USBStdSetCfgHandler
  6587 ;;		_USBSuspend
  6588 ;;		_USBWakeFromSuspend
  6589 ;;		_USBCtrlTrfSetupHandler
  6590 ;;		_USBCheckStdRequest
  6591 ;;		_USBStdFeatureReqHandler
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           
  6596                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  6597  0D21                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  6598                           
  6599                           ;main.c: 125: switch( (int) event )
  6600                           
  6601                           ;incstack = 0
  6602                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6603  0D21  2D3C               	goto	i1l2862
  6604  0D22                     i1l2848:	
  6605                           ;main.c: 130: case EVENT_SOF:
  6606                           
  6607                           ;main.c: 128: break;
  6608                           
  6609                           ;main.c: 126: {
  6610                           ;main.c: 127: case EVENT_TRANSFER:
  6611                           
  6612                           
  6613                           ;main.c: 133: APP_LEDUpdateUSBStatus();
  6614  0D22  318E  263E  318D   	fcall	_APP_LEDUpdateUSBStatus
  6615                           
  6616                           ;main.c: 134: APP_DeviceMouseSOFHandler();
  6617  0D25  318F  2737         	fcall	_APP_DeviceMouseSOFHandler
  6618                           
  6619                           ;main.c: 135: break;
  6620  0D27  0008               	return
  6621  0D28                     i1l2852:	
  6622                           ;main.c: 137: case EVENT_SUSPEND:
  6623                           
  6624                           
  6625                           ;main.c: 139: APP_LEDUpdateUSBStatus();
  6626  0D28  318E  263E  318D   	fcall	_APP_LEDUpdateUSBStatus
  6627                           
  6628                           ;main.c: 147: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  6629  0D2B  3001               	movlw	1
  6630  0D2C  318B  230C         	fcall	i1_SYSTEM_Initialize
  6631                           
  6632                           ;main.c: 148: break;
  6633  0D2E  0008               	return
  6634  0D2F                     i1l2854:	
  6635                           ;main.c: 150: case EVENT_RESUME:
  6636                           
  6637                           
  6638                           ;main.c: 152: APP_LEDUpdateUSBStatus();
  6639  0D2F  318E  263E  318D   	fcall	_APP_LEDUpdateUSBStatus
  6640                           
  6641                           ;main.c: 158: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  6642  0D32  3002               	movlw	2
  6643  0D33  318B  230C         	fcall	i1_SYSTEM_Initialize
  6644                           
  6645                           ;main.c: 159: break;
  6646  0D35  0008               	return
  6647  0D36                     i1l2856:	
  6648                           ;main.c: 161: case EVENT_CONFIGURED:
  6649                           
  6650                           
  6651                           ;main.c: 164: APP_DeviceMouseInitialize();
  6652  0D36  318A  22D6         	fcall	_APP_DeviceMouseInitialize
  6653                           
  6654                           ;main.c: 168: break;
  6655                           
  6656                           ;main.c: 167: case EVENT_SET_DESCRIPTOR:
  6657                           
  6658                           ;main.c: 165: break;
  6659  0D38  0008               	return
  6660  0D39                     i1l2858:	
  6661                           ;main.c: 170: case EVENT_EP0_REQUEST:
  6662                           
  6663                           
  6664                           ;main.c: 173: USBCheckHIDRequest();
  6665  0D39  3184  24BA         	fcall	_USBCheckHIDRequest
  6666                           
  6667                           ;main.c: 184: }
  6668                           
  6669                           ;main.c: 183: break;
  6670                           
  6671                           ;main.c: 182: default:
  6672                           
  6673                           ;main.c: 180: break;
  6674                           
  6675                           ;main.c: 179: case EVENT_TRANSFER_TERMINATED:
  6676                           
  6677                           ;main.c: 177: break;
  6678                           
  6679                           ;main.c: 176: case EVENT_BUS_ERROR:
  6680                           
  6681                           ;main.c: 174: break;
  6682  0D3B  0008               	return
  6683  0D3C                     i1l2862:	
  6684                           
  6685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6686                           ; Switch size 1, requested type "space"
  6687                           ; Number of cases is 2, Range of values is 0 to 127
  6688                           ; switch strategies available:
  6689                           ; Name         Instructions Cycles
  6690                           ; simple_byte            7     4 (average)
  6691                           ; direct_byte          262     6 (fixed)
  6692                           ; jumptable            260     6 (fixed)
  6693                           ;	Chosen strategy is simple_byte
  6694  0D3C  0020               	movlb	0	; select bank0
  6695  0D3D  0851               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  6696  0D3E  3A00               	xorlw	0	; case 0
  6697  0D3F  1903               	skipnz
  6698  0D40  2D45               	goto	i1l3996
  6699  0D41  3A7F               	xorlw	127	; case 127
  6700  0D42  1903               	skipnz
  6701  0D43  2D5F               	goto	i1l3998
  6702  0D44  2D64               	goto	i1l104
  6703  0D45                     i1l3996:	
  6704                           
  6705                           ; Switch size 1, requested type "space"
  6706                           ; Number of cases is 8, Range of values is 1 to 117
  6707                           ; switch strategies available:
  6708                           ; Name         Instructions Cycles
  6709                           ; simple_byte           25    13 (average)
  6710                           ; direct_byte          243     9 (fixed)
  6711                           ; jumptable            263     9 (fixed)
  6712                           ;	Chosen strategy is simple_byte
  6713  0D45  0850               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6714  0D46  3A01               	xorlw	1	; case 1
  6715  0D47  1903               	skipnz
  6716  0D48  2D36               	goto	i1l2856
  6717  0D49  3A03               	xorlw	3	; case 2
  6718  0D4A  1903               	skipnz
  6719  0D4B  2D64               	goto	i1l104
  6720  0D4C  3A01               	xorlw	1	; case 3
  6721  0D4D  1903               	skipnz
  6722  0D4E  2D39               	goto	i1l2858
  6723  0D4F  3A06               	xorlw	6	; case 5
  6724  0D50  1903               	skipnz
  6725  0D51  2D64               	goto	i1l104
  6726  0D52  3A77               	xorlw	119	; case 114
  6727  0D53  1903               	skipnz
  6728  0D54  2D64               	goto	i1l104
  6729  0D55  3A01               	xorlw	1	; case 115
  6730  0D56  1903               	skipnz
  6731  0D57  2D22               	goto	i1l2848
  6732  0D58  3A07               	xorlw	7	; case 116
  6733  0D59  1903               	skipnz
  6734  0D5A  2D2F               	goto	i1l2854
  6735  0D5B  3A01               	xorlw	1	; case 117
  6736  0D5C  1903               	skipnz
  6737  0D5D  2D28               	goto	i1l2852
  6738  0D5E  2D64               	goto	i1l104
  6739  0D5F                     i1l3998:	
  6740                           
  6741                           ; Switch size 1, requested type "space"
  6742                           ; Number of cases is 1, Range of values is 255 to 255
  6743                           ; switch strategies available:
  6744                           ; Name         Instructions Cycles
  6745                           ; simple_byte            4     3 (average)
  6746                           ; direct_byte            7     5 (fixed)
  6747                           ; jumptable            263     9 (fixed)
  6748                           ;	Chosen strategy is simple_byte
  6749  0D5F  0850               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6750  0D60  3AFF               	xorlw	255	; case 255
  6751  0D61  1903               	skipnz
  6752  0D62  2D64               	goto	i1l104
  6753  0D63  2D64               	goto	i1l104
  6754  0D64                     i1l104:	
  6755                           ;main.c: 185: return 1;
  6756                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  6757                           
  6758  0D64  0008               	return
  6759  0D65                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  6760                           
  6761                           	psect	text26
  6762  0B0C                     __ptext26:	
  6763 ;; *************** function i1_SYSTEM_Initialize *****************
  6764 ;; Defined at:
  6765 ;;		line 87 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1459/system.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  state           1    wreg     enum E2864
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  state           1    1[COMMON] enum E2864
  6770 ;; Return value:  Size  Location     Type
  6771 ;;		None               void
  6772 ;; Registers used:
  6773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;Total ram usage:        1 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    1
  6786 ;; This function calls:
  6787 ;;		i1_BUTTON_Enable
  6788 ;;		i1_LED_Enable
  6789 ;; This function is called by:
  6790 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           
  6795                           ;psect for function i1_SYSTEM_Initialize
  6796  0B0C                     i1_SYSTEM_Initialize:	
  6797                           
  6798                           ;incstack = 0
  6799                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6800                           ;i1SYSTEM_Initialize@state stored from wreg
  6801  0B0C  00F1               	movwf	i1SYSTEM_Initialize@state
  6802                           
  6803                           ;system.c: 89: switch(state)
  6804  0B0D  2B16               	goto	i1l2844
  6805  0B0E                     i1l2840:	
  6806                           ;system.c: 90: {
  6807                           ;system.c: 91: case SYSTEM_STATE_USB_START:
  6808                           
  6809                           
  6810                           ;system.c: 98: LED_Enable(LED_D1);
  6811  0B0E  3001               	movlw	1
  6812  0B0F  318B  23C7  318B   	fcall	i1_LED_Enable
  6813                           
  6814                           ;system.c: 99: BUTTON_Enable(BUTTON_S1);
  6815  0B12  3001               	movlw	1
  6816  0B13  318A  22C1         	fcall	i1_BUTTON_Enable
  6817                           
  6818                           ;system.c: 107: }
  6819                           
  6820                           ;system.c: 106: break;
  6821                           
  6822                           ;system.c: 105: case SYSTEM_STATE_USB_RESUME:
  6823                           
  6824                           ;system.c: 103: break;
  6825                           
  6826                           ;system.c: 102: case SYSTEM_STATE_USB_SUSPEND:
  6827                           
  6828                           ;system.c: 100: break;
  6829  0B15  0008               	return
  6830  0B16                     i1l2844:	
  6831  0B16  0871               	movf	i1SYSTEM_Initialize@state,w
  6832                           
  6833                           ; Switch size 1, requested type "space"
  6834                           ; Number of cases is 3, Range of values is 0 to 2
  6835                           ; switch strategies available:
  6836                           ; Name         Instructions Cycles
  6837                           ; simple_byte           10     6 (average)
  6838                           ; direct_byte           12     6 (fixed)
  6839                           ; jumptable            260     6 (fixed)
  6840                           ;	Chosen strategy is simple_byte
  6841  0B17  3A00               	xorlw	0	; case 0
  6842  0B18  1903               	skipnz
  6843  0B19  2B0E               	goto	i1l2840
  6844  0B1A  3A01               	xorlw	1	; case 1
  6845  0B1B  1903               	skipnz
  6846  0B1C  2B21               	goto	i1l14
  6847  0B1D  3A03               	xorlw	3	; case 2
  6848  0B1E  1903               	skipnz
  6849  0B1F  2B21               	goto	i1l14
  6850  0B20  2B21               	goto	i1l14
  6851  0B21                     i1l14:	
  6852  0B21  0008               	return
  6853  0B22                     __end_ofi1_SYSTEM_Initialize:	
  6854                           
  6855                           	psect	text27
  6856  0BC7                     __ptext27:	
  6857 ;; *************** function i1_LED_Enable *****************
  6858 ;; Defined at:
  6859 ;;		line 220 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  led             1    wreg     enum E2
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  led             1    0[COMMON] enum E2
  6864 ;; Return value:  Size  Location     Type
  6865 ;;		None               void
  6866 ;; Registers used:
  6867 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;Total ram usage:        1 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		i1_SYSTEM_Initialize
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           
  6887                           ;psect for function i1_LED_Enable
  6888  0BC7                     i1_LED_Enable:	
  6889                           
  6890                           ;incstack = 0
  6891                           ; Regs used in i1_LED_Enable: [wreg-fsr0h+status,2+status,0]
  6892                           ;i1LED_Enable@led stored from wreg
  6893  0BC7  00F0               	movwf	i1LED_Enable@led
  6894                           
  6895                           ;leds.c: 222: switch(led)
  6896  0BC8  2BD5               	goto	i1l2696
  6897  0BC9                     i1l257:	
  6898                           ;leds.c: 223: {
  6899                           ;leds.c: 224: case LED_D1:
  6900                           
  6901                           
  6902                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
  6903  0BC9  0021               	movlb	1	; select bank1
  6904  0BCA  100E               	bcf	14,0	;volatile
  6905                           
  6906                           ;leds.c: 226: break;
  6907  0BCB  0008               	return
  6908  0BCC                     i1l259:	
  6909                           ;leds.c: 228: case LED_D2:
  6910                           
  6911                           
  6912                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  6913  0BCC  0021               	movlb	1	; select bank1
  6914  0BCD  108E               	bcf	14,1	;volatile
  6915                           
  6916                           ;leds.c: 230: break;
  6917  0BCE  0008               	return
  6918  0BCF                     i1l260:	
  6919                           ;leds.c: 232: case LED_D3:
  6920                           
  6921                           
  6922                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  6923  0BCF  0021               	movlb	1	; select bank1
  6924  0BD0  110E               	bcf	14,2	;volatile
  6925                           
  6926                           ;leds.c: 234: break;
  6927  0BD1  0008               	return
  6928  0BD2                     i1l261:	
  6929                           ;leds.c: 236: case LED_D4:
  6930                           
  6931                           
  6932                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  6933  0BD2  0021               	movlb	1	; select bank1
  6934  0BD3  118E               	bcf	14,3	;volatile
  6935                           
  6936                           ;leds.c: 242: }
  6937                           
  6938                           ;leds.c: 241: break;
  6939                           
  6940                           ;leds.c: 240: case LED_NONE:
  6941                           
  6942                           ;leds.c: 238: break;
  6943  0BD4  0008               	return
  6944  0BD5                     i1l2696:	
  6945  0BD5  0870               	movf	i1LED_Enable@led,w
  6946                           
  6947                           ; Switch size 1, requested type "space"
  6948                           ; Number of cases is 5, Range of values is 0 to 4
  6949                           ; switch strategies available:
  6950                           ; Name         Instructions Cycles
  6951                           ; direct_byte           16     6 (fixed)
  6952                           ; simple_byte           16     9 (average)
  6953                           ; jumptable            260     6 (fixed)
  6954                           ;	Chosen strategy is direct_byte
  6955  0BD6  0084               	movwf	4
  6956  0BD7  3005               	movlw	5
  6957  0BD8  0204               	subwf	4,w
  6958  0BD9  1803               	skipnc
  6959  0BDA  0008               	return
  6960  0BDB  3188               	movlp	high i1S4000
  6961  0BDC  3504               	lslf	4,w
  6962  0BDD  3E24               	addlw	low i1S4000
  6963  0BDE  0082               	movwf	2
  6964  0BDF                     i1l263:	
  6965  0BDF  0008               	return
  6966  0BE0                     __end_ofi1_LED_Enable:	
  6967                           
  6968                           	psect	swtext3
  6969  0824                     __pswtext3:	
  6970  0824                     i1S4000:	
  6971  0824  318B  2BDF         	ljmp	i1l263
  6972  0826  318B  2BC9         	ljmp	i1l257
  6973  0828  318B  2BCC         	ljmp	i1l259
  6974  082A  318B  2BCF         	ljmp	i1l260
  6975  082C  318B  2BD2         	ljmp	i1l261
  6976                           
  6977                           	psect	text28
  6978  0AC1                     __ptext28:	
  6979 ;; *************** function i1_BUTTON_Enable *****************
  6980 ;; Defined at:
  6981 ;;		line 85 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/buttons.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  button          1    wreg     enum E2613
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  button          1    0[COMMON] enum E2613
  6986 ;; Return value:  Size  Location     Type
  6987 ;;		None               void
  6988 ;; Registers used:
  6989 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;Total ram usage:        1 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		i1_SYSTEM_Initialize
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           
  7009                           ;psect for function i1_BUTTON_Enable
  7010  0AC1                     i1_BUTTON_Enable:	
  7011                           
  7012                           ;incstack = 0
  7013                           ; Regs used in i1_BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  7014                           ;i1BUTTON_Enable@button stored from wreg
  7015  0AC1  00F0               	movwf	i1BUTTON_Enable@button
  7016                           
  7017                           ;buttons.c: 94: }
  7018                           
  7019                           ;buttons.c: 93: break;
  7020                           
  7021                           ;buttons.c: 92: case BUTTON_NONE:
  7022                           
  7023                           ;buttons.c: 90: break;
  7024                           
  7025                           ;buttons.c: 88: {
  7026                           ;buttons.c: 89: case BUTTON_S1:
  7027                           
  7028                           ;buttons.c: 87: switch(button)
  7029  0AC2  0870               	movf	i1BUTTON_Enable@button,w
  7030                           
  7031                           ; Switch size 1, requested type "space"
  7032                           ; Number of cases is 2, Range of values is 0 to 1
  7033                           ; switch strategies available:
  7034                           ; Name         Instructions Cycles
  7035                           ; simple_byte            7     4 (average)
  7036                           ; direct_byte           10     6 (fixed)
  7037                           ; jumptable            260     6 (fixed)
  7038                           ;	Chosen strategy is simple_byte
  7039  0AC3  3A00               	xorlw	0	; case 0
  7040  0AC4  1903               	skipnz
  7041  0AC5  2ACA               	goto	i1l209
  7042  0AC6  3A01               	xorlw	1	; case 1
  7043  0AC7  1903               	skipnz
  7044  0AC8  2ACA               	goto	i1l209
  7045  0AC9  2ACA               	goto	i1l209
  7046  0ACA                     i1l209:	
  7047  0ACA  0008               	return
  7048  0ACB                     __end_ofi1_BUTTON_Enable:	
  7049                           
  7050                           	psect	text29
  7051  04BA                     __ptext29:	
  7052 ;; *************** function _USBCheckHIDRequest *****************
  7053 ;; Defined at:
  7054 ;;		line 153 in file "../../../../../../framework/usb/src/usb_device_hid.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;		None
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;		None
  7059 ;; Return value:  Size  Location     Type
  7060 ;;		None               void
  7061 ;; Registers used:
  7062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;Total ram usage:        1 bytes
  7073 ;; Hardware stack levels used:    1
  7074 ;; Hardware stack levels required when called:    2
  7075 ;; This function calls:
  7076 ;;		_APP_DeviceMouseIdleRateCallback
  7077 ;; This function is called by:
  7078 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function _USBCheckHIDRequest
  7084  04BA                     _USBCheckHIDRequest:	
  7085                           
  7086                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
  7087                           
  7088                           ;incstack = 0
  7089                           ; Regs used in _USBCheckHIDRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7090  04BA  0020               	movlb	0	; select bank0
  7091  04BB  0840               	movf	64,w	;volatile
  7092  04BC  391F               	andlw	31
  7093  04BD  3A01               	xorlw	1
  7094  04BE  1D03               	btfss	3,2
  7095  04BF  0008               	return
  7096                           
  7097                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
  7098  04C0  0844               	movf	68,w	;volatile
  7099  04C1  1D03               	btfss	3,2
  7100  04C2  0008               	return
  7101                           
  7102                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
  7103  04C3  3006               	movlw	6
  7104  04C4  0641               	xorwf	65,w	;volatile
  7105  04C5  1903               	btfsc	3,2
  7106  04C6  2CE2               	goto	i1l2810
  7107  04C7  2CEE               	goto	i1l2812
  7108  04C8                     i1l2798:	
  7109                           ;usb_device_hid.c: 166: {
  7110                           ;usb_device_hid.c: 167: case 0x21:
  7111                           
  7112                           ;usb_device_hid.c: 164: {
  7113                           ;usb_device_hid.c: 165: switch(SetupPkt.bDescriptorType)
  7114                           
  7115                           
  7116                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
  7117  04C8  036D               	decf	_USBActiveConfiguration,w	;volatile
  7118  04C9  1D03               	btfss	3,2
  7119  04CA  2CEE               	goto	i1l2812
  7120                           
  7121                           ;usb_device_hid.c: 169: {
  7122                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
  7123  04CB  30DC               	movlw	low ((_configDescriptor1| (0+32768)+18))
  7124  04CC  0021               	movlb	1	; select bank1
  7125  04CD  00B3               	movwf	_inPipes^(0+128)	;volatile
  7126  04CE  3081               	movlw	high ((_configDescriptor1| (0+32768)+18))
  7127  04CF  00B4               	movwf	(_inPipes^(0+128)+1)	;volatile
  7128  04D0  3000               	movlw	0
  7129  04D1  00B7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7130  04D2  3009               	movlw	9
  7131  04D3  2CDC               	goto	L7
  7132  04D4                     i1l2804:	
  7133                           ;usb_device_hid.c: 176: case 0x22:
  7134                           
  7135                           ;usb_device_hid.c: 174: }
  7136                           ;usb_device_hid.c: 175: break;
  7137                           
  7138                           
  7139                           ;usb_device_hid.c: 178: {
  7140                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 50; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
  7141  04D4  306A               	movlw	low (_hid_rpt01| (0+32768))
  7142  04D5  0021               	movlb	1	; select bank1
  7143  04D6  00B3               	movwf	_inPipes^(0+128)	;volatile
  7144  04D7  3081               	movlw	high (_hid_rpt01| (0+32768))
  7145  04D8  00B4               	movwf	(_inPipes^(0+128)+1)	;volatile
  7146  04D9  3000               	movlw	0
  7147  04DA  00B7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7148  04DB  3032               	movlw	50
  7149  04DC                     L7:	
  7150  04DC  00B6               	movwf	(_inPipes^(0+128)+3)	;volatile
  7151  04DD  30C0               	movlw	192
  7152  04DE  00F9               	movwf	??_USBCheckHIDRequest
  7153  04DF  0879               	movf	??_USBCheckHIDRequest,w
  7154  04E0  00B5               	movwf	(_inPipes^(0+128)+2)	;volatile
  7155                           
  7156                           ;usb_device_hid.c: 198: }
  7157                           
  7158                           ;usb_device_hid.c: 197: break;
  7159                           
  7160                           ;usb_device_hid.c: 185: case 0x23:
  7161                           
  7162                           ;usb_device_hid.c: 183: }
  7163                           ;usb_device_hid.c: 184: break;
  7164  04E1  2CEE               	goto	i1l2812
  7165  04E2                     i1l2810:	
  7166  04E2  0020               	movlb	0	; select bank0
  7167  04E3  0843               	movf	67,w	;volatile
  7168                           
  7169                           ; Switch size 1, requested type "space"
  7170                           ; Number of cases is 3, Range of values is 33 to 35
  7171                           ; switch strategies available:
  7172                           ; Name         Instructions Cycles
  7173                           ; simple_byte           10     6 (average)
  7174                           ; direct_byte           15     9 (fixed)
  7175                           ; jumptable            263     9 (fixed)
  7176                           ;	Chosen strategy is simple_byte
  7177  04E4  3A21               	xorlw	33	; case 33
  7178  04E5  1903               	skipnz
  7179  04E6  2CC8               	goto	i1l2798
  7180  04E7  3A03               	xorlw	3	; case 34
  7181  04E8  1903               	skipnz
  7182  04E9  2CD4               	goto	i1l2804
  7183  04EA  3A01               	xorlw	1	; case 35
  7184  04EB  1903               	skipnz
  7185  04EC  2CEE               	goto	i1l2812
  7186  04ED  2CEE               	goto	i1l2812
  7187  04EE                     i1l2812:	
  7188                           
  7189                           ;usb_device_hid.c: 199: }
  7190                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
  7191  04EE  0020               	movlb	0	; select bank0
  7192  04EF  0E40               	swapf	64,w	;volatile
  7193  04F0  0C89               	rrf	9,f
  7194  04F1  3903               	andlw	3
  7195  04F2  3A01               	xorlw	1
  7196  04F3  1D03               	btfss	3,2
  7197  04F4  0008               	return
  7198  04F5  2D32               	goto	i1l2836
  7199  04F6                     i1l2816:	
  7200                           ;usb_device_hid.c: 218: case 0x02:
  7201                           
  7202                           ;usb_device_hid.c: 217: break;
  7203                           
  7204                           ;usb_device_hid.c: 213: case 0x09:
  7205                           
  7206                           ;usb_device_hid.c: 212: break;
  7207                           
  7208                           ;usb_device_hid.c: 207: {
  7209                           ;usb_device_hid.c: 208: case 0x01:
  7210                           
  7211                           ;usb_device_hid.c: 204: }
  7212                           ;usb_device_hid.c: 206: switch(SetupPkt.bRequest)
  7213                           
  7214                           ;usb_device_hid.c: 202: {
  7215                           ;usb_device_hid.c: 203: return;
  7216                           
  7217                           
  7218                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7219  04F6  30CF               	movlw	low _idle_rate
  7220  04F7  0021               	movlb	1	; select bank1
  7221  04F8  00B3               	movwf	_inPipes^(0+128)	;volatile
  7222  04F9  3000               	movlw	high _idle_rate
  7223  04FA  00B4               	movwf	(_inPipes+1)^(0+128)	;volatile
  7224  04FB  3000               	movlw	0
  7225  04FC  00B7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7226  04FD  3001               	movlw	1
  7227  04FE  00B6               	movwf	(_inPipes^(0+128)+3)	;volatile
  7228  04FF  30C1               	movlw	193
  7229  0500  00F9               	movwf	??_USBCheckHIDRequest
  7230  0501  0879               	movf	??_USBCheckHIDRequest,w
  7231  0502  00B5               	movwf	(_inPipes^(0+128)+2)	;volatile
  7232                           
  7233                           ;usb_device_hid.c: 223: break;
  7234  0503  0008               	return
  7235  0504                     i1l2822:	
  7236                           ;usb_device_hid.c: 224: case 0x0A:
  7237                           
  7238                           
  7239                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
  7240  0504  3080               	movlw	128
  7241  0505  00F9               	movwf	??_USBCheckHIDRequest
  7242  0506  0879               	movf	??_USBCheckHIDRequest,w
  7243  0507  0021               	movlb	1	; select bank1
  7244  0508  00B5               	movwf	(_inPipes^(0+128)+2)	;volatile
  7245                           
  7246                           ;usb_device_hid.c: 226: idle_rate = ((USB_SETUP_SET_IDLE_RATE*)&SetupPkt)->duration;
  7247  0509  0020               	movlb	0	; select bank0
  7248  050A  0843               	movf	67,w
  7249  050B  00F9               	movwf	??_USBCheckHIDRequest
  7250  050C  0879               	movf	??_USBCheckHIDRequest,w
  7251  050D  0021               	movlb	1	; select bank1
  7252  050E  00CF               	movwf	_idle_rate^(0+128)
  7253                           
  7254                           ;usb_device_hid.c: 227: APP_DeviceMouseIdleRateCallback(((USB_SETUP_SET_IDLE_RATE*)&Setu
      +                          pPkt)->reportId, idle_rate);
  7255  050F  084F               	movf	_idle_rate^(0+128),w
  7256  0510  00F9               	movwf	??_USBCheckHIDRequest
  7257  0511  0879               	movf	??_USBCheckHIDRequest,w
  7258  0512  00F4               	movwf	APP_DeviceMouseIdleRateCallback@idleRate
  7259  0513  0020               	movlb	0	; select bank0
  7260  0514  0842               	movf	66,w
  7261  0515  318A  22F6         	fcall	_APP_DeviceMouseIdleRateCallback
  7262                           
  7263                           ;usb_device_hid.c: 228: break;
  7264  0517  0008               	return
  7265  0518                     i1l2826:	
  7266                           ;usb_device_hid.c: 229: case 0x03:
  7267                           
  7268                           
  7269                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
  7270  0518  30CE               	movlw	low _active_protocol
  7271  0519  0021               	movlb	1	; select bank1
  7272  051A  00B3               	movwf	_inPipes^(0+128)	;volatile
  7273  051B  3000               	movlw	high _active_protocol
  7274  051C  00B4               	movwf	(_inPipes+1)^(0+128)	;volatile
  7275  051D  3000               	movlw	0
  7276  051E  00B7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7277  051F  3001               	movlw	1
  7278  0520  00B6               	movwf	(_inPipes^(0+128)+3)	;volatile
  7279  0521  3081               	movlw	129
  7280  0522  00F9               	movwf	??_USBCheckHIDRequest
  7281  0523  0879               	movf	??_USBCheckHIDRequest,w
  7282  0524  00B5               	movwf	(_inPipes^(0+128)+2)	;volatile
  7283                           
  7284                           ;usb_device_hid.c: 234: break;
  7285  0525  0008               	return
  7286  0526                     i1l2832:	
  7287                           ;usb_device_hid.c: 235: case 0x0B:
  7288                           
  7289                           
  7290                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
  7291  0526  3080               	movlw	128
  7292  0527  00F9               	movwf	??_USBCheckHIDRequest
  7293  0528  0879               	movf	??_USBCheckHIDRequest,w
  7294  0529  0021               	movlb	1	; select bank1
  7295  052A  00B5               	movwf	(_inPipes^(0+128)+2)	;volatile
  7296                           
  7297                           ;usb_device_hid.c: 237: active_protocol = ((USB_SETUP_SET_PROTOCOL*)&SetupPkt)->protocol
      +                          ;
  7298  052B  0020               	movlb	0	; select bank0
  7299  052C  0842               	movf	66,w
  7300  052D  00F9               	movwf	??_USBCheckHIDRequest
  7301  052E  0879               	movf	??_USBCheckHIDRequest,w
  7302  052F  0021               	movlb	1	; select bank1
  7303  0530  00CE               	movwf	_active_protocol^(0+128)
  7304                           
  7305                           ;usb_device_hid.c: 239: }
  7306                           
  7307                           ;usb_device_hid.c: 238: break;
  7308  0531  0008               	return
  7309  0532                     i1l2836:	
  7310  0532  0020               	movlb	0	; select bank0
  7311  0533  0841               	movf	65,w	;volatile
  7312                           
  7313                           ; Switch size 1, requested type "space"
  7314                           ; Number of cases is 6, Range of values is 1 to 11
  7315                           ; switch strategies available:
  7316                           ; Name         Instructions Cycles
  7317                           ; simple_byte           19    10 (average)
  7318                           ; direct_byte           31     9 (fixed)
  7319                           ; jumptable            263     9 (fixed)
  7320                           ;	Chosen strategy is simple_byte
  7321  0534  3A01               	xorlw	1	; case 1
  7322  0535  1903               	skipnz
  7323  0536  2D47               	goto	i1l681
  7324  0537  3A03               	xorlw	3	; case 2
  7325  0538  1903               	skipnz
  7326  0539  2CF6               	goto	i1l2816
  7327  053A  3A01               	xorlw	1	; case 3
  7328  053B  1903               	skipnz
  7329  053C  2D18               	goto	i1l2826
  7330  053D  3A0A               	xorlw	10	; case 9
  7331  053E  1903               	skipnz
  7332  053F  2D47               	goto	i1l681
  7333  0540  3A03               	xorlw	3	; case 10
  7334  0541  1903               	skipnz
  7335  0542  2D04               	goto	i1l2822
  7336  0543  3A01               	xorlw	1	; case 11
  7337  0544  1903               	skipnz
  7338  0545  2D26               	goto	i1l2832
  7339  0546  2D47               	goto	i1l681
  7340  0547                     i1l681:	
  7341  0547  0008               	return
  7342  0548                     __end_of_USBCheckHIDRequest:	
  7343                           
  7344                           	psect	text30
  7345  0AF6                     __ptext30:	
  7346 ;; *************** function _APP_DeviceMouseIdleRateCallback *****************
  7347 ;; Defined at:
  7348 ;;		line 263 in file "../src/app_device_mouse.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;  reportId        1    wreg     unsigned char 
  7351 ;;  idleRate        1    4[COMMON] unsigned char 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;  reportId        1    8[COMMON] unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;		None               void
  7356 ;; Registers used:
  7357 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7363 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;Total ram usage:        5 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    1
  7370 ;; This function calls:
  7371 ;;		___bmul
  7372 ;; This function is called by:
  7373 ;;		_USBCheckHIDRequest
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           
  7378                           ;psect for function _APP_DeviceMouseIdleRateCallback
  7379  0AF6                     _APP_DeviceMouseIdleRateCallback:	
  7380                           
  7381                           ;incstack = 0
  7382                           ; Regs used in _APP_DeviceMouseIdleRateCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  7383                           ;APP_DeviceMouseIdleRateCallback@reportId stored from wreg
  7384  0AF6  00F8               	movwf	APP_DeviceMouseIdleRateCallback@reportId
  7385                           
  7386                           ;app_device_mouse.c: 268: if(reportId == 0)
  7387  0AF7  0878               	movf	APP_DeviceMouseIdleRateCallback@reportId,w
  7388  0AF8  1D03               	btfss	3,2
  7389  0AF9  0008               	return
  7390                           
  7391                           ;app_device_mouse.c: 269: {
  7392                           ;app_device_mouse.c: 270: mouse.inputReport[reportId].idleRate = idleRate;
  7393  0AFA  0874               	movf	APP_DeviceMouseIdleRateCallback@idleRate,w
  7394  0AFB  00F5               	movwf	??_APP_DeviceMouseIdleRateCallback
  7395  0AFC  3003               	movlw	3
  7396  0AFD  00F6               	movwf	??_APP_DeviceMouseIdleRateCallback+1
  7397  0AFE  0876               	movf	??_APP_DeviceMouseIdleRateCallback+1,w
  7398  0AFF  00F0               	movwf	___bmul@multiplicand
  7399  0B00  0878               	movf	APP_DeviceMouseIdleRateCallback@reportId,w
  7400  0B01  318A  22E5         	fcall	___bmul
  7401  0B03  3EA9               	addlw	(low ((_mouse| 0+6)))& (0+255)
  7402  0B04  00F7               	movwf	??_APP_DeviceMouseIdleRateCallback+2
  7403  0B05  3001               	movlw	1
  7404  0B06  0777               	addwf	??_APP_DeviceMouseIdleRateCallback+2,w
  7405  0B07  0086               	movwf	6
  7406  0B08  0187               	clrf	7
  7407  0B09  0875               	movf	??_APP_DeviceMouseIdleRateCallback,w
  7408  0B0A  0081               	movwf	1
  7409  0B0B  0008               	return
  7410  0B0C                     __end_of_APP_DeviceMouseIdleRateCallback:	
  7411                           
  7412                           	psect	text31
  7413  0AE5                     __ptext31:	
  7414 ;; *************** function ___bmul *****************
  7415 ;; Defined at:
  7416 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul8.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  multiplier      1    wreg     unsigned char 
  7419 ;;  multiplicand    1    0[COMMON] unsigned char 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  multiplier      1    3[COMMON] unsigned char 
  7422 ;;  product         1    2[COMMON] unsigned char 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  1    wreg      unsigned char 
  7425 ;; Registers used:
  7426 ;;		wreg, status,2, status,0
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7432 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7435 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7436 ;;Total ram usage:        4 bytes
  7437 ;; Hardware stack levels used:    1
  7438 ;; This function calls:
  7439 ;;		Nothing
  7440 ;; This function is called by:
  7441 ;;		_APP_DeviceMouseIdleRateCallback
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           
  7446                           ;psect for function ___bmul
  7447  0AE5                     ___bmul:	
  7448                           
  7449                           ;incstack = 0
  7450                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7451                           ;___bmul@multiplier stored from wreg
  7452  0AE5  00F3               	movwf	___bmul@multiplier
  7453  0AE6  01F2               	clrf	___bmul@product
  7454  0AE7                     i1l2610:	
  7455  0AE7  1C73               	btfss	___bmul@multiplier,0
  7456  0AE8  2AED               	goto	i1l2614
  7457  0AE9  0870               	movf	___bmul@multiplicand,w
  7458  0AEA  00F1               	movwf	??___bmul
  7459  0AEB  0871               	movf	??___bmul,w
  7460  0AEC  07F2               	addwf	___bmul@product,f
  7461  0AED                     i1l2614:	
  7462  0AED  1003               	clrc
  7463  0AEE  0DF0               	rlf	___bmul@multiplicand,f
  7464  0AEF  1003               	clrc
  7465  0AF0  0CF3               	rrf	___bmul@multiplier,f
  7466  0AF1  0873               	movf	___bmul@multiplier,w
  7467  0AF2  1D03               	btfss	3,2
  7468  0AF3  2AE7               	goto	i1l2610
  7469  0AF4  0872               	movf	___bmul@product,w
  7470  0AF5  0008               	return
  7471  0AF6                     __end_of___bmul:	
  7472                           
  7473                           	psect	text32
  7474  0E3E                     __ptext32:	
  7475 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  7476 ;; Defined at:
  7477 ;;		line 75 in file "../src/app_led_usb_status.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;		None
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;		None
  7482 ;; Return value:  Size  Location     Type
  7483 ;;		None               void
  7484 ;; Registers used:
  7485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7495 ;;Total ram usage:        0 bytes
  7496 ;; Hardware stack levels used:    1
  7497 ;; Hardware stack levels required when called:    1
  7498 ;; This function calls:
  7499 ;;		_LED_Off
  7500 ;;		_LED_On
  7501 ;; This function is called by:
  7502 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           
  7507                           ;psect for function _APP_LEDUpdateUSBStatus
  7508  0E3E                     _APP_LEDUpdateUSBStatus:	
  7509                           
  7510                           ;app_led_usb_status.c: 77: static uint16_t ledCount = 0;
  7511                           ;app_led_usb_status.c: 79: if(UCONbits.SUSPND == 1)
  7512                           
  7513                           ;incstack = 0
  7514                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7515  0E3E  003D               	movlb	29	; select bank29
  7516  0E3F  1C8E               	btfss	14,1	;volatile
  7517  0E40  2E7F               	goto	i1l2782
  7518                           
  7519                           ;app_led_usb_status.c: 80: {
  7520                           ;app_led_usb_status.c: 81: LED_Off(LED_D1);
  7521  0E41  3001               	movlw	1
  7522  0E42  318B  2395         	fcall	_LED_Off
  7523                           
  7524                           ;app_led_usb_status.c: 82: return;
  7525  0E44  0008               	return
  7526  0E45                     i1l2756:	
  7527                           ;app_led_usb_status.c: 86: {
  7528                           ;app_led_usb_status.c: 87: case CONFIGURED_STATE:
  7529                           
  7530                           ;app_led_usb_status.c: 83: }
  7531                           ;app_led_usb_status.c: 85: switch(USBDeviceState)
  7532                           
  7533                           
  7534                           ;app_led_usb_status.c: 90: if(ledCount == 1)
  7535  0E45  0020               	movlb	0	; select bank0
  7536  0E46  0364               	decf	APP_LEDUpdateUSBStatus@ledCount,w
  7537  0E47  0465               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  7538  0E48  1D03               	btfss	3,2
  7539  0E49  2E4F               	goto	i1l2760
  7540                           
  7541                           ;app_led_usb_status.c: 91: {
  7542                           ;app_led_usb_status.c: 92: LED_On(LED_D1);
  7543  0E4A  3001               	movlw	1
  7544  0E4B  318B  23AE  318E   	fcall	_LED_On
  7545                           
  7546                           ;app_led_usb_status.c: 93: }
  7547  0E4E  2E85               	goto	i1l2784
  7548  0E4F                     i1l2760:	
  7549                           
  7550                           ;app_led_usb_status.c: 94: else if(ledCount == 75)
  7551  0E4F  304B               	movlw	75
  7552  0E50  0020               	movlb	0	; select bank0
  7553  0E51  0664               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w
  7554  0E52  0465               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  7555  0E53  1D03               	btfss	3,2
  7556  0E54  2E5A               	goto	i1l2764
  7557                           
  7558                           ;app_led_usb_status.c: 95: {
  7559                           ;app_led_usb_status.c: 96: LED_Off(LED_D1);
  7560  0E55  3001               	movlw	1
  7561  0E56  318B  2395  318E   	fcall	_LED_Off
  7562                           
  7563                           ;app_led_usb_status.c: 97: }
  7564  0E59  2E85               	goto	i1l2784
  7565  0E5A                     i1l2764:	
  7566                           
  7567                           ;app_led_usb_status.c: 98: else if(ledCount > 150)
  7568  0E5A  3000               	movlw	0
  7569  0E5B  0020               	movlb	0	; select bank0
  7570  0E5C  0265               	subwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  7571  0E5D  3097               	movlw	151
  7572  0E5E  2E78               	goto	L8
  7573  0E5F                     i1l2768:	
  7574                           ;app_led_usb_status.c: 104: default:
  7575                           
  7576                           ;app_led_usb_status.c: 101: }
  7577                           ;app_led_usb_status.c: 102: break;
  7578                           
  7579                           ;app_led_usb_status.c: 99: {
  7580                           ;app_led_usb_status.c: 100: ledCount = 0;
  7581                           
  7582                           
  7583                           ;app_led_usb_status.c: 107: if(ledCount == 1)
  7584  0E5F  0020               	movlb	0	; select bank0
  7585  0E60  0364               	decf	APP_LEDUpdateUSBStatus@ledCount,w
  7586  0E61  0465               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  7587  0E62  1D03               	btfss	3,2
  7588  0E63  2E69               	goto	i1l2772
  7589                           
  7590                           ;app_led_usb_status.c: 108: {
  7591                           ;app_led_usb_status.c: 109: LED_On(LED_D1);
  7592  0E64  3001               	movlw	1
  7593  0E65  318B  23AE  318E   	fcall	_LED_On
  7594                           
  7595                           ;app_led_usb_status.c: 110: }
  7596  0E68  2E85               	goto	i1l2784
  7597  0E69                     i1l2772:	
  7598                           
  7599                           ;app_led_usb_status.c: 111: else if(ledCount == 50)
  7600  0E69  3032               	movlw	50
  7601  0E6A  0020               	movlb	0	; select bank0
  7602  0E6B  0664               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w
  7603  0E6C  0465               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  7604  0E6D  1D03               	btfss	3,2
  7605  0E6E  2E74               	goto	i1l2776
  7606                           
  7607                           ;app_led_usb_status.c: 112: {
  7608                           ;app_led_usb_status.c: 113: LED_Off(LED_D1);
  7609  0E6F  3001               	movlw	1
  7610  0E70  318B  2395  318E   	fcall	_LED_Off
  7611                           
  7612                           ;app_led_usb_status.c: 114: }
  7613  0E73  2E85               	goto	i1l2784
  7614  0E74                     i1l2776:	
  7615                           
  7616                           ;app_led_usb_status.c: 115: else if(ledCount > 950)
  7617  0E74  3003               	movlw	3
  7618  0E75  0020               	movlb	0	; select bank0
  7619  0E76  0265               	subwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  7620  0E77  30B7               	movlw	183
  7621  0E78                     L8:	
  7622  0E78  1903               	skipnz
  7623  0E79  0264               	subwf	APP_LEDUpdateUSBStatus@ledCount,w
  7624  0E7A  1C03               	skipc
  7625  0E7B  2E85               	goto	i1l2784
  7626                           
  7627                           ;app_led_usb_status.c: 116: {
  7628                           ;app_led_usb_status.c: 117: ledCount = 0;
  7629  0E7C  01E4               	clrf	APP_LEDUpdateUSBStatus@ledCount
  7630  0E7D  01E5               	clrf	APP_LEDUpdateUSBStatus@ledCount+1
  7631                           
  7632                           ;app_led_usb_status.c: 120: }
  7633                           
  7634                           ;app_led_usb_status.c: 118: }
  7635                           ;app_led_usb_status.c: 119: break;
  7636  0E7E  2E85               	goto	i1l2784
  7637  0E7F                     i1l2782:	
  7638  0E7F  0021               	movlb	1	; select bank1
  7639  0E80  0849               	movf	_USBDeviceState^(0+128),w	;volatile
  7640                           
  7641                           ; Switch size 1, requested type "space"
  7642                           ; Number of cases is 1, Range of values is 32 to 32
  7643                           ; switch strategies available:
  7644                           ; Name         Instructions Cycles
  7645                           ; simple_byte            4     3 (average)
  7646                           ; direct_byte           11     9 (fixed)
  7647                           ; jumptable            263     9 (fixed)
  7648                           ;	Chosen strategy is simple_byte
  7649  0E81  3A20               	xorlw	32	; case 32
  7650  0E82  1903               	skipnz
  7651  0E83  2E45               	goto	i1l2756
  7652  0E84  2E5F               	goto	i1l2768
  7653  0E85                     i1l2784:	
  7654                           
  7655                           ;app_led_usb_status.c: 123: ledCount++;
  7656  0E85  3001               	movlw	1
  7657  0E86  0020               	movlb	0	; select bank0
  7658  0E87  07E4               	addwf	APP_LEDUpdateUSBStatus@ledCount,f
  7659  0E88  3000               	movlw	0
  7660  0E89  3DE5               	addwfc	APP_LEDUpdateUSBStatus@ledCount+1,f
  7661  0E8A  0008               	return
  7662  0E8B                     __end_of_APP_LEDUpdateUSBStatus:	
  7663                           
  7664                           	psect	text33
  7665  0BAE                     __ptext33:	
  7666 ;; *************** function _LED_On *****************
  7667 ;; Defined at:
  7668 ;;		line 59 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  led             1    wreg     enum E2
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  led             1    0[COMMON] enum E2
  7673 ;; Return value:  Size  Location     Type
  7674 ;;		None               void
  7675 ;; Registers used:
  7676 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;Total ram usage:        1 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_APP_LEDUpdateUSBStatus
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function _LED_On
  7697  0BAE                     _LED_On:	
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  7701                           ;LED_On@led stored from wreg
  7702  0BAE  00F0               	movwf	LED_On@led
  7703                           
  7704                           ;leds.c: 61: switch(led)
  7705  0BAF  2BBC               	goto	i1l2680
  7706  0BB0                     i1l217:	
  7707                           ;leds.c: 62: {
  7708                           ;leds.c: 63: case LED_D1:
  7709                           
  7710                           
  7711                           ;leds.c: 64: LATCbits.LATC0 = 1;
  7712  0BB0  0022               	movlb	2	; select bank2
  7713  0BB1  140E               	bsf	14,0	;volatile
  7714                           
  7715                           ;leds.c: 65: break;
  7716  0BB2  0008               	return
  7717  0BB3                     i1l219:	
  7718                           ;leds.c: 67: case LED_D2:
  7719                           
  7720                           
  7721                           ;leds.c: 68: LATCbits.LATC1 = 1;
  7722  0BB3  0022               	movlb	2	; select bank2
  7723  0BB4  148E               	bsf	14,1	;volatile
  7724                           
  7725                           ;leds.c: 69: break;
  7726  0BB5  0008               	return
  7727  0BB6                     i1l220:	
  7728                           ;leds.c: 71: case LED_D3:
  7729                           
  7730                           
  7731                           ;leds.c: 72: LATCbits.LATC2 = 1;
  7732  0BB6  0022               	movlb	2	; select bank2
  7733  0BB7  150E               	bsf	14,2	;volatile
  7734                           
  7735                           ;leds.c: 73: break;
  7736  0BB8  0008               	return
  7737  0BB9                     i1l221:	
  7738                           ;leds.c: 75: case LED_D4:
  7739                           
  7740                           
  7741                           ;leds.c: 76: LATCbits.LATC3 = 1;
  7742  0BB9  0022               	movlb	2	; select bank2
  7743  0BBA  158E               	bsf	14,3	;volatile
  7744                           
  7745                           ;leds.c: 81: }
  7746                           
  7747                           ;leds.c: 80: break;
  7748                           
  7749                           ;leds.c: 79: case LED_NONE:
  7750                           
  7751                           ;leds.c: 77: break;
  7752  0BBB  0008               	return
  7753  0BBC                     i1l2680:	
  7754  0BBC  0870               	movf	LED_On@led,w
  7755                           
  7756                           ; Switch size 1, requested type "space"
  7757                           ; Number of cases is 5, Range of values is 0 to 4
  7758                           ; switch strategies available:
  7759                           ; Name         Instructions Cycles
  7760                           ; direct_byte           16     6 (fixed)
  7761                           ; simple_byte           16     9 (average)
  7762                           ; jumptable            260     6 (fixed)
  7763                           ;	Chosen strategy is direct_byte
  7764  0BBD  0084               	movwf	4
  7765  0BBE  3005               	movlw	5
  7766  0BBF  0204               	subwf	4,w
  7767  0BC0  1803               	skipnc
  7768  0BC1  0008               	return
  7769  0BC2  3188               	movlp	high i1S4002
  7770  0BC3  3504               	lslf	4,w
  7771  0BC4  3E2E               	addlw	low i1S4002
  7772  0BC5  0082               	movwf	2
  7773  0BC6                     i1l223:	
  7774  0BC6  0008               	return
  7775  0BC7                     __end_of_LED_On:	
  7776                           
  7777                           	psect	swtext4
  7778  082E                     __pswtext4:	
  7779  082E                     i1S4002:	
  7780  082E  318B  2BC6         	ljmp	i1l223
  7781  0830  318B  2BB0         	ljmp	i1l217
  7782  0832  318B  2BB3         	ljmp	i1l219
  7783  0834  318B  2BB6         	ljmp	i1l220
  7784  0836  318B  2BB9         	ljmp	i1l221
  7785                           
  7786                           	psect	text34
  7787  0B95                     __ptext34:	
  7788 ;; *************** function _LED_Off *****************
  7789 ;; Defined at:
  7790 ;;		line 100 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1459/leds.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  led             1    wreg     enum E2
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  led             1    0[COMMON] enum E2
  7795 ;; Return value:  Size  Location     Type
  7796 ;;		None               void
  7797 ;; Registers used:
  7798 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;Total ram usage:        1 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; This function calls:
  7811 ;;		Nothing
  7812 ;; This function is called by:
  7813 ;;		_APP_LEDUpdateUSBStatus
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           
  7818                           ;psect for function _LED_Off
  7819  0B95                     _LED_Off:	
  7820                           
  7821                           ;incstack = 0
  7822                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  7823                           ;LED_Off@led stored from wreg
  7824  0B95  00F0               	movwf	LED_Off@led
  7825                           
  7826                           ;leds.c: 102: switch(led)
  7827  0B96  2BA3               	goto	i1l2670
  7828  0B97                     i1l227:	
  7829                           ;leds.c: 103: {
  7830                           ;leds.c: 104: case LED_D1:
  7831                           
  7832                           
  7833                           ;leds.c: 105: LATCbits.LATC0 = 0;
  7834  0B97  0022               	movlb	2	; select bank2
  7835  0B98  100E               	bcf	14,0	;volatile
  7836                           
  7837                           ;leds.c: 106: break;
  7838  0B99  0008               	return
  7839  0B9A                     i1l229:	
  7840                           ;leds.c: 108: case LED_D2:
  7841                           
  7842                           
  7843                           ;leds.c: 109: LATCbits.LATC1 = 0;
  7844  0B9A  0022               	movlb	2	; select bank2
  7845  0B9B  108E               	bcf	14,1	;volatile
  7846                           
  7847                           ;leds.c: 110: break;
  7848  0B9C  0008               	return
  7849  0B9D                     i1l230:	
  7850                           ;leds.c: 112: case LED_D3:
  7851                           
  7852                           
  7853                           ;leds.c: 113: LATCbits.LATC2 = 0;
  7854  0B9D  0022               	movlb	2	; select bank2
  7855  0B9E  110E               	bcf	14,2	;volatile
  7856                           
  7857                           ;leds.c: 114: break;
  7858  0B9F  0008               	return
  7859  0BA0                     i1l231:	
  7860                           ;leds.c: 116: case LED_D4:
  7861                           
  7862                           
  7863                           ;leds.c: 117: LATCbits.LATC3 = 0;
  7864  0BA0  0022               	movlb	2	; select bank2
  7865  0BA1  118E               	bcf	14,3	;volatile
  7866                           
  7867                           ;leds.c: 122: }
  7868                           
  7869                           ;leds.c: 121: break;
  7870                           
  7871                           ;leds.c: 120: case LED_NONE:
  7872                           
  7873                           ;leds.c: 118: break;
  7874  0BA2  0008               	return
  7875  0BA3                     i1l2670:	
  7876  0BA3  0870               	movf	LED_Off@led,w
  7877                           
  7878                           ; Switch size 1, requested type "space"
  7879                           ; Number of cases is 5, Range of values is 0 to 4
  7880                           ; switch strategies available:
  7881                           ; Name         Instructions Cycles
  7882                           ; direct_byte           16     6 (fixed)
  7883                           ; simple_byte           16     9 (average)
  7884                           ; jumptable            260     6 (fixed)
  7885                           ;	Chosen strategy is direct_byte
  7886  0BA4  0084               	movwf	4
  7887  0BA5  3005               	movlw	5
  7888  0BA6  0204               	subwf	4,w
  7889  0BA7  1803               	skipnc
  7890  0BA8  0008               	return
  7891  0BA9  3188               	movlp	high i1S4004
  7892  0BAA  3504               	lslf	4,w
  7893  0BAB  3E38               	addlw	low i1S4004
  7894  0BAC  0082               	movwf	2
  7895  0BAD                     i1l233:	
  7896  0BAD  0008               	return
  7897  0BAE                     __end_of_LED_Off:	
  7898                           
  7899                           	psect	swtext5
  7900  0838                     __pswtext5:	
  7901  0838                     i1S4004:	
  7902  0838  318B  2BAD         	ljmp	i1l233
  7903  083A  318B  2B97         	ljmp	i1l227
  7904  083C  318B  2B9A         	ljmp	i1l229
  7905  083E  318B  2B9D         	ljmp	i1l230
  7906  0840  318B  2BA0         	ljmp	i1l231
  7907                           
  7908                           	psect	text35
  7909  0F37                     __ptext35:	
  7910 ;; *************** function _APP_DeviceMouseSOFHandler *****************
  7911 ;; Defined at:
  7912 ;;		line 286 in file "../src/app_device_mouse.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;		None
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;		None
  7917 ;; Return value:  Size  Location     Type
  7918 ;;		None               void
  7919 ;; Registers used:
  7920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;Total ram usage:        3 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; Hardware stack levels required when called:    1
  7933 ;; This function calls:
  7934 ;;		_USBTransferOnePacket
  7935 ;; This function is called by:
  7936 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           
  7941                           ;psect for function _APP_DeviceMouseSOFHandler
  7942  0F37                     _APP_DeviceMouseSOFHandler:	
  7943                           
  7944                           ;app_device_mouse.c: 293: if(USBDeviceState != CONFIGURED_STATE)
  7945                           
  7946                           ;incstack = 0
  7947                           ; Regs used in _APP_DeviceMouseSOFHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7948  0F37  3020               	movlw	32
  7949  0F38  0021               	movlb	1	; select bank1
  7950  0F39  0649               	xorwf	_USBDeviceState^(0+128),w	;volatile
  7951  0F3A  1D03               	btfss	3,2
  7952  0F3B  0008               	return
  7953                           
  7954                           ;app_device_mouse.c: 296: }
  7955                           ;app_device_mouse.c: 321: if(((mouse.inputReport[0].handle != 0x0000) && ((*(volatile ui
      +                          nt8_t*)mouse.inputReport[0].handle & 0x80) != 0x00)) == 0)
  7956                           
  7957                           ;app_device_mouse.c: 294: {
  7958                           ;app_device_mouse.c: 295: return;
  7959  0F3C  0829               	movf	(low ((_mouse| 0+6)))^(0+128),w
  7960  0F3D  1903               	btfsc	3,2
  7961  0F3E  2F44               	goto	i1l2716
  7962  0F3F  0829               	movf	(low ((_mouse| 0+6)))^(0+128),w
  7963  0F40  0086               	movwf	6
  7964  0F41  0187               	clrf	7
  7965  0F42  1B81               	btfsc	1,7
  7966  0F43  0008               	return
  7967  0F44                     i1l2716:	
  7968                           
  7969                           ;app_device_mouse.c: 322: {
  7970                           ;app_device_mouse.c: 326: mouse.movementCount++;
  7971  0F44  3001               	movlw	1
  7972  0F45  07A6               	addwf	(_mouse^(0+128)+3),f
  7973  0F46  3000               	movlw	0
  7974  0F47  3DA7               	addwfc	((_mouse+1)^(0+128)+3),f
  7975                           
  7976                           ;app_device_mouse.c: 331: if(mouse.movementCount == 400)
  7977  0F48  3090               	movlw	144
  7978  0F49  0626               	xorwf	(_mouse^(0+128)+3),w
  7979  0F4A  1D03               	skipz
  7980  0F4B  2F59               	goto	i1l2728
  7981  0F4C  0327               	decf	((_mouse+1)^(0+128)+3),w
  7982  0F4D  1D03               	btfss	3,2
  7983  0F4E  2F59               	goto	i1l2728
  7984                           
  7985                           ;app_device_mouse.c: 332: {
  7986                           ;app_device_mouse.c: 333: mouse.movementCount = 0;
  7987  0F4F  01A6               	clrf	(_mouse^(0+128)+3)
  7988  0F50  01A7               	clrf	((_mouse+1)^(0+128)+3)
  7989                           
  7990                           ;app_device_mouse.c: 335: mouse.vectorPosition++;
  7991  0F51  3001               	movlw	1
  7992  0F52  00F7               	movwf	??_APP_DeviceMouseSOFHandler
  7993  0F53  0877               	movf	??_APP_DeviceMouseSOFHandler,w
  7994  0F54  07A5               	addwf	(_mouse^(0+128)+2),f
  7995                           
  7996                           ;app_device_mouse.c: 336: if(mouse.vectorPosition >= sizeof(xVector))
  7997  0F55  3004               	movlw	4
  7998  0F56  0225               	subwf	(_mouse^(0+128)+2),w
  7999  0F57  1803               	btfsc	3,0
  8000                           
  8001                           ;app_device_mouse.c: 337: {
  8002                           ;app_device_mouse.c: 338: mouse.vectorPosition = 0;
  8003  0F58  01A5               	clrf	(_mouse^(0+128)+2)
  8004  0F59                     i1l2728:	
  8005                           
  8006                           ;app_device_mouse.c: 339: }
  8007                           ;app_device_mouse.c: 340: }
  8008                           ;app_device_mouse.c: 347: if(mouse.movementMode == 1)
  8009  0F59  0328               	decf	(_mouse^(0+128)+5),w
  8010  0F5A  1D03               	btfss	3,2
  8011  0F5B  2F76               	goto	i1l2734
  8012                           
  8013                           ;app_device_mouse.c: 348: {
  8014                           ;app_device_mouse.c: 349: mouseReport.buttons.button1 = 0;
  8015  0F5C  1020               	bcf	32,0
  8016                           
  8017                           ;app_device_mouse.c: 350: mouseReport.buttons.button2 = 0;
  8018  0F5D  10A0               	bcf	32,1
  8019                           
  8020                           ;app_device_mouse.c: 351: mouseReport.buttons.button3 = 0;
  8021  0F5E  1120               	bcf	32,2
  8022                           
  8023                           ;app_device_mouse.c: 353: mouseReport.x = xVector[mouse.vectorPosition];
  8024  0F5F  0825               	movf	(_mouse^(0+128)+2),w
  8025  0F60  3E2C               	addlw	low (_xVector| (0+32768))
  8026  0F61  0084               	movwf	4
  8027  0F62  3081               	movlw	high (_xVector| (0+32768))
  8028  0F63  1803               	skipnc
  8029  0F64  3E01               	addlw	1
  8030  0F65  0085               	movwf	5
  8031  0F66  0800               	movf	0,w	;code access
  8032  0F67  00F7               	movwf	??_APP_DeviceMouseSOFHandler
  8033  0F68  0877               	movf	??_APP_DeviceMouseSOFHandler,w
  8034  0F69  00A1               	movwf	33
  8035                           
  8036                           ;app_device_mouse.c: 354: mouseReport.y = yVector[mouse.vectorPosition];
  8037  0F6A  0825               	movf	(_mouse^(0+128)+2),w
  8038  0F6B  3E30               	addlw	low (_yVector| (0+32768))
  8039  0F6C  0084               	movwf	4
  8040  0F6D  3081               	movlw	high (_yVector| (0+32768))
  8041  0F6E  1803               	skipnc
  8042  0F6F  3E01               	addlw	1
  8043  0F70  0085               	movwf	5
  8044  0F71  0800               	movf	0,w	;code access
  8045  0F72  00F7               	movwf	??_APP_DeviceMouseSOFHandler
  8046  0F73  0877               	movf	??_APP_DeviceMouseSOFHandler,w
  8047  0F74  00A2               	movwf	34
  8048                           
  8049                           ;app_device_mouse.c: 355: }
  8050  0F75  2F89               	goto	i1l2748
  8051  0F76                     i1l2734:	
  8052                           
  8053                           ;app_device_mouse.c: 356: else
  8054                           ;app_device_mouse.c: 357: {
  8055                           ;app_device_mouse.c: 358: mouseReport.buttons.value = 0;
  8056  0F76  01A0               	clrf	32
  8057                           
  8058                           ;app_device_mouse.c: 359: mouseReport.x = 0;
  8059  0F77  3000               	movlw	0
  8060  0F78  00A1               	movwf	33
  8061                           
  8062                           ;app_device_mouse.c: 360: mouseReport.y = 0;
  8063  0F79  3000               	movlw	0
  8064  0F7A  00A2               	movwf	34
  8065                           
  8066                           ;app_device_mouse.c: 362: if(mouse.inputReport[0].idleRate != 0)
  8067  0F7B  082A               	movf	(_mouse^(0+128)+7),w
  8068  0F7C  1903               	btfsc	3,2
  8069  0F7D  2F82               	goto	i1l59
  8070                           
  8071                           ;app_device_mouse.c: 363: {
  8072                           ;app_device_mouse.c: 364: mouse.inputReport[0].idleRateSofCount++;
  8073  0F7E  3001               	movlw	1
  8074  0F7F  00F7               	movwf	??_APP_DeviceMouseSOFHandler
  8075  0F80  0877               	movf	??_APP_DeviceMouseSOFHandler,w
  8076  0F81  07AB               	addwf	(_mouse^(0+128)+8),f
  8077  0F82                     i1l59:	
  8078                           
  8079                           ;app_device_mouse.c: 365: }
  8080                           ;app_device_mouse.c: 372: if(mouse.sentStop == 1)
  8081  0F82  0323               	decf	_mouse^(0+128),w
  8082  0F83  1D03               	btfss	3,2
  8083  0F84  2F89               	goto	i1l2748
  8084                           
  8085                           ;app_device_mouse.c: 373: {
  8086                           ;app_device_mouse.c: 379: if(mouse.inputReport[0].idleRateSofCount <= mouse.inputReport[
      +                          0].idleRate)
  8087  0F85  082B               	movf	(_mouse^(0+128)+8),w
  8088  0F86  022A               	subwf	(_mouse^(0+128)+7),w
  8089  0F87  1803               	btfsc	3,0
  8090  0F88  0008               	return
  8091  0F89                     i1l2748:	
  8092                           ;app_device_mouse.c: 380: {
  8093                           ;app_device_mouse.c: 381: return;
  8094                           
  8095                           
  8096                           ;app_device_mouse.c: 382: }
  8097                           ;app_device_mouse.c: 383: }
  8098                           ;app_device_mouse.c: 384: }
  8099                           ;app_device_mouse.c: 386: mouse.inputReport[0].handle = USBTransferOnePacket(1,1,(uint8_
      +                          t*)&mouseReport,sizeof(mouseReport));
  8100  0F89  01F0               	clrf	USBTransferOnePacket@dir
  8101  0F8A  0AF0               	incf	USBTransferOnePacket@dir,f
  8102  0F8B  30A0               	movlw	160
  8103  0F8C  00F7               	movwf	??_APP_DeviceMouseSOFHandler
  8104  0F8D  0877               	movf	??_APP_DeviceMouseSOFHandler,w
  8105  0F8E  00F1               	movwf	USBTransferOnePacket@data
  8106  0F8F  3003               	movlw	3
  8107  0F90  00F8               	movwf	??_APP_DeviceMouseSOFHandler+1
  8108  0F91  0878               	movf	??_APP_DeviceMouseSOFHandler+1,w
  8109  0F92  00F2               	movwf	USBTransferOnePacket@len
  8110  0F93  3001               	movlw	1
  8111  0F94  318D  25AC         	fcall	_USBTransferOnePacket
  8112  0F96  00F9               	movwf	??_APP_DeviceMouseSOFHandler+2
  8113  0F97  0879               	movf	??_APP_DeviceMouseSOFHandler+2,w
  8114  0F98  0021               	movlb	1	; select bank1
  8115  0F99  00A9               	movwf	(low ((_mouse| 0+6)))^(0+128)
  8116  0F9A  0008               	return
  8117  0F9B                     __end_of_APP_DeviceMouseSOFHandler:	
  8118                           
  8119                           	psect	text36
  8120  0DAC                     __ptext36:	
  8121 ;; *************** function _USBTransferOnePacket *****************
  8122 ;; Defined at:
  8123 ;;		line 1013 in file "../../../../../../framework/usb/src/usb_device.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  ep              1    wreg     unsigned char 
  8126 ;;  dir             1    0[COMMON] unsigned char 
  8127 ;;  data            1    1[COMMON] PTR unsigned char 
  8128 ;;		 -> mouseReport(3), 
  8129 ;;  len             1    2[COMMON] unsigned char 
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;  ep              1    5[COMMON] unsigned char 
  8132 ;;  handle          1    6[COMMON] PTR volatile struct __BD
  8133 ;;		 -> BDT(32), NULL(0), 
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      PTR void 
  8136 ;; Registers used:
  8137 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8143 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8147 ;;Total ram usage:        7 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; This function calls:
  8150 ;;		Nothing
  8151 ;; This function is called by:
  8152 ;;		_APP_DeviceMouseSOFHandler
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156                           
  8157                           ;psect for function _USBTransferOnePacket
  8158  0DAC                     _USBTransferOnePacket:	
  8159                           
  8160                           ;incstack = 0
  8161                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8162                           ;USBTransferOnePacket@ep stored from wreg
  8163  0DAC  00F5               	movwf	USBTransferOnePacket@ep
  8164                           
  8165                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
  8166                           ;usb_device.c: 1018: if(dir != 0)
  8167  0DAD  0870               	movf	USBTransferOnePacket@dir,w
  8168  0DAE  1903               	btfsc	3,2
  8169  0DAF  2DB3               	goto	i1l2642
  8170                           
  8171                           ;usb_device.c: 1019: {
  8172                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
  8173  0DB0  0875               	movf	USBTransferOnePacket@ep,w
  8174  0DB1  3EC0               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8175  0DB2  2DB5               	goto	L9
  8176  0DB3                     i1l2642:	
  8177                           ;usb_device.c: 1022: }
  8178                           
  8179                           
  8180                           ;usb_device.c: 1023: else
  8181                           ;usb_device.c: 1024: {
  8182                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
  8183  0DB3  0875               	movf	USBTransferOnePacket@ep,w
  8184  0DB4  3EC2               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  8185  0DB5                     L9:	
  8186  0DB5  0086               	movwf	6
  8187  0DB6  0187               	clrf	7
  8188  0DB7  0801               	movf	1,w
  8189  0DB8  00F3               	movwf	??_USBTransferOnePacket
  8190  0DB9  0873               	movf	??_USBTransferOnePacket,w
  8191  0DBA  00F6               	movwf	USBTransferOnePacket@handle
  8192                           
  8193                           ;usb_device.c: 1027: }
  8194                           ;usb_device.c: 1031: if(handle == 0)
  8195  0DBB  0876               	movf	USBTransferOnePacket@handle,w
  8196  0DBC  1D03               	btfss	3,2
  8197  0DBD  2DC0               	goto	i1l2650
  8198                           
  8199                           ;usb_device.c: 1032: {
  8200                           ;usb_device.c: 1033: return 0;
  8201  0DBE  3000               	movlw	0
  8202  0DBF  0008               	return
  8203  0DC0                     i1l2650:	
  8204                           
  8205                           ;usb_device.c: 1034: }
  8206                           ;usb_device.c: 1047: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8207  0DC0  0871               	movf	USBTransferOnePacket@data,w
  8208  0DC1  00F3               	movwf	??_USBTransferOnePacket
  8209  0DC2  3000               	movlw	0
  8210  0DC3  00F4               	movwf	??_USBTransferOnePacket+1
  8211  0DC4  0876               	movf	USBTransferOnePacket@handle,w
  8212  0DC5  3E02               	addlw	2
  8213  0DC6  0086               	movwf	6
  8214  0DC7  0187               	clrf	7
  8215  0DC8  0873               	movf	??_USBTransferOnePacket,w
  8216  0DC9  3FC0               	movwi [0]fsr1
  8217  0DCA  0874               	movf	??_USBTransferOnePacket+1,w
  8218  0DCB  3FC1               	movwi [1]fsr1
  8219                           
  8220                           ;usb_device.c: 1048: handle->CNT = len;
  8221  0DCC  0872               	movf	USBTransferOnePacket@len,w
  8222  0DCD  00F3               	movwf	??_USBTransferOnePacket
  8223  0DCE  0A76               	incf	USBTransferOnePacket@handle,w
  8224  0DCF  0086               	movwf	6
  8225  0DD0  0187               	clrf	7
  8226  0DD1  0873               	movf	??_USBTransferOnePacket,w
  8227  0DD2  0081               	movwf	1
  8228                           
  8229                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
  8230  0DD3  3040               	movlw	64
  8231  0DD4  00F3               	movwf	??_USBTransferOnePacket
  8232  0DD5  0876               	movf	USBTransferOnePacket@handle,w
  8233  0DD6  0086               	movwf	6
  8234  0DD7  0187               	clrf	7
  8235  0DD8  0873               	movf	??_USBTransferOnePacket,w
  8236  0DD9  0581               	andwf	1,f
  8237                           
  8238                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
  8239  0DDA  0876               	movf	USBTransferOnePacket@handle,w
  8240  0DDB  0086               	movwf	6
  8241  0DDC  0187               	clrf	7
  8242  0DDD  1581               	bsf	1,3
  8243                           
  8244                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
  8245  0DDE  0876               	movf	USBTransferOnePacket@handle,w
  8246  0DDF  0086               	movwf	6
  8247  0DE0  0187               	clrf	7
  8248  0DE1  1781               	bsf	1,7
  8249                           
  8250                           ;usb_device.c: 1054: if(dir != 0)
  8251  0DE2  0870               	movf	USBTransferOnePacket@dir,w
  8252  0DE3  1903               	btfsc	3,2
  8253  0DE4  2DEA               	goto	i1l2660
  8254                           
  8255                           ;usb_device.c: 1055: {
  8256                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  8257  0DE5  3004               	movlw	4
  8258  0DE6  00F3               	movwf	??_USBTransferOnePacket
  8259  0DE7  0875               	movf	USBTransferOnePacket@ep,w
  8260  0DE8  3EC0               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8261  0DE9  2DEE               	goto	L10
  8262  0DEA                     i1l2660:	
  8263                           ;usb_device.c: 1058: }
  8264                           
  8265                           
  8266                           ;usb_device.c: 1059: else
  8267                           ;usb_device.c: 1060: {
  8268                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  8269  0DEA  3004               	movlw	4
  8270  0DEB  00F3               	movwf	??_USBTransferOnePacket
  8271  0DEC  0875               	movf	USBTransferOnePacket@ep,w
  8272  0DED  3EC2               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  8273  0DEE                     L10:	
  8274  0DEE  0086               	movwf	6
  8275  0DEF  0187               	clrf	7
  8276  0DF0  0873               	movf	??_USBTransferOnePacket,w
  8277  0DF1  0681               	xorwf	1,f
  8278                           
  8279                           ;usb_device.c: 1063: }
  8280                           ;usb_device.c: 1064: return (void*)handle;
  8281  0DF2  0876               	movf	USBTransferOnePacket@handle,w
  8282  0DF3  0008               	return
  8283  0DF4                     __end_of_USBTransferOnePacket:	
  8284                           
  8285                           	psect	text37
  8286  0AD6                     __ptext37:	
  8287 ;; *************** function _APP_DeviceMouseInitialize *****************
  8288 ;; Defined at:
  8289 ;;		line 205 in file "../src/app_device_mouse.c"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;		None
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;		None
  8294 ;; Return value:  Size  Location     Type
  8295 ;;		None               void
  8296 ;; Registers used:
  8297 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8306 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8307 ;;Total ram usage:        1 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    2
  8310 ;; This function calls:
  8311 ;;		_USBEnableEndpoint
  8312 ;; This function is called by:
  8313 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           
  8318                           ;psect for function _APP_DeviceMouseInitialize
  8319  0AD6                     _APP_DeviceMouseInitialize:	
  8320                           
  8321                           ;app_device_mouse.c: 212: mouse.movementMode = 1;
  8322                           
  8323                           ;incstack = 0
  8324                           ; Regs used in _APP_DeviceMouseInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  8325  0AD6  0021               	movlb	1	; select bank1
  8326  0AD7  01A8               	clrf	(_mouse^(0+128)+5)
  8327  0AD8  0AA8               	incf	(_mouse^(0+128)+5),f
  8328                           
  8329                           ;app_device_mouse.c: 215: mouse.inputReport[0].handle = (0);
  8330  0AD9  01A9               	clrf	(low ((_mouse| 0+6)))^(0+128)
  8331                           
  8332                           ;app_device_mouse.c: 217: mouse.sentStop = 0;
  8333  0ADA  01A3               	clrf	_mouse^(0+128)
  8334                           
  8335                           ;app_device_mouse.c: 219: mouse.movementCount = 0;
  8336  0ADB  01A6               	clrf	(_mouse^(0+128)+3)
  8337  0ADC  01A7               	clrf	((_mouse+1)^(0+128)+3)
  8338                           
  8339                           ;app_device_mouse.c: 222: USBEnableEndpoint(1,0x02|0x10|0x08);
  8340  0ADD  301A               	movlw	26
  8341  0ADE  00FD               	movwf	??_APP_DeviceMouseInitialize
  8342  0ADF  087D               	movf	??_APP_DeviceMouseInitialize,w
  8343  0AE0  00F7               	movwf	USBEnableEndpoint@options
  8344  0AE1  3001               	movlw	1
  8345  0AE2  318C  246E         	fcall	_USBEnableEndpoint
  8346  0AE4  0008               	return
  8347  0AE5                     __end_of_APP_DeviceMouseInitialize:	
  8348                           
  8349                           	psect	text38
  8350  0C6E                     __ptext38:	
  8351 ;; *************** function _USBEnableEndpoint *****************
  8352 ;; Defined at:
  8353 ;;		line 896 in file "../../../../../../framework/usb/src/usb_device.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  ep              1    wreg     unsigned char 
  8356 ;;  options         1    7[COMMON] unsigned char 
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;  ep              1   12[COMMON] unsigned char 
  8359 ;;  p               2   10[COMMON] PTR unsigned char 
  8360 ;;		 -> UEP0(1), 
  8361 ;; Return value:  Size  Location     Type
  8362 ;;		None               void
  8363 ;; Registers used:
  8364 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8370 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8374 ;;Total ram usage:        6 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    1
  8377 ;; This function calls:
  8378 ;;		_USBConfigureEndpoint
  8379 ;; This function is called by:
  8380 ;;		_APP_DeviceMouseInitialize
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           
  8385                           ;psect for function _USBEnableEndpoint
  8386  0C6E                     _USBEnableEndpoint:	
  8387                           
  8388                           ;incstack = 0
  8389                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8390                           ;USBEnableEndpoint@ep stored from wreg
  8391  0C6E  00FC               	movwf	USBEnableEndpoint@ep
  8392                           
  8393                           ;usb_device.c: 898: unsigned char* p;
  8394                           ;usb_device.c: 902: if(options & 0x04)
  8395  0C6F  1D77               	btfss	USBEnableEndpoint@options,2
  8396  0C70  2C76               	goto	i1l2626
  8397                           
  8398                           ;usb_device.c: 903: {
  8399                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
  8400  0C71  01F0               	clrf	USBConfigureEndpoint@direction
  8401  0C72  087C               	movf	USBEnableEndpoint@ep,w
  8402  0C73  318C  24E5  318C   	fcall	_USBConfigureEndpoint
  8403  0C76                     i1l2626:	
  8404                           
  8405                           ;usb_device.c: 905: }
  8406                           ;usb_device.c: 906: if(options & 0x02)
  8407  0C76  1CF7               	btfss	USBEnableEndpoint@options,1
  8408  0C77  2C7D               	goto	i1l2630
  8409                           
  8410                           ;usb_device.c: 907: {
  8411                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
  8412  0C78  01F0               	clrf	USBConfigureEndpoint@direction
  8413  0C79  0AF0               	incf	USBConfigureEndpoint@direction,f
  8414  0C7A  087C               	movf	USBEnableEndpoint@ep,w
  8415  0C7B  318C  24E5         	fcall	_USBConfigureEndpoint
  8416  0C7D                     i1l2630:	
  8417                           
  8418                           ;usb_device.c: 909: }
  8419                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
  8420  0C7D  087C               	movf	USBEnableEndpoint@ep,w
  8421  0C7E  3E98               	addlw	152
  8422  0C7F  00F8               	movwf	??_USBEnableEndpoint
  8423  0C80  01F9               	clrf	??_USBEnableEndpoint+1
  8424  0C81  300E               	movlw	14
  8425  0C82  3DF9               	addwfc	??_USBEnableEndpoint+1,f
  8426  0C83  0878               	movf	??_USBEnableEndpoint,w
  8427  0C84  00FA               	movwf	USBEnableEndpoint@p
  8428  0C85  0879               	movf	??_USBEnableEndpoint+1,w
  8429  0C86  00FB               	movwf	USBEnableEndpoint@p+1
  8430                           
  8431                           ;usb_device.c: 919: *p = options;
  8432  0C87  087A               	movf	USBEnableEndpoint@p,w
  8433  0C88  0086               	movwf	6
  8434  0C89  087B               	movf	USBEnableEndpoint@p+1,w
  8435  0C8A  0087               	movwf	7
  8436  0C8B  0877               	movf	USBEnableEndpoint@options,w
  8437  0C8C  0081               	movwf	1
  8438  0C8D  0008               	return
  8439  0C8E                     __end_of_USBEnableEndpoint:	
  8440                           
  8441                           	psect	text39
  8442  0CE5                     __ptext39:	
  8443 ;; *************** function _USBConfigureEndpoint *****************
  8444 ;; Defined at:
  8445 ;;		line 1561 in file "../../../../../../framework/usb/src/usb_device.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;  EPNum           1    wreg     unsigned char 
  8448 ;;  direction       1    0[COMMON] unsigned char 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;  EPNum           1    5[COMMON] unsigned char 
  8451 ;;  handle          1    6[COMMON] PTR volatile struct __BD
  8452 ;;		 -> BDT(32), 
  8453 ;; Return value:  Size  Location     Type
  8454 ;;		None               void
  8455 ;; Registers used:
  8456 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8462 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;Total ram usage:        7 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_USBEnableEndpoint
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475                           
  8476                           ;psect for function _USBConfigureEndpoint
  8477  0CE5                     _USBConfigureEndpoint:	
  8478                           
  8479                           ;incstack = 0
  8480                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8481                           ;USBConfigureEndpoint@EPNum stored from wreg
  8482  0CE5  00F5               	movwf	USBConfigureEndpoint@EPNum
  8483                           
  8484                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
  8485                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
  8486  0CE6  3020               	movlw	32
  8487  0CE7  00F1               	movwf	??_USBConfigureEndpoint
  8488  0CE8  0871               	movf	??_USBConfigureEndpoint,w
  8489  0CE9  00F6               	movwf	USBConfigureEndpoint@handle
  8490                           
  8491                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
  8492  0CEA  0870               	movf	USBConfigureEndpoint@direction,w
  8493  0CEB  00F1               	movwf	??_USBConfigureEndpoint
  8494  0CEC  3001               	movlw	1
  8495  0CED                     u173_25:	
  8496  0CED  35F1               	lslf	??_USBConfigureEndpoint,f
  8497  0CEE  0B89               	decfsz	9,f
  8498  0CEF  2CED               	goto	u173_25
  8499  0CF0  0875               	movf	USBConfigureEndpoint@EPNum,w
  8500  0CF1  00F2               	movwf	??_USBConfigureEndpoint+1
  8501  0CF2  3001               	movlw	1
  8502  0CF3                     u174_25:	
  8503  0CF3  35F2               	lslf	??_USBConfigureEndpoint+1,f
  8504  0CF4  3EFF               	addlw	-1
  8505  0CF5  1D03               	skipz
  8506  0CF6  2CF3               	goto	u174_25
  8507  0CF7  3572               	lslf	??_USBConfigureEndpoint+1,w
  8508  0CF8  0771               	addwf	??_USBConfigureEndpoint,w
  8509  0CF9  00F3               	movwf	??_USBConfigureEndpoint+2
  8510  0CFA  3001               	movlw	1
  8511  0CFB                     u175_25:	
  8512  0CFB  35F3               	lslf	??_USBConfigureEndpoint+2,f
  8513  0CFC  3EFF               	addlw	-1
  8514  0CFD  1D03               	skipz
  8515  0CFE  2CFB               	goto	u175_25
  8516  0CFF  3573               	lslf	??_USBConfigureEndpoint+2,w
  8517  0D00  00F4               	movwf	??_USBConfigureEndpoint+3
  8518  0D01  0874               	movf	??_USBConfigureEndpoint+3,w
  8519  0D02  07F6               	addwf	USBConfigureEndpoint@handle,f
  8520                           
  8521                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
  8522  0D03  0876               	movf	USBConfigureEndpoint@handle,w
  8523  0D04  0086               	movwf	6
  8524  0D05  0187               	clrf	7
  8525  0D06  1381               	bcf	1,7
  8526                           
  8527                           ;usb_device.c: 1575: if(direction == 0)
  8528  0D07  0870               	movf	USBConfigureEndpoint@direction,w
  8529  0D08  1D03               	btfss	3,2
  8530  0D09  2D0F               	goto	i1l2602
  8531                           
  8532                           ;usb_device.c: 1576: {
  8533                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
  8534  0D0A  0876               	movf	USBConfigureEndpoint@handle,w
  8535  0D0B  00F1               	movwf	??_USBConfigureEndpoint
  8536  0D0C  0875               	movf	USBConfigureEndpoint@EPNum,w
  8537  0D0D  3EC2               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  8538  0D0E  2D13               	goto	L11
  8539  0D0F                     i1l2602:	
  8540                           ;usb_device.c: 1578: }
  8541                           
  8542                           
  8543                           ;usb_device.c: 1579: else
  8544                           ;usb_device.c: 1580: {
  8545                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
  8546  0D0F  0876               	movf	USBConfigureEndpoint@handle,w
  8547  0D10  00F1               	movwf	??_USBConfigureEndpoint
  8548  0D11  0875               	movf	USBConfigureEndpoint@EPNum,w
  8549  0D12  3EC0               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  8550  0D13                     L11:	
  8551  0D13  0086               	movwf	6
  8552  0D14  0187               	clrf	7
  8553  0D15  0871               	movf	??_USBConfigureEndpoint,w
  8554  0D16  0081               	movwf	1
  8555                           
  8556                           ;usb_device.c: 1582: }
  8557                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
  8558  0D17  0876               	movf	USBConfigureEndpoint@handle,w
  8559  0D18  0086               	movwf	6
  8560  0D19  0187               	clrf	7
  8561  0D1A  1301               	bcf	1,6
  8562                           
  8563                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
  8564  0D1B  0876               	movf	USBConfigureEndpoint@handle,w
  8565  0D1C  3E04               	addlw	4
  8566  0D1D  0086               	movwf	6
  8567  0D1E  0187               	clrf	7
  8568  0D1F  1701               	bsf	1,6
  8569  0D20  0008               	return
  8570  0D21                     __end_of_USBConfigureEndpoint:	
  8571                           
  8572                           	psect	text40
  8573  0CB4                     __ptext40:	
  8574 ;; *************** function _USBCtrlTrfOutHandler *****************
  8575 ;; Defined at:
  8576 ;;		line 2555 in file "../../../../../../framework/usb/src/usb_device.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;		None
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;		None               void
  8583 ;; Registers used:
  8584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;Total ram usage:        2 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:    2
  8597 ;; This function calls:
  8598 ;;		_USBCtrlTrfRxService
  8599 ;; This function is called by:
  8600 ;;		_USBCtrlEPService
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           
  8605                           ;psect for function _USBCtrlTrfOutHandler
  8606  0CB4                     _USBCtrlTrfOutHandler:	
  8607                           
  8608                           ;usb_device.c: 2557: if(controlTransferState == 2)
  8609                           
  8610                           ;incstack = 0
  8611                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8612  0CB4  3002               	movlw	2
  8613  0CB5  0020               	movlb	0	; select bank0
  8614  0CB6  0668               	xorwf	_controlTransferState,w	;volatile
  8615  0CB7  1D03               	btfss	3,2
  8616  0CB8  2CBC               	goto	i1l3342
  8617                           
  8618                           ;usb_device.c: 2558: {
  8619                           ;usb_device.c: 2559: USBCtrlTrfRxService();
  8620  0CB9  3184  2425         	fcall	_USBCtrlTrfRxService
  8621                           
  8622                           ;usb_device.c: 2560: }
  8623  0CBB  0008               	return
  8624  0CBC                     i1l3342:	
  8625                           
  8626                           ;usb_device.c: 2561: else
  8627                           ;usb_device.c: 2562: {
  8628                           ;usb_device.c: 2565: controlTransferState = 0;
  8629  0CBC  0020               	movlb	0	; select bank0
  8630  0CBD  01E8               	clrf	_controlTransferState	;volatile
  8631                           
  8632                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
  8633  0CBE  0021               	movlb	1	; select bank1
  8634  0CBF  0844               	movf	_BothEP0OutUOWNsSet^(0+128),w	;volatile
  8635  0CC0  1D03               	btfss	3,2
  8636  0CC1  2CE2               	goto	i1l3354
  8637                           
  8638                           ;usb_device.c: 2573: {
  8639                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
  8640  0CC2  3008               	movlw	8
  8641  0CC3  00F6               	movwf	??_USBCtrlTrfOutHandler
  8642  0CC4  0020               	movlb	0	; select bank0
  8643  0CC5  0A6B               	incf	_pBDTEntryEP0OutNext,w
  8644  0CC6  0086               	movwf	6
  8645  0CC7  0187               	clrf	7
  8646  0CC8  0876               	movf	??_USBCtrlTrfOutHandler,w
  8647  0CC9  0081               	movwf	1
  8648                           
  8649                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8650  0CCA  3040               	movlw	64
  8651  0CCB  00F6               	movwf	??_USBCtrlTrfOutHandler
  8652  0CCC  3000               	movlw	0
  8653  0CCD  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  8654  0CCE  086B               	movf	_pBDTEntryEP0OutNext,w
  8655  0CCF  3E02               	addlw	2
  8656  0CD0  0086               	movwf	6
  8657  0CD1  0187               	clrf	7
  8658  0CD2  0876               	movf	??_USBCtrlTrfOutHandler,w
  8659  0CD3  3FC0               	movwi [0]fsr1
  8660  0CD4  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  8661  0CD5  3FC1               	movwi [1]fsr1
  8662                           
  8663                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8664  0CD6  300C               	movlw	12
  8665  0CD7  00F6               	movwf	??_USBCtrlTrfOutHandler
  8666  0CD8  086B               	movf	_pBDTEntryEP0OutNext,w
  8667  0CD9  0086               	movwf	6
  8668  0CDA  0187               	clrf	7
  8669  0CDB  0876               	movf	??_USBCtrlTrfOutHandler,w
  8670  0CDC  0081               	movwf	1
  8671                           
  8672                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8673  0CDD  086B               	movf	_pBDTEntryEP0OutNext,w
  8674  0CDE  0086               	movwf	6
  8675  0CDF  0187               	clrf	7
  8676  0CE0  1781               	bsf	1,7
  8677                           
  8678                           ;usb_device.c: 2578: }
  8679  0CE1  0008               	return
  8680  0CE2                     i1l3354:	
  8681                           
  8682                           ;usb_device.c: 2579: else
  8683                           ;usb_device.c: 2580: {
  8684                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
  8685  0CE2  0021               	movlb	1	; select bank1
  8686  0CE3  01C4               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  8687  0CE4  0008               	return
  8688  0CE5                     __end_of_USBCtrlTrfOutHandler:	
  8689                           
  8690                           	psect	text41
  8691  0425                     __ptext41:	
  8692 ;; *************** function _USBCtrlTrfRxService *****************
  8693 ;; Defined at:
  8694 ;;		line 1870 in file "../../../../../../framework/usb/src/usb_device.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;		None
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;  byteToRead      1    5[COMMON] unsigned char 
  8699 ;;  i               1    4[COMMON] unsigned char 
  8700 ;; Return value:  Size  Location     Type
  8701 ;;		None               void
  8702 ;; Registers used:
  8703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8711 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8712 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8713 ;;Total ram usage:        4 bytes
  8714 ;; Hardware stack levels used:    1
  8715 ;; Hardware stack levels required when called:    1
  8716 ;; This function calls:
  8717 ;;		_USBCtrlEPAllowStatusStage
  8718 ;; This function is called by:
  8719 ;;		_USBCtrlTrfOutHandler
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           
  8724                           ;psect for function _USBCtrlTrfRxService
  8725  0425                     _USBCtrlTrfRxService:	
  8726                           
  8727                           ;usb_device.c: 1872: uint8_t byteToRead;
  8728                           ;usb_device.c: 1873: uint8_t i;
  8729                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8730                           
  8731                           ;incstack = 0
  8732                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8733  0425  0020               	movlb	0	; select bank0
  8734  0426  086A               	movf	_pBDTEntryEP0OutCurrent,w
  8735  0427  0086               	movwf	6
  8736  0428  0187               	clrf	7
  8737  0429  3F41               	moviw [1]fsr1
  8738  042A  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8739                           
  8740                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
  8741  042B  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8742  042C  00F2               	movwf	??_USBCtrlTrfRxService
  8743  042D  01F3               	clrf	??_USBCtrlTrfRxService+1
  8744  042E  0873               	movf	??_USBCtrlTrfRxService+1,w
  8745  042F  0021               	movlb	1	; select bank1
  8746  0430  0230               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
  8747  0431  1D03               	skipz
  8748  0432  2C35               	goto	u257_25
  8749  0433  0872               	movf	??_USBCtrlTrfRxService,w
  8750  0434  022F               	subwf	(_outPipes^(0+128)+3),w	;volatile
  8751  0435                     u257_25:	
  8752  0435  1803               	skipnc
  8753  0436  2C3B               	goto	i1l514
  8754                           
  8755                           ;usb_device.c: 1884: {
  8756                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
  8757  0437  082F               	movf	(_outPipes^(0+128)+3),w	;volatile
  8758  0438  00F2               	movwf	??_USBCtrlTrfRxService
  8759  0439  0872               	movf	??_USBCtrlTrfRxService,w
  8760  043A  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8761  043B                     i1l514:	
  8762                           
  8763                           ;usb_device.c: 1886: }
  8764                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
  8765  043B  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8766  043C  00F2               	movwf	??_USBCtrlTrfRxService
  8767  043D  01F3               	clrf	??_USBCtrlTrfRxService+1
  8768  043E  0872               	movf	??_USBCtrlTrfRxService,w
  8769  043F  02AF               	subwf	(_outPipes^(0+128)+3),f	;volatile
  8770  0440  0873               	movf	??_USBCtrlTrfRxService+1,w
  8771  0441  3BB0               	subwfb	((_outPipes+1)^(0+128)+3),f	;volatile
  8772                           
  8773                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
  8774  0442  01F4               	clrf	USBCtrlTrfRxService@i
  8775  0443                     i1l3242:	
  8776  0443  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8777  0444  0274               	subwf	USBCtrlTrfRxService@i,w
  8778  0445  1803               	btfsc	3,0
  8779  0446  2C5B               	goto	i1l3244
  8780                           
  8781                           ;usb_device.c: 1893: {
  8782                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8783  0447  0874               	movf	USBCtrlTrfRxService@i,w
  8784  0448  3E48               	addlw	72
  8785  0449  0086               	movwf	6
  8786  044A  0187               	clrf	7
  8787  044B  0801               	movf	1,w
  8788  044C  00F2               	movwf	??_USBCtrlTrfRxService
  8789  044D  082C               	movf	_outPipes^(0+128),w	;volatile
  8790  044E  0086               	movwf	6
  8791  044F  0187               	clrf	7
  8792  0450  0872               	movf	??_USBCtrlTrfRxService,w
  8793  0451  0081               	movwf	1
  8794  0452  3001               	movlw	1
  8795  0453  00F2               	movwf	??_USBCtrlTrfRxService
  8796  0454  0872               	movf	??_USBCtrlTrfRxService,w
  8797  0455  07AC               	addwf	_outPipes^(0+128),f	;volatile
  8798  0456  3001               	movlw	1
  8799  0457  00F2               	movwf	??_USBCtrlTrfRxService
  8800  0458  0872               	movf	??_USBCtrlTrfRxService,w
  8801  0459  07F4               	addwf	USBCtrlTrfRxService@i,f
  8802  045A  2C43               	goto	i1l3242
  8803  045B                     i1l3244:	
  8804                           
  8805                           ;usb_device.c: 1895: }
  8806                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
  8807  045B  082F               	movf	(_outPipes^(0+128)+3),w	;volatile
  8808  045C  0430               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
  8809  045D  1903               	btfsc	3,2
  8810  045E  2C90               	goto	i1l3256
  8811                           
  8812                           ;usb_device.c: 1900: {
  8813                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  8814  045F  3008               	movlw	8
  8815  0460  00F2               	movwf	??_USBCtrlTrfRxService
  8816  0461  0020               	movlb	0	; select bank0
  8817  0462  0A6B               	incf	_pBDTEntryEP0OutNext,w
  8818  0463  0086               	movwf	6
  8819  0464  0187               	clrf	7
  8820  0465  0872               	movf	??_USBCtrlTrfRxService,w
  8821  0466  0081               	movwf	1
  8822                           
  8823                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8824  0467  3048               	movlw	72
  8825  0468  00F2               	movwf	??_USBCtrlTrfRxService
  8826  0469  3000               	movlw	0
  8827  046A  00F3               	movwf	??_USBCtrlTrfRxService+1
  8828  046B  086B               	movf	_pBDTEntryEP0OutNext,w
  8829  046C  3E02               	addlw	2
  8830  046D  0086               	movwf	6
  8831  046E  0187               	clrf	7
  8832  046F  0872               	movf	??_USBCtrlTrfRxService,w
  8833  0470  3FC0               	movwi [0]fsr1
  8834  0471  0873               	movf	??_USBCtrlTrfRxService+1,w
  8835  0472  3FC1               	movwi [1]fsr1
  8836                           
  8837                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8838  0473  086A               	movf	_pBDTEntryEP0OutCurrent,w
  8839  0474  0086               	movwf	6
  8840  0475  0187               	clrf	7
  8841  0476  1B01               	btfsc	1,6
  8842  0477  2C84               	goto	i1l3254
  8843                           
  8844                           ;usb_device.c: 1904: {
  8845                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8846  0478  3048               	movlw	72
  8847  0479  00F2               	movwf	??_USBCtrlTrfRxService
  8848  047A  086B               	movf	_pBDTEntryEP0OutNext,w
  8849  047B  0086               	movwf	6
  8850  047C  0187               	clrf	7
  8851  047D  0872               	movf	??_USBCtrlTrfRxService,w
  8852  047E  0081               	movwf	1
  8853                           
  8854                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8855  047F  086B               	movf	_pBDTEntryEP0OutNext,w
  8856  0480  0086               	movwf	6
  8857  0481  0187               	clrf	7
  8858  0482  1781               	bsf	1,7
  8859                           
  8860                           ;usb_device.c: 1907: }
  8861  0483  0008               	return
  8862  0484                     i1l3254:	
  8863                           
  8864                           ;usb_device.c: 1908: else
  8865                           ;usb_device.c: 1909: {
  8866                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8867  0484  3008               	movlw	8
  8868  0485  00F2               	movwf	??_USBCtrlTrfRxService
  8869  0486  086B               	movf	_pBDTEntryEP0OutNext,w
  8870  0487  0086               	movwf	6
  8871  0488  0187               	clrf	7
  8872  0489  0872               	movf	??_USBCtrlTrfRxService,w
  8873  048A  0081               	movwf	1
  8874                           
  8875                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8876  048B  086B               	movf	_pBDTEntryEP0OutNext,w
  8877  048C  0086               	movwf	6
  8878  048D  0187               	clrf	7
  8879  048E  1781               	bsf	1,7
  8880                           
  8881                           ;usb_device.c: 1912: }
  8882                           ;usb_device.c: 1913: }
  8883  048F  0008               	return
  8884  0490                     i1l3256:	
  8885                           
  8886                           ;usb_device.c: 1914: else
  8887                           ;usb_device.c: 1915: {
  8888                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
  8889  0490  3008               	movlw	8
  8890  0491  00F2               	movwf	??_USBCtrlTrfRxService
  8891  0492  0020               	movlb	0	; select bank0
  8892  0493  0A6B               	incf	_pBDTEntryEP0OutNext,w
  8893  0494  0086               	movwf	6
  8894  0495  0187               	clrf	7
  8895  0496  0872               	movf	??_USBCtrlTrfRxService,w
  8896  0497  0081               	movwf	1
  8897                           
  8898                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8899  0498  3040               	movlw	64
  8900  0499  00F2               	movwf	??_USBCtrlTrfRxService
  8901  049A  3000               	movlw	0
  8902  049B  00F3               	movwf	??_USBCtrlTrfRxService+1
  8903  049C  086B               	movf	_pBDTEntryEP0OutNext,w
  8904  049D  3E02               	addlw	2
  8905  049E  0086               	movwf	6
  8906  049F  0187               	clrf	7
  8907  04A0  0872               	movf	??_USBCtrlTrfRxService,w
  8908  04A1  3FC0               	movwi [0]fsr1
  8909  04A2  0873               	movf	??_USBCtrlTrfRxService+1,w
  8910  04A3  3FC1               	movwi [1]fsr1
  8911                           
  8912                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8913  04A4  3004               	movlw	4
  8914  04A5  00F2               	movwf	??_USBCtrlTrfRxService
  8915  04A6  086B               	movf	_pBDTEntryEP0OutNext,w
  8916  04A7  0086               	movwf	6
  8917  04A8  0187               	clrf	7
  8918  04A9  0872               	movf	??_USBCtrlTrfRxService,w
  8919  04AA  0081               	movwf	1
  8920                           
  8921                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8922  04AB  086B               	movf	_pBDTEntryEP0OutNext,w
  8923  04AC  0086               	movwf	6
  8924  04AD  0187               	clrf	7
  8925  04AE  1781               	bsf	1,7
  8926                           
  8927                           ;usb_device.c: 1933: {
  8928                           ;usb_device.c: 1939: outPipes[0].pFunc();
  8929  04AF  0021               	movlb	1	; select bank1
  8930  04B0  0831               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  8931  04B1  0832               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  8932                           
  8933                           ;usb_device.c: 1944: }
  8934                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
  8935  04B2  13AE               	bcf	(_outPipes^(0+128)+2),7	;volatile
  8936                           
  8937                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
  8938  04B3  0020               	movlb	0	; select bank0
  8939  04B4  0866               	movf	_USBDeferStatusStagePacket,w	;volatile
  8940  04B5  1D03               	btfss	3,2
  8941  04B6  0008               	return
  8942                           
  8943                           ;usb_device.c: 1960: {
  8944                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
  8945  04B7  3186  26CD         	fcall	_USBCtrlEPAllowStatusStage
  8946  04B9  0008               	return
  8947  04BA                     __end_of_USBCtrlTrfRxService:	
  8948                           
  8949                           	psect	text42
  8950  06CD                     __ptext42:	
  8951 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8952 ;; Defined at:
  8953 ;;		line 1434 in file "../../../../../../framework/usb/src/usb_device.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;		None
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;		None
  8958 ;; Return value:  Size  Location     Type
  8959 ;;		None               void
  8960 ;; Registers used:
  8961 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;Total ram usage:        2 bytes
  8972 ;; Hardware stack levels used:    1
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		_USBDeviceTasks
  8977 ;;		_USBCtrlEPServiceComplete
  8978 ;;		_USBCtrlTrfRxService
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982                           
  8983                           ;psect for function _USBCtrlEPAllowStatusStage
  8984  06CD                     _USBCtrlEPAllowStatusStage:	
  8985                           
  8986                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
  8987                           
  8988                           ;incstack = 0
  8989                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8990  06CD  0021               	movlb	1	; select bank1
  8991  06CE  084A               	movf	_USBStatusStageEnabledFlag1^(0+128),w	;volatile
  8992  06CF  1D03               	btfss	3,2
  8993  06D0  0008               	return
  8994                           
  8995                           ;usb_device.c: 1442: {
  8996                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
  8997  06D1  3001               	movlw	1
  8998  06D2  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8999  06D3  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9000  06D4  00CA               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  9001                           
  9002                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
  9003  06D5  084B               	movf	_USBStatusStageEnabledFlag2^(0+128),w	;volatile
  9004  06D6  1D03               	btfss	3,2
  9005  06D7  0008               	return
  9006                           
  9007                           ;usb_device.c: 1445: {
  9008                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
  9009  06D8  3001               	movlw	1
  9010  06D9  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9011  06DA  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9012  06DB  00CB               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  9013                           
  9014                           ;usb_device.c: 1450: if(controlTransferState == 2)
  9015  06DC  3002               	movlw	2
  9016  06DD  0020               	movlb	0	; select bank0
  9017  06DE  0668               	xorwf	_controlTransferState,w	;volatile
  9018  06DF  1D03               	btfss	3,2
  9019  06E0  2EF2               	goto	i1l2936
  9020                           
  9021                           ;usb_device.c: 1451: {
  9022                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
  9023  06E1  0021               	movlb	1	; select bank1
  9024  06E2  0A40               	incf	_pBDTEntryIn^(0+128),w
  9025  06E3  0086               	movwf	6
  9026  06E4  0187               	clrf	7
  9027  06E5  0181               	clrf	1
  9028                           
  9029                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9030  06E6  3048               	movlw	72
  9031  06E7  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9032  06E8  0840               	movf	_pBDTEntryIn^(0+128),w
  9033  06E9  0086               	movwf	6
  9034  06EA  0187               	clrf	7
  9035  06EB  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9036  06EC  0081               	movwf	1
  9037                           
  9038                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9039  06ED  0840               	movf	_pBDTEntryIn^(0+128),w
  9040  06EE  0086               	movwf	6
  9041  06EF  0187               	clrf	7
  9042  06F0  1781               	bsf	1,7
  9043                           
  9044                           ;usb_device.c: 1455: }
  9045  06F1  0008               	return
  9046  06F2                     i1l2936:	
  9047                           
  9048                           ;usb_device.c: 1456: else if(controlTransferState == 1)
  9049  06F2  0020               	movlb	0	; select bank0
  9050  06F3  0368               	decf	_controlTransferState,w	;volatile
  9051  06F4  1D03               	btfss	3,2
  9052  06F5  0008               	return
  9053                           
  9054                           ;usb_device.c: 1457: {
  9055                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
  9056  06F6  0021               	movlb	1	; select bank1
  9057  06F7  01C4               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  9058                           
  9059                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
  9060  06F8  3008               	movlw	8
  9061  06F9  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9062  06FA  0020               	movlb	0	; select bank0
  9063  06FB  0A6A               	incf	_pBDTEntryEP0OutCurrent,w
  9064  06FC  0086               	movwf	6
  9065  06FD  0187               	clrf	7
  9066  06FE  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9067  06FF  0081               	movwf	1
  9068                           
  9069                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9070  0700  3040               	movlw	64
  9071  0701  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9072  0702  3000               	movlw	0
  9073  0703  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9074  0704  086A               	movf	_pBDTEntryEP0OutCurrent,w
  9075  0705  3E02               	addlw	2
  9076  0706  0086               	movwf	6
  9077  0707  0187               	clrf	7
  9078  0708  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9079  0709  3FC0               	movwi [0]fsr1
  9080  070A  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9081  070B  3FC1               	movwi [1]fsr1
  9082                           
  9083                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9084  070C  3004               	movlw	4
  9085  070D  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9086  070E  086A               	movf	_pBDTEntryEP0OutCurrent,w
  9087  070F  0086               	movwf	6
  9088  0710  0187               	clrf	7
  9089  0711  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9090  0712  0081               	movwf	1
  9091                           
  9092                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9093  0713  086A               	movf	_pBDTEntryEP0OutCurrent,w
  9094  0714  0086               	movwf	6
  9095  0715  0187               	clrf	7
  9096  0716  1781               	bsf	1,7
  9097                           
  9098                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
  9099  0717  3001               	movlw	1
  9100  0718  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9101  0719  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9102  071A  0021               	movlb	1	; select bank1
  9103  071B  00C4               	movwf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  9104                           
  9105                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
  9106  071C  3008               	movlw	8
  9107  071D  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9108  071E  0020               	movlb	0	; select bank0
  9109  071F  0A6B               	incf	_pBDTEntryEP0OutNext,w
  9110  0720  0086               	movwf	6
  9111  0721  0187               	clrf	7
  9112  0722  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9113  0723  0081               	movwf	1
  9114                           
  9115                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9116  0724  3040               	movlw	64
  9117  0725  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9118  0726  3000               	movlw	0
  9119  0727  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9120  0728  086B               	movf	_pBDTEntryEP0OutNext,w
  9121  0729  3E02               	addlw	2
  9122  072A  0086               	movwf	6
  9123  072B  0187               	clrf	7
  9124  072C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9125  072D  3FC0               	movwi [0]fsr1
  9126  072E  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9127  072F  3FC1               	movwi [1]fsr1
  9128                           
  9129                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9130  0730  3080               	movlw	128
  9131  0731  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9132  0732  086B               	movf	_pBDTEntryEP0OutNext,w
  9133  0733  0086               	movwf	6
  9134  0734  0187               	clrf	7
  9135  0735  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9136  0736  0081               	movwf	1
  9137  0737  0008               	return
  9138  0738                     __end_of_USBCtrlEPAllowStatusStage:	
  9139                           
  9140                           	psect	text43
  9141  0738                     __ptext43:	
  9142 ;; *************** function _USBCtrlTrfInHandler *****************
  9143 ;; Defined at:
  9144 ;;		line 2609 in file "../../../../../../framework/usb/src/usb_device.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;		None
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  lastDTS         1    5[COMMON] unsigned char 
  9149 ;; Return value:  Size  Location     Type
  9150 ;;		None               void
  9151 ;; Registers used:
  9152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;Total ram usage:        3 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; Hardware stack levels required when called:    1
  9165 ;; This function calls:
  9166 ;;		_USBCtrlTrfTxService
  9167 ;; This function is called by:
  9168 ;;		_USBCtrlEPService
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           
  9173                           ;psect for function _USBCtrlTrfInHandler
  9174  0738                     _USBCtrlTrfInHandler:	
  9175                           
  9176                           ;usb_device.c: 2611: uint8_t lastDTS;
  9177                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9178                           
  9179                           ;incstack = 0
  9180                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9181  0738  0021               	movlb	1	; select bank1
  9182  0739  0840               	movf	_pBDTEntryIn^(0+128),w
  9183  073A  0086               	movwf	6
  9184  073B  0187               	clrf	7
  9185  073C  3000               	movlw	0
  9186  073D  1B01               	btfsc	1,6
  9187  073E  3001               	movlw	1
  9188  073F  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  9189                           
  9190                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9191  0740  3004               	movlw	4
  9192  0741  00F3               	movwf	??_USBCtrlTrfInHandler
  9193  0742  0873               	movf	??_USBCtrlTrfInHandler,w
  9194  0743  06C0               	xorwf	_pBDTEntryIn^(0+128),f
  9195                           
  9196                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
  9197  0744  3008               	movlw	8
  9198  0745  0649               	xorwf	_USBDeviceState^(0+128),w	;volatile
  9199  0746  1D03               	btfss	3,2
  9200  0747  2F57               	goto	i1l3370
  9201                           
  9202                           ;usb_device.c: 2622: {
  9203                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
  9204  0748  0020               	movlb	0	; select bank0
  9205  0749  0842               	movf	66,w	;volatile
  9206  074A  397F               	andlw	127
  9207  074B  003D               	movlb	29	; select bank29
  9208  074C  0096               	movwf	22	;volatile
  9209                           
  9210                           ;usb_device.c: 2624: if(UADDR != 0u)
  9211  074D  0816               	movf	22,w	;volatile
  9212  074E  1903               	btfsc	3,2
  9213  074F  2F52               	goto	i1l3368
  9214                           
  9215                           ;usb_device.c: 2625: {
  9216                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
  9217  0750  3010               	movlw	16
  9218  0751  2F53               	goto	L12
  9219  0752                     i1l3368:	
  9220                           ;usb_device.c: 2627: }
  9221                           
  9222                           
  9223                           ;usb_device.c: 2628: else
  9224                           ;usb_device.c: 2629: {
  9225                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
  9226  0752  3004               	movlw	4
  9227  0753                     L12:	
  9228  0753  00F3               	movwf	??_USBCtrlTrfInHandler
  9229  0754  0873               	movf	??_USBCtrlTrfInHandler,w
  9230  0755  0021               	movlb	1	; select bank1
  9231  0756  00C9               	movwf	_USBDeviceState^(0+128)	;volatile
  9232  0757                     i1l3370:	
  9233                           
  9234                           ;usb_device.c: 2631: }
  9235                           ;usb_device.c: 2632: }
  9236                           ;usb_device.c: 2635: if(controlTransferState == 1)
  9237  0757  0020               	movlb	0	; select bank0
  9238  0758  0368               	decf	_controlTransferState,w	;volatile
  9239  0759  1D03               	btfss	3,2
  9240  075A  2F9A               	goto	i1l599
  9241                           
  9242                           ;usb_device.c: 2636: {
  9243                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  9244  075B  3048               	movlw	72
  9245  075C  00F3               	movwf	??_USBCtrlTrfInHandler
  9246  075D  3000               	movlw	0
  9247  075E  00F4               	movwf	??_USBCtrlTrfInHandler+1
  9248  075F  0021               	movlb	1	; select bank1
  9249  0760  0840               	movf	_pBDTEntryIn^(0+128),w
  9250  0761  3E02               	addlw	2
  9251  0762  0086               	movwf	6
  9252  0763  0187               	clrf	7
  9253  0764  0873               	movf	??_USBCtrlTrfInHandler,w
  9254  0765  3FC0               	movwi [0]fsr1
  9255  0766  0874               	movf	??_USBCtrlTrfInHandler+1,w
  9256  0767  3FC1               	movwi [1]fsr1
  9257                           
  9258                           ;usb_device.c: 2638: USBCtrlTrfTxService();
  9259  0768  318F  279B  3187   	fcall	_USBCtrlTrfTxService
  9260                           
  9261                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
  9262  076B  3002               	movlw	2
  9263  076C  0020               	movlb	0	; select bank0
  9264  076D  066C               	xorwf	_shortPacketStatus,w	;volatile
  9265  076E  1D03               	btfss	3,2
  9266  076F  2F7D               	goto	i1l3380
  9267                           
  9268                           ;usb_device.c: 2645: {
  9269                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
  9270  0770  3004               	movlw	4
  9271  0771  00F3               	movwf	??_USBCtrlTrfInHandler
  9272  0772  0021               	movlb	1	; select bank1
  9273  0773  0840               	movf	_pBDTEntryIn^(0+128),w
  9274  0774  0086               	movwf	6
  9275  0775  0187               	clrf	7
  9276  0776  0873               	movf	??_USBCtrlTrfInHandler,w
  9277  0777  0081               	movwf	1
  9278                           
  9279                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9280  0778  0840               	movf	_pBDTEntryIn^(0+128),w
  9281  0779  0086               	movwf	6
  9282  077A  0187               	clrf	7
  9283  077B  1781               	bsf	1,7
  9284                           
  9285                           ;usb_device.c: 2650: }
  9286  077C  0008               	return
  9287  077D                     i1l3380:	
  9288                           
  9289                           ;usb_device.c: 2651: else
  9290                           ;usb_device.c: 2652: {
  9291                           ;usb_device.c: 2653: if(lastDTS == 0)
  9292  077D  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
  9293  077E  1D03               	btfss	3,2
  9294  077F  2F8D               	goto	i1l3384
  9295                           
  9296                           ;usb_device.c: 2654: {
  9297                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9298  0780  3048               	movlw	72
  9299  0781  00F3               	movwf	??_USBCtrlTrfInHandler
  9300  0782  0021               	movlb	1	; select bank1
  9301  0783  0840               	movf	_pBDTEntryIn^(0+128),w
  9302  0784  0086               	movwf	6
  9303  0785  0187               	clrf	7
  9304  0786  0873               	movf	??_USBCtrlTrfInHandler,w
  9305  0787  0081               	movwf	1
  9306                           
  9307                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9308  0788  0840               	movf	_pBDTEntryIn^(0+128),w
  9309  0789  0086               	movwf	6
  9310  078A  0187               	clrf	7
  9311  078B  1781               	bsf	1,7
  9312                           
  9313                           ;usb_device.c: 2657: }
  9314  078C  0008               	return
  9315  078D                     i1l3384:	
  9316                           
  9317                           ;usb_device.c: 2658: else
  9318                           ;usb_device.c: 2659: {
  9319                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9320  078D  3008               	movlw	8
  9321  078E  00F3               	movwf	??_USBCtrlTrfInHandler
  9322  078F  0021               	movlb	1	; select bank1
  9323  0790  0840               	movf	_pBDTEntryIn^(0+128),w
  9324  0791  0086               	movwf	6
  9325  0792  0187               	clrf	7
  9326  0793  0873               	movf	??_USBCtrlTrfInHandler,w
  9327  0794  0081               	movwf	1
  9328                           
  9329                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9330  0795  0840               	movf	_pBDTEntryIn^(0+128),w
  9331  0796  0086               	movwf	6
  9332  0797  0187               	clrf	7
  9333  0798  1781               	bsf	1,7
  9334                           
  9335                           ;usb_device.c: 2662: }
  9336                           ;usb_device.c: 2663: }
  9337                           ;usb_device.c: 2664: }
  9338  0799  0008               	return
  9339  079A                     i1l599:	
  9340                           
  9341                           ;usb_device.c: 2665: else
  9342                           ;usb_device.c: 2666: {
  9343                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
  9344  079A  0021               	movlb	1	; select bank1
  9345  079B  1FAE               	btfss	(_outPipes^(0+128)+2),7	;volatile
  9346  079C  2FA0               	goto	i1l3388
  9347                           
  9348                           ;usb_device.c: 2673: {
  9349                           ;usb_device.c: 2674: outPipes[0].pFunc();
  9350  079D  0831               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  9351  079E  0832               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  9352                           
  9353                           ;usb_device.c: 2675: }
  9354                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
  9355  079F  13AE               	bcf	(_outPipes^(0+128)+2),7	;volatile
  9356  07A0                     i1l3388:	
  9357                           
  9358                           ;usb_device.c: 2677: }
  9359                           ;usb_device.c: 2679: controlTransferState = 0;
  9360  07A0  0020               	movlb	0	; select bank0
  9361  07A1  01E8               	clrf	_controlTransferState	;volatile
  9362  07A2  0008               	return
  9363  07A3                     __end_of_USBCtrlTrfInHandler:	
  9364                           
  9365                           	psect	text44
  9366  0F9B                     __ptext44:	
  9367 ;; *************** function _USBCtrlTrfTxService *****************
  9368 ;; Defined at:
  9369 ;;		line 1789 in file "../../../../../../framework/usb/src/usb_device.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;		None
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  byteToSend      1    2[COMMON] unsigned char 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;		None               void
  9376 ;; Registers used:
  9377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;Total ram usage:        3 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; This function calls:
  9390 ;;		Nothing
  9391 ;; This function is called by:
  9392 ;;		_USBCtrlEPAllowDataStage
  9393 ;;		_USBCtrlTrfInHandler
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           
  9398                           ;psect for function _USBCtrlTrfTxService
  9399  0F9B                     _USBCtrlTrfTxService:	
  9400                           
  9401                           ;usb_device.c: 1791: uint8_t byteToSend;
  9402                           ;usb_device.c: 1795: byteToSend = 8;
  9403                           
  9404                           ;incstack = 0
  9405                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  9406  0F9B  3008               	movlw	8
  9407  0F9C  00F0               	movwf	??_USBCtrlTrfTxService
  9408  0F9D  0870               	movf	??_USBCtrlTrfTxService,w
  9409  0F9E  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9410                           
  9411                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
  9412  0F9F  3000               	movlw	0
  9413  0FA0  0021               	movlb	1	; select bank1
  9414  0FA1  0237               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  9415  0FA2  3008               	movlw	8
  9416  0FA3  1903               	skipnz
  9417  0FA4  0236               	subwf	(_inPipes^(0+128)+3),w	;volatile
  9418  0FA5  1803               	skipnc
  9419  0FA6  2FB8               	goto	i1l499
  9420                           
  9421                           ;usb_device.c: 1797: {
  9422                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
  9423  0FA7  0836               	movf	(_inPipes^(0+128)+3),w	;volatile
  9424  0FA8  00F0               	movwf	??_USBCtrlTrfTxService
  9425  0FA9  0870               	movf	??_USBCtrlTrfTxService,w
  9426  0FAA  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9427                           
  9428                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
  9429  0FAB  0020               	movlb	0	; select bank0
  9430  0FAC  086C               	movf	_shortPacketStatus,w	;volatile
  9431  0FAD  1D03               	btfss	3,2
  9432  0FAE  2FB1               	goto	i1l2880
  9433                           
  9434                           ;usb_device.c: 1806: {
  9435                           ;usb_device.c: 1807: shortPacketStatus = 1;
  9436  0FAF  3001               	movlw	1
  9437  0FB0  2FB5               	goto	L13
  9438  0FB1                     i1l2880:	
  9439                           ;usb_device.c: 1808: }
  9440                           
  9441                           
  9442                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
  9443  0FB1  036C               	decf	_shortPacketStatus,w	;volatile
  9444  0FB2  1D03               	btfss	3,2
  9445  0FB3  2FB8               	goto	i1l499
  9446                           
  9447                           ;usb_device.c: 1810: {
  9448                           ;usb_device.c: 1811: shortPacketStatus = 2;
  9449  0FB4  3002               	movlw	2
  9450  0FB5                     L13:	
  9451  0FB5  00F0               	movwf	??_USBCtrlTrfTxService
  9452  0FB6  0870               	movf	??_USBCtrlTrfTxService,w
  9453  0FB7  00EC               	movwf	_shortPacketStatus	;volatile
  9454  0FB8                     i1l499:	
  9455                           
  9456                           ;usb_device.c: 1812: }
  9457                           ;usb_device.c: 1813: }
  9458                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
  9459  0FB8  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9460  0FB9  00F0               	movwf	??_USBCtrlTrfTxService
  9461  0FBA  01F1               	clrf	??_USBCtrlTrfTxService+1
  9462  0FBB  0870               	movf	??_USBCtrlTrfTxService,w
  9463  0FBC  0021               	movlb	1	; select bank1
  9464  0FBD  02B6               	subwf	(_inPipes^(0+128)+3),f	;volatile
  9465  0FBE  0871               	movf	??_USBCtrlTrfTxService+1,w
  9466  0FBF  3BB7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
  9467                           
  9468                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
  9469  0FC0  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9470  0FC1  00F0               	movwf	??_USBCtrlTrfTxService
  9471  0FC2  0A40               	incf	_pBDTEntryIn^(0+128),w
  9472  0FC3  0086               	movwf	6
  9473  0FC4  0187               	clrf	7
  9474  0FC5  0870               	movf	??_USBCtrlTrfTxService,w
  9475  0FC6  0081               	movwf	1
  9476                           
  9477                           ;usb_device.c: 1826: pDst = (volatile uint8_t*)CtrlTrfData;
  9478  0FC7  3048               	movlw	72
  9479  0FC8  00F0               	movwf	??_USBCtrlTrfTxService
  9480  0FC9  0870               	movf	??_USBCtrlTrfTxService,w
  9481  0FCA  00CD               	movwf	_pDst^(0+128)
  9482                           
  9483                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9484  0FCB  1C35               	btfss	(_inPipes^(0+128)+2),0	;volatile
  9485  0FCC  2FE3               	goto	i1l2900
  9486  0FCD  2FFC               	goto	i1l2910
  9487  0FCE                     i1l2892:	
  9488                           ;usb_device.c: 1828: {
  9489                           ;usb_device.c: 1829: while(byteToSend)
  9490                           
  9491                           
  9492                           ;usb_device.c: 1830: {
  9493                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
  9494  0FCE  0833               	movf	_inPipes^(0+128),w	;volatile
  9495  0FCF  0084               	movwf	4
  9496  0FD0  0834               	movf	(_inPipes+1)^(0+128),w	;volatile
  9497  0FD1  0085               	movwf	5
  9498  0FD2  0800               	movf	0,w	;code access
  9499  0FD3  00F0               	movwf	??_USBCtrlTrfTxService
  9500  0FD4  084D               	movf	_pDst^(0+128),w
  9501  0FD5  0086               	movwf	6
  9502  0FD6  0187               	clrf	7
  9503  0FD7  0870               	movf	??_USBCtrlTrfTxService,w
  9504  0FD8  0081               	movwf	1
  9505  0FD9  3001               	movlw	1
  9506  0FDA  07B3               	addwf	_inPipes^(0+128),f	;volatile
  9507  0FDB  3000               	movlw	0
  9508  0FDC  3DB4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  9509  0FDD  3001               	movlw	1
  9510  0FDE  00F0               	movwf	??_USBCtrlTrfTxService
  9511  0FDF  0870               	movf	??_USBCtrlTrfTxService,w
  9512  0FE0  07CD               	addwf	_pDst^(0+128),f
  9513                           
  9514                           ;usb_device.c: 1832: byteToSend--;
  9515  0FE1  3001               	movlw	1
  9516  0FE2  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
  9517  0FE3                     i1l2900:	
  9518  0FE3  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9519  0FE4  1903               	btfsc	3,2
  9520  0FE5  0008               	return
  9521  0FE6  2FCE               	goto	i1l2892
  9522  0FE7                     i1l2902:	
  9523                           ;usb_device.c: 1835: else
  9524                           ;usb_device.c: 1836: {
  9525                           ;usb_device.c: 1837: while(byteToSend)
  9526                           
  9527                           ;usb_device.c: 1833: }
  9528                           ;usb_device.c: 1834: }
  9529                           
  9530                           
  9531                           ;usb_device.c: 1838: {
  9532                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
  9533  0FE7  0833               	movf	_inPipes^(0+128),w	;volatile
  9534  0FE8  0084               	movwf	4
  9535  0FE9  0834               	movf	(_inPipes+1)^(0+128),w	;volatile
  9536  0FEA  0085               	movwf	5
  9537  0FEB  0800               	movf	0,w	;code access
  9538  0FEC  00F0               	movwf	??_USBCtrlTrfTxService
  9539  0FED  084D               	movf	_pDst^(0+128),w
  9540  0FEE  0086               	movwf	6
  9541  0FEF  0187               	clrf	7
  9542  0FF0  0870               	movf	??_USBCtrlTrfTxService,w
  9543  0FF1  0081               	movwf	1
  9544  0FF2  3001               	movlw	1
  9545  0FF3  07B3               	addwf	_inPipes^(0+128),f	;volatile
  9546  0FF4  3000               	movlw	0
  9547  0FF5  3DB4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  9548  0FF6  3001               	movlw	1
  9549  0FF7  00F0               	movwf	??_USBCtrlTrfTxService
  9550  0FF8  0870               	movf	??_USBCtrlTrfTxService,w
  9551  0FF9  07CD               	addwf	_pDst^(0+128),f
  9552                           
  9553                           ;usb_device.c: 1840: byteToSend--;
  9554  0FFA  3001               	movlw	1
  9555  0FFB  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
  9556  0FFC                     i1l2910:	
  9557  0FFC  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9558  0FFD  1903               	btfsc	3,2
  9559  0FFE  0008               	return
  9560  0FFF  2FE7               	goto	i1l2902
  9561  1000                     __end_of_USBCtrlTrfTxService:	
  9562  007E                     btemp	set	126	;btemp
  9563  007E                     int$flags	set	126
  9564  007E                     wtemp	set	126
  9565  007E                     wtemp0	set	126
  9566  0080                     wtemp1	set	128
  9567  0082                     wtemp2	set	130
  9568  0084                     wtemp3	set	132
  9569  0086                     wtemp4	set	134
  9570  0088                     wtemp5	set	136
  9571  007F                     wtemp6	set	127
  9572  007E                     ttemp	set	126
  9573  007E                     ttemp0	set	126
  9574  0081                     ttemp1	set	129
  9575  0084                     ttemp2	set	132
  9576  0087                     ttemp3	set	135
  9577  007F                     ttemp4	set	127
  9578  007E                     ltemp	set	126
  9579  007E                     ltemp0	set	126
  9580  0082                     ltemp1	set	130
  9581  0086                     ltemp2	set	134
  9582  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    220
    Data        0
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     20      32
    BANK1            77      5      50
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), CtrlTrfData(BANK0[8]), SetupPkt(BANK0[8]), mouseReport(BANK1[3]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), BDT(BANK0[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(1) Largest target is 3
		 -> mouseReport(BANK1[3]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S655$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S645$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S645$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S621$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S621$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S621$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S621$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 34
		 -> configDescriptor1(CODE[34]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S70$handle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    mouse.inputReport.handle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceMouseInitialize
    i1_SYSTEM_Initialize->i1_BUTTON_Enable
    i1_SYSTEM_Initialize->i1_LED_Enable
    _USBCheckHIDRequest->_APP_DeviceMouseIdleRateCallback
    _APP_DeviceMouseIdleRateCallback->___bmul
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _APP_DeviceMouseSOFHandler->_USBTransferOnePacket
    _APP_DeviceMouseInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _main->_USBDeviceInit
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceMouseTasks->_BUTTON_IsPressed

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     427
               _APP_DeviceMouseTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     272
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 BANK1      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMouseTasks                                 2     2      0      89
                                              1 BANK1      2     2      0
                   _BUTTON_IsPressed
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _SYS_InterruptHigh                                    1     1      0   31201
                                             19 BANK0      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       3     3      0   31201
                                             16 BANK0      3     3      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (5) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   1     1      0    4207
                                              5 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           1     1      0    4207
                                              5 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     3     3      0   18262
                                             13 BANK0      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               1     1      0   18033
                                             12 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   1     1      0   13734
                                             11 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  5     5      0    4891
                                              5 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (9) _memset                                               7     3      4     524
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    4590
                                              5 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5    4207
                                              0 BANK0      5     0      5
          _APP_DeviceMouseInitialize
          _APP_DeviceMouseSOFHandler
             _APP_LEDUpdateUSBStatus
                 _USBCheckHIDRequest
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (6) i1_SYSTEM_Initialize                                  1     1      0      66
                                              1 COMMON     1     1      0
                    i1_BUTTON_Enable
                       i1_LED_Enable
 ---------------------------------------------------------------------------------
 (7) i1_LED_Enable                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_BUTTON_Enable                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCheckHIDRequest                                   1     1      0     162
                                              9 COMMON     1     1      0
    _APP_DeviceMouseIdleRateCallback
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceMouseIdleRateCallback                      5     4      1     162
                                              4 COMMON     5     4      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (8) ___bmul                                               4     3      1       7
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (7) _LED_On                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _LED_Off                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _APP_DeviceMouseSOFHandler                            3     3      0     599
                                              7 COMMON     3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     4      3     599
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (6) _APP_DeviceMouseInitialize                            1     1      0     644
                                             13 COMMON     1     1      0
                  _USBEnableEndpoint
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    6     5      1     644
                                              7 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 7     6      1     400
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceMouseTasks
     _BUTTON_IsPressed
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceMouseInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
               _APP_DeviceMouseSOFHandler
                 _USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckHIDRequest
                 _APP_DeviceMouseIdleRateCallback
                   ___bmul
               i1_SYSTEM_Initialize
                 i1_BUTTON_Enable
                 i1_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceMouseInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
               _APP_DeviceMouseSOFHandler
                 _USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckHIDRequest
                 _APP_DeviceMouseIdleRateCallback
                   ___bmul
               i1_SYSTEM_Initialize
                 i1_BUTTON_Enable
                 i1_LED_Enable
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceMouseInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
             _APP_DeviceMouseSOFHandler
               _USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _USBCheckHIDRequest
               _APP_DeviceMouseIdleRateCallback
                 ___bmul
             i1_SYSTEM_Initialize
               i1_BUTTON_Enable
               i1_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceMouseInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
           _APP_DeviceMouseSOFHandler
             _USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _USBCheckHIDRequest
             _APP_DeviceMouseIdleRateCallback
               ___bmul
           i1_SYSTEM_Initialize
             i1_BUTTON_Enable
             i1_LED_Enable
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceMouseInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
         _APP_DeviceMouseSOFHandler
           _USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckHIDRequest
           _APP_DeviceMouseIdleRateCallback
             ___bmul
         i1_SYSTEM_Initialize
           i1_BUTTON_Enable
           i1_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceMouseInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
         _APP_DeviceMouseSOFHandler
           _USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckHIDRequest
           _APP_DeviceMouseIdleRateCallback
             ___bmul
         i1_SYSTEM_Initialize
           i1_BUTTON_Enable
           i1_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceMouseInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
       _APP_DeviceMouseSOFHandler
         _USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _USBCheckHIDRequest
         _APP_DeviceMouseIdleRateCallback
           ___bmul
       i1_SYSTEM_Initialize
         i1_BUTTON_Enable
         i1_LED_Enable
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     14      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            4D      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               4D      5      32       7       64.9%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      60      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      60      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Feb  2 20:05:19 2016

                              _USB_SD_Ptr 0126                                         pc 0002  
                          ___bmul@product 0072                               __CFG_CP$OFF 0000  
                                      l14 0B94                               ?_LED_Enable 0070  
                           _USBDeviceInit 02DC                        _USBCheckHIDRequest 04BA  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0050      USER_USB_CALLBACK_EVENT_HANDLER@pdata 0052  
                                     l209 0AD5                                       l401 0321  
                                     l260 0B29                                       l261 0B2B  
             __end_of_USBStdGetDscHandler 06CD                                       l263 0B37  
                                     l257 0B25                                       l259 0B27  
                                     l461 0C27                                       _BDT 0020  
                                     _UIE 0E92                                       _UIR 0E90  
                  _APP_LEDUpdateUSBStatus 0E3E                                _USBSuspend 0BFA  
                    USBStdSetCfgHandler@i 0059                      USBStdSetCfgHandler@p 0056  
             __end_ofi1_SYSTEM_Initialize 0B22                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 0202  
                     ?_USBCheckHIDRequest 0070                              __CFG_FOSC$HS 0000  
                          _USBDeviceState 00C9        __size_of_APP_DeviceMouseInitialize 000F  
                           _BUTTON_Enable 0ACB                                      S3992 081A  
              ?_APP_DeviceMouseInitialize 0070                     ??_USBCtrlTrfRxService 0072  
                USBEnableEndpoint@options 0077                              __CFG_LVP$OFF 0000  
                         __end_of_LED_Off 0BAE                                      l3410 0B51  
                                    l3420 0B5A                USBConfigureEndpoint@handle 0076  
                                    l3422 0B63                                      l3414 0B58  
                                    l3800 0B42                                      l3394 0B2D  
                                    l3722 0308                                      l3714 02FB  
                                    l3706 02EB                                      l3574 0B80  
                                    l3734 0326                                      l3578 0B88  
                                    l3762 0361                                      l3756 0345  
                                    l3790 0C2C                                      u3215 030B  
                                    u3160 0C67                                      u3170 0C68  
                                    i1l14 0B21                                      i1l59 0F82  
                   ??_USBCtrlTrfTxService 0070                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                              __CFG_WRT$OFF 0000  
  USBStdFeatureReqHandler@current_ep_data 0059                                      _pDst 00CD  
                                    _main 0B38                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                           _USBDeviceAttach 0C16  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    ltemp 007E                                      start 0010  
                                    ttemp 007E                                      wtemp 007E  
                           __CFG_IESO$OFF 0000                      ??_USBCheckHIDRequest 0079  
              __end_of_USBCheckStdRequest 0F37                    ??_USBCtrlTrfOutHandler 0076  
                       ___bmul@multiplier 0073                       USBDeviceInit@i_1231 00D3  
               ??_USBStdFeatureReqHandler 0055                  ??_USBStdGetStatusHandler 0070  
                          ?_USBDeviceInit 0070                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 0087  
                  __end_of_USBDeviceTasks 02DC                 ?_USBCtrlEPServiceComplete 0070  
                                   i1l104 0D64                                     i1l220 0BB6  
                                   i1l221 0BB9                                     i1l230 0B9D  
                                   i1l231 0BA0                                     i1l223 0BC6  
                                   i1l233 0BAD                                     i1l217 0BB0  
                                   i1l209 0ACA                                     i1l401 03C6  
                                   i1l227 0B97                                     i1l219 0BB3  
                                   i1l260 0BCF                                     i1l412 0225  
                                   i1l229 0B9A                                     i1l261 0BD2  
                                   i1l422 0288                                     i1l263 0BDF  
                                   i1l423 02D9                                     i1l424 0291  
                                   i1l257 0BC9                                     i1l514 043B  
                                   i1l418 0260                                     i1l259 0BCC  
                                   i1l611 0F36                                     i1l613 0EE1  
                                   i1l622 0F14                                     i1l551 0DF8  
                                   i1l634 0081                                     i1l554 0E31  
                                   i1l635 0082                                     i1l555 0E01  
                                   i1l556 0E04                                     i1l486 058A  
                                   i1l647 00E6                                     i1l681 0547  
                                   i1l499 0FB8                                     i1l599 079A  
                                   _UADDR 0E96                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 006B                            __CFG_FCMEN$OFF 0000  
                          ?_BUTTON_Enable 0070           __end_of_USBCtrlEPAllowDataStage 07F8  
                                   _sd000 01FE                                     _sd001 0136  
                                   _sd002 019C            ?_USBIncrement1msInternalTimers 0070  
       __end_of_APP_DeviceMouseInitialize 0AE5                 __size_of_BUTTON_IsPressed 0017  
                         __end_of_xVector 0130                                     _mouse 00A3  
                         __end_of_yVector 0134                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                       __size_of_LED_Enable 0016  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                    ??_APP_DeviceMouseTasks 00D1  
            __size_of_USBStdSetCfgHandler 007F                            __CFG_MCLRE$OFF 0000  
                         __initialization 0012               ??_APP_DeviceMouseSOFHandler 0077  
                            __end_of_main 0B4E                            __CFG_LPBOR$OFF 0000  
               __size_of_USBCtrlEPService 004E                                    ??_main 00D5  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                               ??_LED_Off 0070                       __CFG_USBLSCLK$48MHz 0000  
                         i1_USBDeviceInit 0383                   __end_of_USBDeviceAttach 0C32  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    i1S4000 0824  
                                  i1S4002 082E                                    i1S4004 0838  
                                  i1S3994 0800                                    _ADRESH 009C  
                                  _ADRESL 009B                    SYSTEM_Initialize@state 00D1  
                           ?i1_LED_Enable 0070                                    i1l3012 060F  
                                  i1l3102 003B                                    i1l3006 05FD  
                                  i1l3104 003D                                    i1l3040 0663  
                                  i1l3050 0699                                    i1l3036 0659  
                                  i1l3028 0638                                    i1l3204 0598  
                                  i1l3212 05A2                                    i1l3142 00B1  
                                  i1l3126 008A                                    i1l3118 0068  
                                  i1l3062 06C0                                    i1l3302 0F20  
                                  i1l3152 00D5                                    i1l3136 00A2  
                                  i1l3056 06BA                                    i1l3048 0696  
                                  i1l3242 0443                                    i1l2602 0D0F  
                                  i1l2610 0AE7                                    i1l3162 00EC  
                                  i1l3154 00DA                                    i1l3138 00A8  
                                  i1l3058 06BD                                    i1l3074 0E0D  
                                  i1l3306 0F2B                                    i1l3244 045B  
                                  i1l3084 0E25                                    i1l3254 0484  
                                  i1l3342 0CBC                                    i1l2630 0C7D  
                                  i1l2614 0AED                                    i1l3166 0109  
                                  i1l3182 055A                                    i1l3256 0490  
                                  i1l3168 0111                                    i1l3280 0EF0  
                                  i1l3520 03AD                                    i1l3512 03A1  
                                  i1l3504 0391                                    i1l3600 021F  
                                  i1l3370 0757                                    i1l3354 0CE2  
                                  i1l2626 0C76                                    i1l2650 0DC0  
                                  i1l2642 0DB3                                    i1l2810 04E2  
                                  i1l3290 0F01                                    i1l3186 055E  
                                  i1l2900 0FE3                                    i1l3380 077D  
                                  i1l2660 0DEA                                    i1l2716 0F44  
                                  i1l2804 04D4                                    i1l2812 04EE  
                                  i1l3292 0F04                                    i1l3276 0EEA  
                                  i1l3436 0C43                                    i1l3532 03CB  
                                  i1l3620 023F                                    i1l2902 0FE7  
                                  i1l2910 0FFC                                    i1l2734 0F76  
                                  i1l2670 0BA3                                    i1l2822 0504  
                                  i1l3278 0EED                                    i1l3470 0CAF  
                                  i1l3438 0C4C                                    i1l3614 0239  
                                  i1l3384 078D                                    i1l3368 0752  
                                  i1l2728 0F59                                    i1l2680 0BBC  
                                  i1l2760 0E4F                                    i1l2832 0526  
                                  i1l2816 04F6                                    i1l2840 0B0E  
                                  i1l3288 0EFE                                    i1l3560 0404  
                                  i1l2826 0518                                    i1l3490 0ECE  
                                  i1l3554 03E8                                    i1l3650 0280  
                                  i1l3642 026D                                    i1l3626 0251  
                                  i1l3388 07A0                                    i1l2748 0F89  
                                  i1l2772 0E69                                    i1l2764 0E5A  
                                  i1l2756 0E45                                    i1l2836 0532  
                                  i1l2844 0B16                                    i1l2852 0D28  
                                  i1l3468 0CAD                                    i1l3636 0266  
                                  i1l2782 0E7F                                    i1l2854 0D2F  
                                  i1l2862 0D3C                                    i1l2918 0BE5  
                                  i1l3670 02AC                                    i1l2880 0FB1  
                                  i1l2936 06F2                                    i1l2776 0E74  
                                  i1l2768 0E5F                                    i1l2784 0E85  
                                  i1l2696 0BD5                                    i1l2856 0D36  
                                  i1l2848 0D22                                    i1l3488 0ECB  
                                  i1l3592 0212                                    i1l2858 0D39  
                                  i1l2892 0FCE                                    i1l2972 07DD  
                                  i1l3676 02C1                                    i1l2798 04C8  
                                  i1l3678 02D0                                    i1l2968 07CA  
                                  _LED_On 0BAE                                    i1l2996 05EA  
                                  i1l2988 05DA                                    i1l3996 0D45  
                                  i1l3998 0D5F                                    u218_25 07D4  
                                  u173_25 0CED                                    u174_25 0CF3  
                                  u175_25 0CFB                                    u257_25 0435  
                                  u285_25 03B0                                    u278_25 0E98  
                         i1_BUTTON_Enable 0AC1                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 006C                           USBDeviceTasks@i 0062  
             USBStdFeatureReqHandler@pUEP 0057                  USBTransferOnePacket@data 0071  
              USBCtrlTrfInHandler@lastDTS 0075                           ??_USBDeviceInit 00D0  
                                  ___bmul 0AE5                            __CFG_STVREN$ON 0000  
                       _USBEnableEndpoint 0C6E           __size_of_USBStdGetStatusHandler 004A  
                                  _memset 0BE0                        ?_USBEnableEndpoint 0077  
           __size_of_USBTransferOnePacket 0048                           ??_BUTTON_Enable 00D0  
               _APP_DeviceMouseSOFHandler 0F37                       ??_USBEnableEndpoint 0078  
                             _CtrlTrfData 0048                            ??i1_LED_Enable 0070  
                    _controlTransferState 0068                         _SYSTEM_Initialize 0B7D  
                 __end_of__initialization 0021                        ?_SYSTEM_Initialize 0070  
                __size_of_USBStallHandler 0026                       ___bmul@multiplicand 0070  
                     __size_of_USBSuspend 001C                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 0C8E                             __end_of_sd000 0202  
                           __end_of_sd001 016A                             __end_of_sd002 01CA  
                     ??_SYSTEM_Initialize 00D1                                 LED_On@led 0070  
        __size_of_USBCtrlEPAllowDataStage 0055                           _active_protocol 00CE  
                            ??_LED_Enable 00D0             __size_of_USBConfigureEndpoint 003C  
                 __end_ofi1_USBDeviceInit 0425               __end_of_USBCtrlTrfInHandler 07A3  
                 ?_APP_LEDUpdateUSBStatus 0070                   __end_ofi1_BUTTON_Enable 0ACB  
                ??_USBCtrlTrfSetupHandler 005C                   _USBTicksSinceSuspendEnd 00CC  
             ??_APP_DeviceMouseInitialize 007D                          ?_USBDeviceAttach 0070  
               __end_of_SYSTEM_Initialize 0B95                          _BUTTON_IsPressed 0B4E  
                  _USBStdGetStatusHandler 0DF4                                __pbssBANK0 0064  
                              __pbssBANK1 00A3                                   ?_LED_On 0070  
                      __end_of_LED_Enable 0B38               __size_of_USBWakeFromSuspend 001D  
                             _pBDTEntryIn 00C0          __end_of_USBCtrlEPServiceComplete 05CF  
                              __pmaintext 0B38                      USBCtrlTrfRxService@i 0074  
                   i1BUTTON_Enable@button 0070                                   ?___bmul 0070  
                           LED_Enable@led 00D0                           __CFG_PLLMULT$4x 0000  
          __end_of_APP_LEDUpdateUSBStatus 0E8B                                __pintentry 0004  
                                 ?_memset 0070                                _device_dsc 01EC  
                        _USBCtrlEPService 0E8B                                _ep_data_in 00BC  
             __end_of_USBCtrlTrfRxService 04BA                        _USBCheckStdRequest 0ED9  
                       _configDescriptor1 01CA                                   _LED_Off 0B95  
             __end_of_USBCtrlTrfTxService 1000                                   u280_2m0 0EC4  
                     _USBStdSetCfgHandler 05CF                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
                                 _UIRbits 0E90              __size_ofi1_SYSTEM_Initialize 0016  
                         __size_of_LED_On 0019            APP_LEDUpdateUSBStatus@ledCount 0064  
         ??_USBIncrement1msInternalTimers 0070                      ?_USBStdSetCfgHandler 0070  
             __size_of_USBCheckHIDRequest 008E                         __end_of_hid_rpt01 019C  
              __size_of_USBEnableEndpoint 0020                 _APP_DeviceMouseInitialize 0AD6  
                    ??_USBCheckStdRequest 005B                           __size_of___bmul 0011  
           __size_of_USBCtrlTrfOutHandler 0031                          ??_USBDeviceTasks 0060  
                       ??_USBStallHandler 0070   __end_of_APP_DeviceMouseIdleRateCallback 0B0C  
__size_of_APP_DeviceMouseIdleRateCallback 0016         ??_APP_DeviceMouseIdleRateCallback 0075  
        ?_APP_DeviceMouseIdleRateCallback 0074           _APP_DeviceMouseIdleRateCallback 0AF6  
                    __end_ofi1_LED_Enable 0BE0                          ?i1_USBDeviceInit 0070  
                         __size_of_memset 001A                 __end_of_configDescriptor1 01EC  
                                 __ptext1 02DC                                   __ptext2 0C16  
                                 __ptext3 0B7D                                   __ptext4 0B22  
                                 __ptext5 0ACB                                   __ptext6 0C4F  
                                 __ptext7 0B4E                                   __ptext9 0202  
                                 _inPipes 00B3               _USBDeferOUTDataStagePackets 00C8  
                            ??_USBSuspend 0055                                   _xVector 012C  
                                 _yVector 0130                          ?i1_BUTTON_Enable 0070  
                      __end_of_USB_CD_Ptr 0136                __size_of_SYSTEM_Initialize 0018  
         __size_of_USBCtrlTrfSetupHandler 0047                                   clrloop0 07F9  
                    end_of_initialization 0021                        __end_of_USB_SD_Ptr 012C  
                     _pBDTEntryEP0OutNext 006B                                   memset@c 0070  
                                 memset@n 0072                                   memset@p 0075  
                         _USB1msTickCount 00B8                  ?_USBStdFeatureReqHandler 0070  
                   ??_USBStdSetCfgHandler 0055             __size_of_APP_DeviceMouseTasks 001F  
                      __end_of_USBSuspend 0C16                   _USBCtrlEPAllowDataStage 07A3  
                            __pstringtext 0126                  _USBCtrlEPServiceComplete 0548  
              _USBStatusStageEnabledFlag1 00CA                _USBStatusStageEnabledFlag2 00CB  
                      USBEnableEndpoint@p 007A                                 _PORTAbits 000C  
                         i1LED_Enable@led 0070                                 _TRISBbits 008D  
                               _TRISCbits 008E                        _BothEP0OutUOWNsSet 00C4  
               USBStdSetCfgHandler@i_1573 0058                 USBConfigureEndpoint@EPNum 0075  
              ?_USBCtrlEPAllowStatusStage 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0053  
                               _USTATcopy 006F              __end_of_USBTransferOnePacket 0DF4  
                          __end_of_LED_On 0BC7   APP_DeviceMouseIdleRateCallback@idleRate 0074  
                      __CFG_PLLEN$ENABLED 0000                     i1USBDeviceInit@i_1231 0073  
                  _USBCtrlTrfSetupHandler 0D65                  __end_of_BUTTON_IsPressed 0B65  
                          __end_of___bmul 0AF6                     __end_of_USBDeviceInit 0383  
   __end_of_USBIncrement1msInternalTimers 0B7D    __size_of_USBIncrement1msInternalTimers 0018  
           _USBIncrement1msInternalTimers 0B65                                LED_Off@led 0070  
                          __end_of_memset 0BFA   APP_DeviceMouseIdleRateCallback@reportId 0078  
                       _USBBusIsSuspended 00C6                       start_initialization 0012  
                 ?_USBStdGetStatusHandler 0070                     __end_of_BUTTON_Enable 0AD6  
           USBCtrlTrfRxService@byteToRead 0075              __end_of_USBConfigureEndpoint 0D21  
         __end_of_USBStdFeatureReqHandler 0126                                  ??_LED_On 0070  
       __end_of_USBCtrlEPAllowStatusStage 0738                  __end_of_USBCtrlEPService 0ED9  
               ??_USBCtrlEPAllowDataStage 0073                            USBDeviceInit@i 00D4  
                          USBDeviceInit@p 00D1                     __size_ofi1_LED_Enable 0019  
                  _pBDTEntryEP0OutCurrent 006A                   USBTransferOnePacket@dir 0070  
                 USBTransferOnePacket@len 0072                                  ??___bmul 0071  
                     _USBStdGetDscHandler 064E                                  ??_memset 0074  
                     i1_SYSTEM_Initialize 0B0C                    BUTTON_IsPressed@button 00D0  
                  _USBActiveConfiguration 006D            __end_of_USBStdGetStatusHandler 0E3E  
                                ?_LED_Off 0070                                 ___latbits 0002  
                           __pcstackBANK0 0050                             __pcstackBANK1 00D0  
            __size_of_USBCtrlTrfInHandler 006B                      ?_USBStdGetDscHandler 0070  
                    ?i1_SYSTEM_Initialize 0070                              i1_LED_Enable 0BC7  
              __end_of_USBWakeFromSuspend 0C4F                           _USBStallHandler 0C8E  
                            _pBDTEntryOut 00C2                  __size_of_USBDeviceAttach 001C  
  APP_DeviceMouseTasks@currentButtonState 00D2                                 _hid_rpt01 016A  
                               _idle_rate 00CF                                 __pswtext1 081A  
                               __pswtext2 0800                                 __pswtext3 0824  
                               __pswtext4 082E                                 __pswtext5 0838  
                    _USBTransferOnePacket 0DAC              __end_of_USBCtrlTrfOutHandler 0CE5  
                   ??_USBStdGetDscHandler 0070                               _ep_data_out 00BE  
            __size_of_USBCtrlTrfRxService 0095             USBConfigureEndpoint@direction 0070  
                   ??i1_SYSTEM_Initialize 0071              __size_of_USBCtrlTrfTxService 0065  
                                _LATCbits 010E                __end_of_USBCheckHIDRequest 0548  
              ??_USBCtrlEPServiceComplete 0075                                 clear_ram0 07F8  
                                _PIE2bits 0092                                  _PIR2bits 0012  
                                _UEP0bits 0E98                _USBDeferINDataStagePackets 00C7  
             __size_of_USBCheckStdRequest 005E                                  _UCONbits 0E8E  
                    _USBConfigureEndpoint 0CE5          __size_of_USBStdFeatureReqHandler 0101  
                              _ADCON0bits 009D                     ?_USBTransferOnePacket 0070  
                       _SYS_InterruptHigh 0004              __end_of_APP_DeviceMouseTasks 0C6E  
                            _RemoteWakeup 00C5                          __size_of_LED_Off 0019  
                      ?_SYS_InterruptHigh 0070                  __size_ofi1_USBDeviceInit 00A2  
                 __end_of_USBStallHandler 0CB4               ??_USBCtrlEPAllowStatusStage 0070  
             __end_of_USBStdSetCfgHandler 064E                       ??_SYS_InterruptHigh 0063  
                __size_ofi1_BUTTON_Enable 000A                        __end_of_device_dsc 01FE  
                ??_APP_LEDUpdateUSBStatus 0071                   ?_USBCtrlTrfSetupHandler 0070  
                 USBStdGetStatusHandler@p 0071                    USBTransferOnePacket@ep 0075  
                                _SetupPkt 0040                     ?_USBConfigureEndpoint 0070  
                       ??_USBDeviceAttach 00D0                         ?_BUTTON_IsPressed 0070  
               __end_of_SYS_InterruptHigh 0010                        ??_BUTTON_IsPressed 00D0  
                              _ANSELBbits 018D                   __size_of_USBDeviceTasks 00DA  
                                __ptext10 0383                                  __ptext11 0C32  
                                __ptext20 05CF                                  __ptext12 0BFA  
                                __ptext21 0BE0                                  __ptext13 0C8E  
                                __ptext30 0AF6                                  __ptext22 0DF4  
                                __ptext14 0B65                                  __ptext31 0AE5  
                                __ptext23 064E                                  __ptext15 0E8B  
                                __ptext40 0CB4                                  __ptext32 0E3E  
                                __ptext24 0025                                  __ptext16 0D65  
                                __ptext41 0425                                  __ptext33 0BAE  
                                __ptext25 0D21                                  __ptext17 0548  
                                __ptext42 06CD                                  __ptext34 0B95  
                                __ptext26 0B0C                                  __ptext18 07A3  
                                __ptext43 0738                                  __ptext35 0F37  
                                __ptext27 0BC7                                  __ptext19 0ED9  
                                __ptext44 0F9B                                  __ptext36 0DAC  
                                __ptext28 0AC1                                  __ptext37 0AD6  
                                __ptext29 04BA                                  __ptext38 0C6E  
                                __ptext39 0CE5            __end_of_USBCtrlTrfSetupHandler 0DAC  
                           __size_of_main 0016                         ?_USBCtrlEPService 0070  
                      ??_USBCtrlEPService 005D        __size_of_APP_DeviceMouseSOFHandler 0064  
                     _USBCtrlTrfInHandler 0738                ?_APP_DeviceMouseSOFHandler 0070  
                     BUTTON_Enable@button 00D0                                  _outPipes 00AC  
                    _USBCtrlTrfOutHandler 0CB4                                  int$flags 007E  
               _USBCtrlEPAllowStatusStage 06CD                                _LED_Enable 0B22  
                  ??_USBTransferOnePacket 0073                 _USBDeferStatusStagePacket 0066  
                        i1USBDeviceInit@i 0074                          i1USBDeviceInit@p 0071  
                              _INTCONbits 000B                  i1SYSTEM_Initialize@state 0071  
                    ?_USBCtrlTrfInHandler 0070             USBCtrlTrfTxService@byteToSend 0072  
                                memset@p1 0076                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 005A                                  intlevel1 0000  
                  __size_of_USBDeviceInit 00A7   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0D65  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0044          ?_USER_USB_CALLBACK_EVENT_HANDLER 0050  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007E           _USER_USB_CALLBACK_EVENT_HANDLER 0D21  
                       ??i1_USBDeviceInit 0070                         __CFG_CLKOUTEN$OFF 0000  
         __size_of_APP_LEDUpdateUSBStatus 004D                      _APP_DeviceMouseTasks 0C4F  
                  ??_USBConfigureEndpoint 0071                     ?_USBCtrlTrfOutHandler 0070  
                  __size_of_BUTTON_Enable 000B         __end_of_APP_DeviceMouseSOFHandler 0F9B  
                       ??i1_BUTTON_Enable 0070                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 0425                        _USBWakeFromSuspend 0C32  
                 _USBStdFeatureReqHandler 0025                               _mouseReport 00A0  
                     _USBCtrlTrfTxService 0F9B                __size_of_SYS_InterruptHigh 000C  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0073  
                   _USBAlternateInterface 006E                       USBEnableEndpoint@ep 007C  
                         _endpoint_number 0069                      ?_USBCtrlTrfRxService 0070  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
            _USBStatusStageTimeoutCounter 0067                      ??_USBWakeFromSuspend 0055  
              USBTransferOnePacket@handle 0076                     ?_APP_DeviceMouseTasks 0070  
                              _USB_CD_Ptr 0134  
